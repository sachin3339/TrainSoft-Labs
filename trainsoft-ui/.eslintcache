[{"C:\\Users\\goutlaks\\lms\\src\\index.js":"1","C:\\Users\\goutlaks\\lms\\src\\App.js":"2","C:\\Users\\goutlaks\\lms\\src\\Screens\\Auth\\Login.js":"3","C:\\Users\\goutlaks\\lms\\src\\Components\\Header\\Header.js":"4","C:\\Users\\goutlaks\\lms\\src\\Components\\Sidebar\\Sidebar.js":"5","C:\\Users\\goutlaks\\lms\\src\\Screens\\Dashboard\\Dashboard.js":"6","C:\\Users\\goutlaks\\lms\\src\\Screens\\Home\\Home.js":"7","C:\\Users\\goutlaks\\lms\\src\\Screens\\Report\\Report.js":"8","C:\\Users\\goutlaks\\lms\\src\\Screens\\Setting\\Setting.js":"9","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\index.js":"10","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\App.js":"11","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Auth\\Login.js":"12","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Dashboard\\Dashboard.js":"13","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Header\\Header.js":"14","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Sidebar\\Sidebar.js":"15","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Home\\Home.js":"16","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Report\\Report.js":"17","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Setting\\Setting.js":"18","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Card\\Card.js":"19","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Charts\\Charts.js":"20","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Sidebar\\SidebarConfig.js":"21","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Constant\\Icon.js":"22","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Shared\\Router.js":"23","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Batches\\Batches.js":"24","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Calender\\Calender.js":"25","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Participants\\Participants.js":"26","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Labs\\Labs.js":"27","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Support\\Support.js":"28","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Services\\MethodFactory.js":"29","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\DynamicTable\\DynamicTable.js":"30"},{"size":227,"mtime":1611041483818,"results":"31","hashOfConfig":"32"},{"size":511,"mtime":1611221516407,"results":"33","hashOfConfig":"32"},{"size":1249,"mtime":1611223955242,"results":"34","hashOfConfig":"32"},{"size":1155,"mtime":1611049157547,"results":"35","hashOfConfig":"32"},{"size":740,"mtime":1611223246807,"results":"36","hashOfConfig":"32"},{"size":760,"mtime":1611221507922,"results":"37","hashOfConfig":"32"},{"size":100,"mtime":1611218733618,"results":"38","hashOfConfig":"32"},{"size":104,"mtime":1611218746757,"results":"39","hashOfConfig":"32"},{"size":107,"mtime":1611218790042,"results":"40","hashOfConfig":"32"},{"size":243,"mtime":1611726647223,"results":"41","hashOfConfig":"42"},{"size":444,"mtime":1611726647073,"results":"43","hashOfConfig":"42"},{"size":934,"mtime":1611726647151,"results":"44","hashOfConfig":"42"},{"size":1300,"mtime":1611839715487,"results":"45","hashOfConfig":"42"},{"size":2616,"mtime":1611726647125,"results":"46","hashOfConfig":"42"},{"size":596,"mtime":1611726647132,"results":"47","hashOfConfig":"42"},{"size":5338,"mtime":1611726647179,"results":"48","hashOfConfig":"42"},{"size":104,"mtime":1611726647196,"results":"49","hashOfConfig":"42"},{"size":107,"mtime":1611726647200,"results":"50","hashOfConfig":"42"},{"size":466,"mtime":1611726647104,"results":"51","hashOfConfig":"42"},{"size":2914,"mtime":1611726647111,"results":"52","hashOfConfig":"42"},{"size":1163,"mtime":1611726647136,"results":"53","hashOfConfig":"42"},{"size":14209,"mtime":1611839715470,"results":"54","hashOfConfig":"42"},{"size":484,"mtime":1611726647218,"results":"55","hashOfConfig":"42"},{"size":4566,"mtime":1611839715477,"results":"56","hashOfConfig":"42"},{"size":110,"mtime":1611726647171,"results":"57","hashOfConfig":"42"},{"size":122,"mtime":1611839715491,"results":"58","hashOfConfig":"42"},{"size":98,"mtime":1611726647187,"results":"59","hashOfConfig":"42"},{"size":107,"mtime":1611726647205,"results":"60","hashOfConfig":"42"},{"size":406,"mtime":1611726647210,"results":"61","hashOfConfig":"42"},{"size":10922,"mtime":1611839715458,"results":"62","hashOfConfig":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1x6u19f",{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"ds9ynd",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},"C:\\Users\\goutlaks\\lms\\src\\index.js",[],["127","128"],"C:\\Users\\goutlaks\\lms\\src\\App.js",["129","130"],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Auth\\Login.js",[],"C:\\Users\\goutlaks\\lms\\src\\Components\\Header\\Header.js",[],"C:\\Users\\goutlaks\\lms\\src\\Components\\Sidebar\\Sidebar.js",[],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Dashboard\\Dashboard.js",["131","132"],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Home\\Home.js",[],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Report\\Report.js",[],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Setting\\Setting.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\index.js",[],["133","134"],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\App.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Auth\\Login.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Dashboard\\Dashboard.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Header\\Header.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Sidebar\\Sidebar.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Home\\Home.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Report\\Report.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Setting\\Setting.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Card\\Card.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Charts\\Charts.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Sidebar\\SidebarConfig.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Constant\\Icon.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Shared\\Router.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Batches\\Batches.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Calender\\Calender.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Participants\\Participants.js",["135","136"],"\r\nconst Participants = () => {\r\n    return (<div>\r\n            Participants\r\n    </div>)\r\n}\r\n\r\nexport default Participants","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Labs\\Labs.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Support\\Support.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Services\\MethodFactory.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\DynamicTable\\DynamicTable.js",["137","138","139","140","141","142"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, OverlayTrigger, Dropdown, Tooltip } from 'react-bootstrap';\r\nimport { ICN_ARROW_DOWN,ICN_MORE } from '../../Constant/Icon';\r\nimport { CustomToggle } from '../../Services/MethodFactory';\r\nimport './dynamicTable.css';\r\nconst htmlParser = require('html-react-parser');\r\nconst NO_ARROW_HIGHLIGHTED = ICN_ARROW_DOWN\r\nconst HIGHLIGHT_UP_ARROW = ICN_ARROW_DOWN;\r\nconst HIGHLIGHT_DOWN_ARROW = ICN_ARROW_DOWN;\r\n/*\r\n    Sort the array by key.\r\n    @param {Array of Objects} arr - Array of object which is source data\r\n    @param {String} key - Object key which is used to sort the array\r\n    @param {Boolean} isAsc - Default ascending order is true\r\n    @return {Array of Objects} - Returns sorted array\r\n*/\r\nconst sortByKey = (arr = [], key = \"\", isAsc = true) => (Array.isArray(arr) && key) ? (arr.sort((a, b) => (typeof a[key] === 'string' ? a[key].toUpperCase() : a[key]) > (typeof b[key] === 'string' ? b[key].toUpperCase() : b[key]) !== isAsc ? -1 : 1)) : arr;\r\n\r\n/*\r\n    Applies filter on table rows for search enabled configuration only by search query.\r\n    @param {Array of Objects} data - Array of object which is source data\r\n    @param {Object} configuration - Table configuration such as columns and it's actions\r\n    @param {String} str - Search query string\r\n    @return {Array of Objects}\r\n*/\r\nconst applyFilter = (data = [], configuration = {}, str = \"\") => {\r\n    let filteredArr = [];\r\n    try {\r\n        if (typeof str === \"string\" && str) {\r\n            let searchEnabledColumns = Object.keys(configuration.columns).filter(key => configuration.columns[key].isSearchEnabled); // Returns search enabled configuration key only\r\n            filteredArr = data.filter(elem => searchEnabledColumns.some(key => elem[key].toUpperCase().indexOf(str.toUpperCase()) >= 0))\r\n        } else {\r\n            filteredArr = data\r\n        }\r\n    } catch (err) {\r\n        filteredArr = data;\r\n    }\r\n    return filteredArr;\r\n}\r\n\r\n/*\r\n    Returns custom field as per configuration.\r\n    @param {Object} config - Column configurations\r\n    @param {String} key - Source data Object key\r\n    @param {Any} val - source data object value\r\n    @return {JSX} - Table data(td)\r\n*/\r\nconst getTableData = (config = {}, data = {}, key = \"\") => {\r\n    let temp = data[key];\r\n    try {\r\n        if (config.render) temp = config.render(data, key);\r\n        if (temp === null || temp === undefined || temp === \"\") temp = \"NA\"; // display NA-Not Available if data is not available\r\n    } catch (err) {\r\n        console.error(\"Exception occurred in getTableData -- \" + err);\r\n    }\r\n    return temp;\r\n}\r\n\r\n/*\r\n    Constructing table header.\r\n    @param {Object} columns - It has all the table configuration such as columns and it's actions\r\n    @param {String} headerTextColor - Custom css class\r\n    @param {Function} updateSortBy - this is the callback function\r\n    @param {Object} configuration -Table configuration such as columns and it's actions\r\n    @return {JSX} - Table header(th)\r\n*/\r\nconst TableHeader = ({ columns = {}, headerTextColor = \"\", updateSortBy, sortBy, actions, showCheckbox, isSelectedAll, onSelectAll }) => <tr>\r\n    {showCheckbox && <th style={{ 'width': '10px', \"padding\": \"8px 18px\" }}>\r\n        <div className=\"custom-input\">\r\n            <input type=\"checkbox\" id=\"select-all\" checked={isSelectedAll} onChange={(e) => onSelectAll(e.target.checked)} />\r\n            <label htmlFor=\"select-all\"></label>\r\n        </div>\r\n    </th>}\r\n    {Object.keys(columns).map((key, i) => {\r\n\r\n\r\n\r\n        return <th key={i} className={(key === sortBy && columns[key].sortEnabled) ? \"active-sort\" : \"\"} style={{ width: columns[key].width, color: headerTextColor }} onClick={() => { if (columns[key].sortEnabled && typeof updateSortBy === 'function') updateSortBy(key) }}>\r\n            {columns[key].title && <div> {typeof columns[key].title === 'string' && columns[key].title}{typeof updateSortBy === 'function' && <span>&emsp;{(typeof columns[key].title === 'string' && (key === sortBy)) ? (columns[key].sortDirection ? HIGHLIGHT_UP_ARROW : HIGHLIGHT_DOWN_ARROW) : ((columns[key].sortEnabled) ? NO_ARROW_HIGHLIGHTED : \"\")}</span>}</div>}\r\n        </th>\r\n    })}\r\n    {actions && actions.length > 0 && <th style={{ \"width\": \"50px\" }}></th>}\r\n</tr>\r\n\r\n/*\r\n    Constructing table body which is rows(tr).\r\n    @param {Array of Objects} sourceData - Row data's\r\n    @param {Object} configuration -Table configuration such as columns and it's actions\r\n    @return {JSX} - Table header(th)\r\n*/\r\nconst TableBody = ({ sourceData, configuration, onSelect }) => sourceData.map((data, idx) => <tr key={idx}>\r\n    {/* key mapping. Note: key should be same as table key*/}\r\n    {configuration.showCheckbox && <td style={{ 'width': '10px', \"padding\": \"8px 18px\" }}>\r\n        <div className=\"custom-input\">\r\n            <input type=\"checkbox\" id={idx} checked={data.isChecked} onChange={(e) => onSelect(e.target.checked, idx)} />\r\n            <label htmlFor={idx}></label>\r\n        </div>\r\n    </td>}\r\n    {Object.keys(configuration.columns).map((key, rowIdx) => <td key={rowIdx} className={`${configuration.columns[key].tdCustomClass ? configuration.columns[key].tdCustomClass : \"elps\"} ${getTableData(configuration.columns[key], data, key) === \"NA\" ? \"text-muted\" : \"\"}`} onClick={() => { if (typeof configuration.columns[key].onClick === 'function') configuration.columns[key].onClick(data) }}>\r\n        {configuration.showTooltip ? <OverlayTrigger placement='auto' flip={true} overlay={<Tooltip>{data[key] || configuration.columns[key].title}</Tooltip>}><span>{getTableData(configuration.columns[key], data, key)}</span></OverlayTrigger> : <span>{getTableData(configuration.columns[key], data, key)}</span>}\r\n    </td>)}\r\n    {configuration.actions && configuration.actions.length > 0 && <td className=\"text-right\"><Action {...{ configuration, \"row\": data, index: idx }} /></td>}\r\n</tr>)\r\n\r\n/*\r\n    Constructing table row action.\r\n    @param {Object} configuration -Table configuration such as columns and it's actions\r\n    @param {Object} row - Row object\r\n    @return {JSX} - Dropdown with set of actions which passed through props\r\n*/\r\nconst Action = ({ configuration = {}, row = {}, index = null }) => <Dropdown alignRight={configuration.actionAlignment ? configuration.actionAlignment : true}>\r\n    <Dropdown.Toggle as={CustomToggle} variant={configuration.actionVariant ? configuration.actionVariant : \"\"} className={configuration.actionCustomClass} id={\"actions-\" + Math.random()} >\r\n        {ICN_MORE}\r\n    </Dropdown.Toggle>\r\n    <Dropdown.Menu size=\"sm\" >\r\n        {\r\n            configuration.actions.filter(action => (!action.rule || (typeof action.rule === \"function\" && action.rule(row)))).map((action, i) => <Dropdown.Item key={i} onClick={(e) => {\r\n                if (typeof action.onClick === 'function')\r\n                    action.onClick(row, index);\r\n            }} as=\"button\">\r\n                <span className=\"action-icon\">{action.icon}</span>{action.title}\r\n            </Dropdown.Item>)\r\n        }\r\n    </Dropdown.Menu>\r\n</Dropdown>\r\n\r\n/*\r\n    React bootstrap table component, It can be used where data to represented in table format.\r\n    @param {Object} props - The date required data to build a table\r\n    @return {JSX} - Table\r\n*/\r\nexport const DynamicTable = (props) => {\r\n    const [sourceData, setSourceData] = useState(props.sourceData);\r\n    const [isSelectedAll, setSelectedAll] = useState(false);\r\n    /**\r\n\t\tFires when user clicked on single checkbox.\r\n\t\t@param {Boolean} checked - This is checkbox event value\r\n\t*/\r\n    const onSelect = (checked, idx) => {\r\n        try {\r\n            let flag = checked;\r\n            let tempData = sourceData[idx];\r\n            if (tempData) {\r\n                tempData.isChecked = checked;\r\n                setSourceData([...sourceData]);\r\n                setSelectedAll(flag ? ((sourceData.filter(sd => sd.isChecked)).length === sourceData.length) : flag);\r\n                props.onSelected(sourceData.filter(e => e.isChecked)); // Invoking callback method when there user take an action of checkbox\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Exception occurred in onSelect -- \" + err);\r\n        }\r\n    }\r\n\r\n    /**\r\n\t\tFires when user clicked on select all checkbox.\r\n\t\t@param {Boolean} checked - This is checkbox event value\r\n\t*/\r\n    const onSelectAll = (flag) => {\r\n        try {\r\n            if (Array.isArray(sourceData) && sourceData.length > 0) {\r\n                for (let i = 0, l = sourceData.length; i < l; i++)\r\n                    sourceData[i].isChecked = flag;\r\n                setSourceData([...sourceData]);\r\n                setSelectedAll(flag);\r\n                props.onSelected(sourceData.filter(e => e.isChecked)); // Invoking callback method when there user take an action of checkbox\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Exception occurred in onSelectAll -- \" + err);\r\n        }\r\n    }\r\n\r\n    // Listening for source data change and updates checkbox isSelected.\r\n    useEffect(() => {\r\n        if (Array.isArray(sourceData) && sourceData.length > 0) {\r\n            let temp = sourceData.filter(d => d.isChecked);\r\n            if (temp.length === sourceData.length && !isSelectedAll) setSelectedAll(true);\r\n        }\r\n    }, [sourceData]);\r\n\r\n    // Listening for source data change and update the same in source data\r\n    useEffect(() => {\r\n        if (Array.isArray(props.sourceData)) setSourceData(props.sourceData);\r\n    }, [props.sourceData]);\r\n\r\n    // Listening for clear selection value change\r\n    useEffect(() => {\r\n        if (props.configuration.clearSelection) onSelectAll(false);\r\n    }, [props.configuration.clearSelection]);\r\n\r\n    // Listen sortBy, sortDirection and update the data source\r\n    useEffect(() => {\r\n        setSourceData(sortByKey(applyFilter(sourceData, props.configuration, props.configuration.searchQuery), props.configuration.sortBy, props.configuration.sortDirection));\r\n    }, [props.configuration.sortBy, props.configuration.sortDirection])\r\n\r\n    return <Table className={props.configuration.tableCustomClass ? props.configuration.tableCustomClass : \"ng-table\"}>\r\n        <thead>\r\n            <TableHeader {...{ ...props.configuration, isSelectedAll, onSelectAll }} />\r\n        </thead>\r\n        <tbody>\r\n            {Array.isArray(sourceData) && sourceData.length > 0 && <TableBody {...{ ...props, sourceData, onSelect }} />}\r\n            {\r\n                (!Array.isArray(sourceData) || sourceData.length <= 0) && <tr className=\"text-center\">\r\n                    <td colSpan={Object.keys(props.configuration.columns).length + (props.configuration.actions ? 1 : 0) + (props.configuration.showCheckbox ? 1 : 0)} className=\"no-item-show mt-4\">\r\n                        {props.errorMessage || \"There's no records\"}\r\n                    </td>\r\n                </tr>\r\n            }\r\n        </tbody>\r\n    </Table>\r\n}\r\nexport default DynamicTable;",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"147","severity":1,"message":"151","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":15},{"ruleId":"147","severity":1,"message":"152","line":1,"column":10,"nodeType":"149","messageId":"150","endLine":1,"endColumn":16},{"ruleId":"147","severity":1,"message":"153","line":2,"column":18,"nodeType":"149","messageId":"150","endLine":2,"endColumn":22},{"ruleId":"143","replacedBy":"154"},{"ruleId":"145","replacedBy":"155"},{"ruleId":"147","severity":1,"message":"156","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":20},{"ruleId":"147","severity":1,"message":"157","line":12,"column":7,"nodeType":"149","messageId":"150","endLine":12,"endColumn":16},{"ruleId":"147","severity":1,"message":"158","line":6,"column":7,"nodeType":"149","messageId":"150","endLine":6,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":17,"column":168,"nodeType":"161","messageId":"162","endLine":17,"endColumn":169},{"ruleId":"159","severity":1,"message":"160","line":17,"column":231,"nodeType":"161","messageId":"162","endLine":17,"endColumn":234},{"ruleId":"163","severity":1,"message":"164","line":178,"column":8,"nodeType":"165","endLine":178,"endColumn":20,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":188,"column":8,"nodeType":"165","endLine":188,"endColumn":44,"suggestions":"168"},{"ruleId":"163","severity":1,"message":"169","line":193,"column":8,"nodeType":"165","endLine":193,"endColumn":71,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","'render' is defined but never used.","'Link' is defined but never used.",["171"],["172"],"'DynamicTable' is defined but never used.","'dummyData' is assigned a value but never used.","'htmlParser' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '>' and '!=='.","BinaryExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isSelectedAll'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useEffect has a missing dependency: 'onSelectAll'. Either include it or remove the dependency array.",["174"],"React Hook useEffect has missing dependencies: 'props.configuration' and 'sourceData'. Either include them or remove the dependency array. You can also do a functional update 'setSourceData(s => ...)' if you only need 'sourceData' in the 'setSourceData' call.",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [isSelectedAll, sourceData]",{"range":"182","text":"183"},"Update the dependencies array to be: [onSelectAll, props.configuration.clearSelection]",{"range":"184","text":"185"},"Update the dependencies array to be: [props.configuration, props.configuration.sortBy, props.configuration.sortDirection, sourceData]",{"range":"186","text":"187"},[9327,9339],"[isSelectedAll, sourceData]",[9704,9740],"[onSelectAll, props.configuration.clearSelection]",[10017,10080],"[props.configuration, props.configuration.sortBy, props.configuration.sortDirection, sourceData]"]