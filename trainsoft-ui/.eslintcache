[{"C:\\Users\\goutlaks\\lms\\src\\index.js":"1","C:\\Users\\goutlaks\\lms\\src\\App.js":"2","C:\\Users\\goutlaks\\lms\\src\\Screens\\Auth\\Login.js":"3","C:\\Users\\goutlaks\\lms\\src\\Components\\Header\\Header.js":"4","C:\\Users\\goutlaks\\lms\\src\\Components\\Sidebar\\Sidebar.js":"5","C:\\Users\\goutlaks\\lms\\src\\Screens\\Dashboard\\Dashboard.js":"6","C:\\Users\\goutlaks\\lms\\src\\Screens\\Home\\Home.js":"7","C:\\Users\\goutlaks\\lms\\src\\Screens\\Report\\Report.js":"8","C:\\Users\\goutlaks\\lms\\src\\Screens\\Setting\\Setting.js":"9","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\index.js":"10","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\App.js":"11","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Auth\\Login.js":"12","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Dashboard\\Dashboard.js":"13","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Header\\Header.js":"14","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Sidebar\\Sidebar.js":"15","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Home\\Home.js":"16","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Report\\Report.js":"17","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Setting\\Setting.js":"18","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Card\\Card.js":"19","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Charts\\Charts.js":"20","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Sidebar\\SidebarConfig.js":"21","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Constant\\Icon.js":"22","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Shared\\Router.js":"23","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Batches\\Batches.js":"24","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Calender\\Calender.js":"25","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Participants\\Participants.js":"26","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Labs\\Labs.js":"27","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Support\\Support.js":"28","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Services\\MethodFactory.js":"29","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\DynamicTable\\DynamicTable.js":"30","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Participants\\ParticipantsDetails.js":"31","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Batches\\BatchDetails.js":"32","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Buttons\\Buttons.js":"33","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\InputField\\InputField.js":"34","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Pagination\\Pagination.js":"35","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\LabStore.js\\LabStore.js":"36","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\LabStore.js\\LabList.js":"37","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\SearchBox\\SearchBox.js":"38","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\LabStore.js\\AddLab.js":"39","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Modal\\Modal.js":"40","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Course\\Course.js":"41","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\ClassLab\\ClassLab.js":"42"},{"size":227,"mtime":1611041483818,"results":"43","hashOfConfig":"44"},{"size":511,"mtime":1611221516407,"results":"45","hashOfConfig":"44"},{"size":1249,"mtime":1611223955242,"results":"46","hashOfConfig":"44"},{"size":1155,"mtime":1611049157547,"results":"47","hashOfConfig":"44"},{"size":740,"mtime":1611223246807,"results":"48","hashOfConfig":"44"},{"size":760,"mtime":1611221507922,"results":"49","hashOfConfig":"44"},{"size":100,"mtime":1611218733618,"results":"50","hashOfConfig":"44"},{"size":104,"mtime":1611218746757,"results":"51","hashOfConfig":"44"},{"size":107,"mtime":1611218790042,"results":"52","hashOfConfig":"44"},{"size":243,"mtime":1611726647223,"results":"53","hashOfConfig":"54"},{"size":529,"mtime":1612189105670,"results":"55","hashOfConfig":"54"},{"size":934,"mtime":1611726647151,"results":"56","hashOfConfig":"54"},{"size":1826,"mtime":1612189105776,"results":"57","hashOfConfig":"54"},{"size":2321,"mtime":1612189105722,"results":"58","hashOfConfig":"54"},{"size":618,"mtime":1612189105737,"results":"59","hashOfConfig":"54"},{"size":5338,"mtime":1611726647179,"results":"60","hashOfConfig":"54"},{"size":104,"mtime":1611726647196,"results":"61","hashOfConfig":"54"},{"size":107,"mtime":1611726647200,"results":"62","hashOfConfig":"54"},{"size":466,"mtime":1611726647104,"results":"63","hashOfConfig":"54"},{"size":2914,"mtime":1611726647111,"results":"64","hashOfConfig":"54"},{"size":1299,"mtime":1612189105743,"results":"65","hashOfConfig":"54"},{"size":18063,"mtime":1612189105752,"results":"66","hashOfConfig":"54"},{"size":484,"mtime":1611726647218,"results":"67","hashOfConfig":"54"},{"size":7917,"mtime":1612189105759,"results":"68","hashOfConfig":"54"},{"size":110,"mtime":1611726647171,"results":"69","hashOfConfig":"54"},{"size":8262,"mtime":1611841649714,"results":"70","hashOfConfig":"54"},{"size":98,"mtime":1611726647187,"results":"71","hashOfConfig":"54"},{"size":107,"mtime":1611726647205,"results":"72","hashOfConfig":"54"},{"size":406,"mtime":1611726647210,"results":"73","hashOfConfig":"54"},{"size":10986,"mtime":1611839798550,"results":"74","hashOfConfig":"54"},{"size":6295,"mtime":1611839798622,"results":"75","hashOfConfig":"54"},{"size":5902,"mtime":1611839798591,"results":"76","hashOfConfig":"54"},{"size":2221,"mtime":1612189105715,"results":"77","hashOfConfig":"54"},{"size":1652,"mtime":1611839798565,"results":"78","hashOfConfig":"54"},{"size":4646,"mtime":1611839798576,"results":"79","hashOfConfig":"54"},{"size":2466,"mtime":1612189105787,"results":"80","hashOfConfig":"54"},{"size":5183,"mtime":1612189105784,"results":"81","hashOfConfig":"54"},{"size":343,"mtime":1612189105732,"results":"82","hashOfConfig":"54"},{"size":5746,"mtime":1612189105780,"results":"83","hashOfConfig":"54"},{"size":877,"mtime":1612189105727,"results":"84","hashOfConfig":"54"},{"size":7803,"mtime":1612189105770,"results":"85","hashOfConfig":"54"},{"size":3605,"mtime":1612189105763,"results":"86","hashOfConfig":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"1x6u19f",{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"ds9ynd",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"108"},"C:\\Users\\goutlaks\\lms\\src\\index.js",[],["186","187"],"C:\\Users\\goutlaks\\lms\\src\\App.js",["188","189"],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Auth\\Login.js",[],"C:\\Users\\goutlaks\\lms\\src\\Components\\Header\\Header.js",[],"C:\\Users\\goutlaks\\lms\\src\\Components\\Sidebar\\Sidebar.js",[],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Dashboard\\Dashboard.js",["190","191"],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Home\\Home.js",[],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Report\\Report.js",[],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Setting\\Setting.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\index.js",[],["192","193"],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\App.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Auth\\Login.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Dashboard\\Dashboard.js",["194","195","196"],"import { Router } from \"../../Shared/Router\";\r\nimport Sidebar from \"../../Components/Sidebar/Sidebar\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport Home from \"../Home/Home\";\r\nimport Report from \"../Report/Report\";\r\nimport Setting from \"../Setting/Setting\";\r\nimport Batches from \"../Batches/Batches\";\r\nimport Participant from \"../Participants/Participants\";\r\nimport Calender from \"../Calender/Calender\";\r\nimport Labs from \"../Labs/Labs\";\r\nimport Support from \"../Support/Support\";\r\nimport BatchesDetails from \"../Batches/BatchDetails\";\r\nimport ParticipantsDetails from \"../Participants/ParticipantsDetails\";\r\n\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div className=\"main-page\">\r\n            <div><Sidebar /></div>\r\n            <div className=\"dashboard-page\">\r\n                <Header />\r\n                <div className=\"dashboard-container\">\r\n                    <Router>\r\n                        <Home path=\"/\" />\r\n                        <Report path=\"report\" />\r\n                        <Setting path=\"setting\" />\r\n                        <Batches path=\"batches\"/>\r\n                        <Participant path=\"participant\"/>\r\n                        <Calender path=\"calender\"/>\r\n                        <Labs path=\"labs\"/>\r\n                        <Support path=\"support\"/>\r\n                        <BatchesDetails path=\"batch-details\"/>\r\n                        {/* <ParticipantsDetails path=\"participants-details\"/> */}\r\n                    </Router>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Header\\Header.js",["197"],"import { Dropdown } from 'react-bootstrap';\r\nimport { ICN_NOTIFICATION, ICN_SEARCH } from '../../Constant/Icon';\r\nimport { CustomToggle } from '../../Services/MethodFactory';\r\nimport './header.css'\r\n\r\n\r\nconst Header = ({location}) => {\r\n    console.log(location)\r\n    return (<div className=\"header\">\r\n            <div className=\"header-title\">\r\n                {/* {location && location.state.title} */}\r\n            </div>\r\n           \r\n            <div className=\"aic\">\r\n            <Dropdown className=\"notification\">\r\n                    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n                       <div className=\"mx-2\">{ICN_NOTIFICATION}</div>\r\n                    </Dropdown.Toggle>\r\n                <Dropdown.Menu as=\"div\" align=\"left\">\r\n                    <div className=\"my-2\">\r\n                        <div className=\"title-sm\">Lorem Ipsum</div>\r\n                        <div className=\"text-sm\">Lorem ipsum dolor sit amet, consectetur adipisci</div>\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <div className=\"title-sm\">Lorem Ipsum</div>\r\n                        <div className=\"text-sm\">Lorem ipsum dolor sit amet, consectetur adipisci</div>\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <div className=\"title-sm\">Lorem Ipsum</div>\r\n                        <div className=\"text-sm\">Lorem ipsum dolor sit amet, consectetur adipisci</div>\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <div className=\"title-sm\">Lorem Ipsum</div>\r\n                        <div className=\"text-sm\">Lorem ipsum dolor sit amet, consectetur adipisci</div>\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <div className=\"title-sm\">Lorem Ipsum</div>\r\n                        <div className=\"text-sm\">Lorem ipsum dolor sit amet, consectetur adipisci</div>\r\n                    </div>\r\n                        <div className=\"text-md text-center pointer\">View More</div>  \r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n              \r\n               <div className=\"user-profile\">JD</div> \r\n\r\n              \r\n               \r\n            </div>\r\n    </div>)\r\n}\r\n\r\nexport default Header","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Sidebar\\Sidebar.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Home\\Home.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Report\\Report.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Setting\\Setting.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Card\\Card.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Charts\\Charts.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Sidebar\\SidebarConfig.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Constant\\Icon.js",["198"],"\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nexport const ICN_HOME = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"30.533\" viewBox=\"0 0 32 30.533\"><path id=\"Home\" d=\"M31.7,24.918,16.646,11.451a.423.423,0,0,0-.086-.066.891.891,0,0,0-1.2-.02L.3,24.832a.89.89,0,0,0,1.185,1.33l2.712-2.429v15.7a2.24,2.24,0,0,0,2.238,2.238h4.752a2.1,2.1,0,0,0,2.1-2.1V31.591a.323.323,0,0,1,.323-.323h4.8a.323.323,0,0,1,.323.323v7.984a2.1,2.1,0,0,0,2.1,2.1h4.752a2.544,2.544,0,0,0,2.238-2.8V23.818l2.712,2.429a.895.895,0,0,0,1.257-.072A.906.906,0,0,0,31.7,24.918Zm-5.673,4.39v9.55c0,.638-.316,1.027-.461,1.027H20.819a.323.323,0,0,1-.323-.323v-7.97a2.1,2.1,0,0,0-2.1-2.1H13.6a2.1,2.1,0,0,0-2.1,2.1v7.984a.323.323,0,0,1-.323.323H6.425a.462.462,0,0,1-.461-.461V22.14l9.991-8.925,10.077,9.01v7.082Z\" transform=\"translate(0 -11.141)\" fill=\"#fff\"/></svg>\r\nexport const ICN_SETTING = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"31.998\" viewBox=\"0 0 32 31.998\"><g id=\"settings\" transform=\"translate(0 -0.002)\"><g id=\"Group_35\" data-name=\"Group 35\" transform=\"translate(0 0.001)\"><path id=\"Path_70\" data-name=\"Path 70\" d=\"M30.362,12.642l-2.246-.381a12.683,12.683,0,0,0-.9-2.179L28.537,8.23a1.971,1.971,0,0,0-.214-2.547L26.331,3.691a1.962,1.962,0,0,0-1.4-.582,1.942,1.942,0,0,0-1.143.368L21.933,4.8a12.551,12.551,0,0,0-2.259-.929L19.3,1.652A1.975,1.975,0,0,0,17.347,0H14.533a1.975,1.975,0,0,0-1.952,1.651l-.388,2.273a12.37,12.37,0,0,0-2.173.916L8.182,3.517a1.974,1.974,0,0,0-2.547.214l-2,1.992A1.979,1.979,0,0,0,3.423,8.27L4.76,10.148a12.388,12.388,0,0,0-.889,2.186l-2.219.374A1.975,1.975,0,0,0,0,14.661v2.814a1.975,1.975,0,0,0,1.651,1.952l2.273.388a12.37,12.37,0,0,0,.916,2.173L3.523,23.819a1.971,1.971,0,0,0,.214,2.547l1.992,1.992a1.962,1.962,0,0,0,1.4.582,1.942,1.942,0,0,0,1.143-.368l1.878-1.337a12.646,12.646,0,0,0,2.112.869l.374,2.246A1.975,1.975,0,0,0,14.586,32h2.821a1.975,1.975,0,0,0,1.952-1.651L19.74,28.1a12.682,12.682,0,0,0,2.179-.9l1.852,1.324a1.962,1.962,0,0,0,1.15.368h0a1.962,1.962,0,0,0,1.4-.582l1.992-1.992a1.979,1.979,0,0,0,.214-2.547L27.2,21.914a12.592,12.592,0,0,0,.9-2.179l2.246-.374A1.975,1.975,0,0,0,32,17.408V14.594A1.951,1.951,0,0,0,30.362,12.642Zm-.154,4.766a.173.173,0,0,1-.147.174l-2.808.468a.9.9,0,0,0-.722.662,10.7,10.7,0,0,1-1.163,2.8.9.9,0,0,0,.04.983l1.651,2.326a.182.182,0,0,1-.02.227l-1.992,1.992a.17.17,0,0,1-.127.053.164.164,0,0,1-.1-.033L22.5,25.41a.9.9,0,0,0-.983-.04,10.7,10.7,0,0,1-2.8,1.163.887.887,0,0,0-.662.722l-.475,2.808a.173.173,0,0,1-.174.147H14.593a.173.173,0,0,1-.174-.147l-.468-2.808a.9.9,0,0,0-.662-.722,11.112,11.112,0,0,1-2.741-1.123.925.925,0,0,0-.455-.12.88.88,0,0,0-.521.167l-2.34,1.664a.2.2,0,0,1-.1.033.179.179,0,0,1-.127-.053L5.014,25.109a.181.181,0,0,1-.02-.227l1.644-2.306a.915.915,0,0,0,.04-.989A10.6,10.6,0,0,1,5.5,18.792a.915.915,0,0,0-.722-.662l-2.828-.481a.173.173,0,0,1-.147-.174V14.661a.173.173,0,0,1,.147-.174l2.788-.468a.9.9,0,0,0,.729-.668,10.69,10.69,0,0,1,1.143-2.808.893.893,0,0,0-.047-.976L4.9,7.227A.182.182,0,0,1,4.92,7L6.912,5.008a.17.17,0,0,1,.127-.053.164.164,0,0,1,.1.033L9.446,6.632a.915.915,0,0,0,.989.04A10.6,10.6,0,0,1,13.229,5.5a.915.915,0,0,0,.662-.722l.481-2.828a.173.173,0,0,1,.174-.147H17.36a.173.173,0,0,1,.174.147L18,4.734a.9.9,0,0,0,.668.729,10.85,10.85,0,0,1,2.868,1.177.9.9,0,0,0,.983-.04l2.306-1.658a.2.2,0,0,1,.1-.033.179.179,0,0,1,.127.053l1.992,1.992a.181.181,0,0,1,.02.227L25.415,9.5a.9.9,0,0,0-.04.983,10.7,10.7,0,0,1,1.163,2.8.887.887,0,0,0,.722.662l2.808.475a.173.173,0,0,1,.147.174v2.814Z\" transform=\"translate(0 -0.001)\" fill=\"#fff\"/><path id=\"Path_71\" data-name=\"Path 71\" d=\"M143.017,136a6.917,6.917,0,1,0,6.917,6.917A6.922,6.922,0,0,0,143.017,136Zm0,12.027a5.109,5.109,0,1,1,5.109-5.109A5.113,5.113,0,0,1,143.017,148.028Z\" transform=\"translate(-127.014 -126.922)\" fill=\"#fff\"/></g></g></svg>\r\nexport const ICN_PIE_CHART = <PieChartIcon/>\r\nexport const ICN_LIVE_HELP = <LiveHelpIcon/>\r\nexport const ICN_LIBRARY = <LibraryBooksIcon/>\r\nexport const ICN_ARROW_DOWN = <KeyboardArrowDownIcon/>\r\nexport const ICN_CLOSE = <CloseIcon/>\r\nexport const ICN_EVENT = <EventIcon/>\r\nexport const ICN_PROGRESS = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44.619\" height=\"14.941\" viewBox=\"0 0 44.619 14.941\"><path id=\"Progress\" d=\"M-9.18.63a7.32,7.32,0,0,1-7.38-7.47,7.212,7.212,0,0,1,7.38-7.47A7.212,7.212,0,0,1-1.8-6.84,7.32,7.32,0,0,1-9.18.63ZM-28.7.49a5.693,5.693,0,0,1-5.74-5.81,5.609,5.609,0,0,1,5.74-5.81,5.609,5.609,0,0,1,5.74,5.81A5.693,5.693,0,0,1-28.7.49ZM-42.73.315A3.66,3.66,0,0,1-46.42-3.42a3.606,3.606,0,0,1,3.69-3.735A3.606,3.606,0,0,1-39.04-3.42,3.66,3.66,0,0,1-42.73.315Z\" transform=\"translate(46.42 14.311)\" fill=\"#fff\"/></svg>\r\nexport const ICN_PASSED = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"29.867\" height=\"29.867\" viewBox=\"0 0 29.867 29.867\"><path id=\"Passed\" d=\"M29.548,6.318H26.229V3H9.637V6.318H6.318A3.328,3.328,0,0,0,3,9.637V11.3a8.282,8.282,0,0,0,7.284,8.2,8.312,8.312,0,0,0,5.99,4.911v5.144H9.637v3.318H26.229V29.548H19.592V24.4a8.312,8.312,0,0,0,5.99-4.911,8.282,8.282,0,0,0,7.284-8.2V9.637A3.328,3.328,0,0,0,29.548,6.318ZM6.318,11.3V9.637H9.637v6.338A5,5,0,0,1,6.318,11.3Zm11.615,9.955a4.992,4.992,0,0,1-4.978-4.978V6.318h9.955v9.955A4.992,4.992,0,0,1,17.933,21.252ZM29.548,11.3a5,5,0,0,1-3.318,4.679V9.637h3.318Z\" transform=\"translate(-3 -3)\" fill=\"#fff\"/></svg>\r\nexport const ICN_COMPLETED = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24.021\" height=\"30\" viewBox=\"0 0 24.021 30\"><g id=\"Complete\" transform=\"translate(-1411.502 -285)\"><g id=\"copy\" transform=\"translate(1362.851 285)\"><g id=\"Group_20\" data-name=\"Group 20\" transform=\"translate(48.65)\"><path id=\"Path_17\" data-name=\"Path 17\" d=\"M65.039,85.4H51.032a2.383,2.383,0,0,0-2.382,2.382v20.1a2.383,2.383,0,0,0,2.382,2.382H65.039a2.383,2.383,0,0,0,2.382-2.382v-20.1A2.391,2.391,0,0,0,65.039,85.4Zm.71,22.474a.716.716,0,0,1-.716.716H51.026a.716.716,0,0,1-.716-.716V87.782a.716.716,0,0,1,.716-.716H65.033a.716.716,0,0,1,.716.716Z\" transform=\"translate(-48.65 -80.262)\" fill=\"#fff\"/><path id=\"Path_18\" data-name=\"Path 18\" d=\"M151.839,0H137.832a2.383,2.383,0,0,0-2.382,2.382.833.833,0,0,0,1.666,0,.716.716,0,0,1,.716-.716h14.007a.716.716,0,0,1,.716.716v20.1a.716.716,0,0,1-.716.716.833.833,0,0,0,0,1.666,2.383,2.383,0,0,0,2.382-2.382V2.382A2.383,2.383,0,0,0,151.839,0Z\" transform=\"translate(-130.199)\" fill=\"#fff\"/></g></g><path id=\"Path_2523\" data-name=\"Path 2523\" d=\"M12.47,14,9,10.5l1.4-1.41,2.07,2.08L17.6,6,19,7.41Z\" transform=\"translate(1407 293)\" fill=\"#fff\"/></g></svg>\r\nexport const ICN_EMAIL_W = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"16\" viewBox=\"0 0 20 16\"><path id=\"Email\" d=\"M22,6a2.006,2.006,0,0,0-2-2H4A2.006,2.006,0,0,0,2,6V18a2.006,2.006,0,0,0,2,2H20a2.006,2.006,0,0,0,2-2ZM20,6l-8,5L4,6Zm0,12H4V8l8,5,8-5Z\" transform=\"translate(-2 -4)\" fill=\"#fff\"/></svg>\r\nexport const ICN_TEXT_W = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path id=\"Text\" d=\"M20,2H4A2.006,2.006,0,0,0,2,4V22l4-4H20a2.006,2.006,0,0,0,2-2V4A2.006,2.006,0,0,0,20,2Zm0,14H6L4,18V4H20ZM7,9H9v2H7Zm4,0h2v2H11Zm4,0h2v2H15Z\" transform=\"translate(-2 -2)\" fill=\"#fff\"/></svg>\r\nexport const ICN_PARTICIPANT = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32.93\" height=\"32.93\" viewBox=\"0 0 32.93 32.93\"><g id=\"Participant\" transform=\"translate(-3765 -1197)\"><path id=\"Path_2500\" data-name=\"Path 2500\" d=\"M27.465,14.5C21.957,14.5,11,17.524,11,23.481v4.49H43.93v-4.49C43.93,17.524,32.973,14.5,27.465,14.5Z\" transform=\"translate(3754 1201.958)\" fill=\"#fff\"/><g id=\"Group_108\" data-name=\"Group 108\" transform=\"translate(3773.981 1197)\"><path id=\"Path_2501\" data-name=\"Path 2501\" d=\"M25.106,22.01a7.484,7.484,0,1,0-7.245,0,7.327,7.327,0,0,0,7.245,0Z\" transform=\"translate(-14 -8)\" fill=\"#fff\"/></g></g></svg>\r\nexport const ICN_REPORT = <svg id=\"Report\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path id=\"Path_2510\" data-name=\"Path 2510\" d=\"M33.813,15a2.8,2.8,0,0,0,1.947-.791L38.534,15.6a2.755,2.755,0,0,0-.034.341,2.813,2.813,0,1,0,5.625,0,2.778,2.778,0,0,0-.282-1.2l3.765-3.765a2.778,2.778,0,0,0,1.2.282,2.816,2.816,0,0,0,2.813-2.813,2.77,2.77,0,0,0-.14-.833l3.271-2.453A2.811,2.811,0,1,0,53.5,2.813a2.77,2.77,0,0,0,.14.833L50.369,6.1a2.8,2.8,0,0,0-4.087,3.544l-3.765,3.765a2.764,2.764,0,0,0-3.152.509l-2.775-1.387a2.755,2.755,0,0,0,.034-.341A2.813,2.813,0,1,0,33.813,15Zm0,0\" transform=\"translate(-29.063)\" fill=\"#fff\"/><path id=\"Path_2511\" data-name=\"Path 2511\" d=\"M31.063,170.75h-1V150.938a.937.937,0,0,0-.938-.937h-3.75a.937.937,0,0,0-.938.938V170.75H22.563V156.563a.937.937,0,0,0-.938-.938h-3.75a.937.937,0,0,0-.938.938V170.75H15.063v-6.688a.937.937,0,0,0-.938-.937h-3.75a.937.937,0,0,0-.938.938v6.688H7.563V160.313a.937.937,0,0,0-.938-.938H2.875a.937.937,0,0,0-.938.938V170.75h-1a.938.938,0,1,0,0,1.875H31.063a.938.938,0,1,0,0-1.875Zm0,0\" transform=\"translate(0 -140.625)\" fill=\"#fff\"/></svg>\r\nexport const ICN_SUPPORT = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"29\" viewBox=\"0 0 26 29\"><path id=\"Support\" d=\"M26.111,2H5.889A2.827,2.827,0,0,0,3,4.762V24.1a2.827,2.827,0,0,0,2.889,2.762h5.778L16,31l4.333-4.143h5.778A2.836,2.836,0,0,0,29,24.1V4.762A2.836,2.836,0,0,0,26.111,2ZM17.444,24.1H14.556V21.333h2.889Zm2.99-10.7-1.3,1.27a4.61,4.61,0,0,0-1.69,3.908H14.556v-.69a5.438,5.438,0,0,1,1.69-3.908l1.791-1.74a2.643,2.643,0,0,0,.852-1.947,2.892,2.892,0,0,0-5.778,0H10.222A5.654,5.654,0,0,1,16,4.762a5.654,5.654,0,0,1,5.778,5.524A4.3,4.3,0,0,1,20.434,13.393Z\" transform=\"translate(-3 -2)\" fill=\"#fff\"/></svg>\r\nexport const ICN_BATCHES = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"41.951\" height=\"20.064\" viewBox=\"0 0 41.951 20.064\"><g id=\"Batch\" transform=\"translate(22419.579 17475.689)\"><path id=\"Path_2498\" data-name=\"Path 2498\" d=\"M10.394,14.789A4.894,4.894,0,1,0,5.5,9.894,4.9,4.9,0,0,0,10.394,14.789Zm0-6.992a2.1,2.1,0,1,1-2.1,2.1A2.095,2.095,0,0,1,10.394,7.8Z\" transform=\"translate(-22419.863 -17480.689)\" fill=\"#fff\"/><path id=\"Path_2499\" data-name=\"Path 2499\" d=\"M11.859,18.2H5.874a14.507,14.507,0,0,1,5.915-1.4c.154,0,.322.014.475.014a6.4,6.4,0,0,1,2.293-2.531A16.4,16.4,0,0,0,11.789,14C8.516,14,2,15.636,2,18.894v2.1h9.789v-2.1A3.823,3.823,0,0,1,11.859,18.2Z\" transform=\"translate(-22421.578 -17476.625)\" fill=\"#fff\"/><path id=\"Path_2500\" data-name=\"Path 2500\" d=\"M18.691,14.5C16.118,14.5,11,15.912,11,18.7v2.1H26.382V18.7C26.382,15.912,21.264,14.5,18.691,14.5Z\" transform=\"translate(-22417.223 -17476.418)\" fill=\"#fff\"/><g id=\"Group_108\" data-name=\"Group 108\" transform=\"translate(-22402.045 -17471.357)\"><path id=\"Path_2501\" data-name=\"Path 2501\" d=\"M19.188,14.544a3.5,3.5,0,1,0-3.384,0,3.423,3.423,0,0,0,3.384,0Z\" transform=\"translate(-14 -8)\" fill=\"#fff\"/></g><path id=\"Path_2502\" data-name=\"Path 2502\" d=\"M10.394,14.789a4.894,4.894,0,1,1,4.894-4.894A4.9,4.9,0,0,1,10.394,14.789Zm0-6.992a2.1,2.1,0,1,0,2.1,2.1A2.095,2.095,0,0,0,10.394,7.8Z\" transform=\"translate(-22397.811 -17480.689)\" fill=\"#fff\"/><path id=\"Path_2503\" data-name=\"Path 2503\" d=\"M4.7,18.2h5.985a14.507,14.507,0,0,0-5.915-1.4c-.154,0-.322.014-.475.014A6.4,6.4,0,0,0,2,14.28,16.4,16.4,0,0,1,4.769,14c3.272,0,9.789,1.636,9.789,4.894v2.1H4.769v-2.1A3.823,3.823,0,0,0,4.7,18.2Z\" transform=\"translate(-22392.184 -17476.625)\" fill=\"#fff\"/></g></svg>\r\nexport const ICN_NOTIFICATION = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"34.125\" viewBox=\"0 0 28 34.125\"><path id=\"Notification\" d=\"M14,34.125a3.5,3.5,0,0,1-3.5-3.5h7A3.5,3.5,0,0,1,14,34.125Zm14-5.251H0v-1.75l3.5-3.5V14.874a12.416,12.416,0,0,1,2.054-7.1,9.663,9.663,0,0,1,5.821-3.955V2.626a2.626,2.626,0,1,1,5.251,0V3.815A9.676,9.676,0,0,1,22.44,7.776a12.4,12.4,0,0,1,2.061,7.1v8.751l3.5,3.5v1.75Z\" fill=\"#2d62ed\"/></svg>\r\nexport const ICN_CALENDER = <svg id=\"Calendar\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path id=\"Path_2504\" data-name=\"Path 2504\" d=\"M0,0H32V32H0Z\" fill=\"none\"/><path id=\"Path_2505\" data-name=\"Path 2505\" d=\"M27.2,3.727H25.8V1H23V3.727H9V1H6.2V3.727H4.8A2.772,2.772,0,0,0,2,6.455V28.273A2.772,2.772,0,0,0,4.8,31H27.2A2.772,2.772,0,0,0,30,28.273V6.455A2.772,2.772,0,0,0,27.2,3.727Zm0,24.545H4.8V10.545H27.2Z\" fill=\"#fff\"/></svg>\r\nexport const ICN_COURSE = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38.492\" height=\"32.93\" viewBox=\"0 0 38.492 32.93\"><g id=\"Course\" transform=\"translate(0 -37)\"><path id=\"Path_2601\" data-name=\"Path 2601\" d=\"M36.877,65.043H35.747a2.055,2.055,0,0,0,.227-.941V44.555a2.07,2.07,0,0,0-2.067-2.067H30.862V41.8a.986.986,0,0,0-.985-.985h-.933V37.985a.985.985,0,0,0-1.307-.931l-1.776.614a.564.564,0,0,0,.369,1.066l1.587-.549V51.746L19.81,54.515V40.954l4.145-1.433a.564.564,0,1,0-.369-1.066l-4.341,1.5-8.39-2.9a.985.985,0,0,0-1.307.931v2.829H8.616a.986.986,0,0,0-.985.985v.689H4.586a2.07,2.07,0,0,0-2.067,2.067v2.005a.564.564,0,1,0,1.128,0V44.556a.941.941,0,0,1,.94-.94H7.631v1.128H5.338a.564.564,0,0,0-.564.564V63.351a.564.564,0,0,0,.564.564H33.155a.564.564,0,0,0,.564-.564V45.307a.564.564,0,0,0-.564-.564H30.862V43.615h3.044a.941.941,0,0,1,.94.94V64.1a.941.941,0,0,1-.94.94H4.587a.941.941,0,0,1-.94-.94V48.974a.564.564,0,0,0-1.128,0V64.1a2.053,2.053,0,0,0,.227.94H1.616A1.618,1.618,0,0,0,0,66.659v1.654a1.618,1.618,0,0,0,1.616,1.616H24.034a.564.564,0,0,0,0-1.128H1.616a.489.489,0,0,1-.489-.489V66.659a.489.489,0,0,1,.489-.489H15.45v.4a1.41,1.41,0,0,0,1.408,1.408h4.777a1.41,1.41,0,0,0,1.408-1.408v-.4H36.877a.489.489,0,0,1,.489.489v1.654a.489.489,0,0,1-.489.489H26.5a.564.564,0,1,0,0,1.128H36.877a1.618,1.618,0,0,0,1.616-1.616V66.659a1.618,1.618,0,0,0-1.616-1.616Zm-8.6-12.264a.986.986,0,0,0,.663-.931V41.942h.79v12.8H22.6Zm-17.6-14.594,8.006,2.769V54.515l-8.006-2.769ZM8.759,41.942h.79v9.906a.986.986,0,0,0,.663.931l5.679,1.964H8.759ZM32.59,45.871V62.786H5.9V45.872H7.631v9.014a.986.986,0,0,0,.985.985H29.877a.986.986,0,0,0,.985-.985V45.871Zm-10.675,20.7a.281.281,0,0,1-.28.281H16.858a.281.281,0,0,1-.281-.281v-.4h5.338Z\" fill=\"#fff\"/></g></svg>\r\nexport const ICN_ON_GOING = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24.021\" height=\"30\" viewBox=\"0 0 24.021 30\"><g id=\"On_going\" data-name=\"On going\" transform=\"translate(-48.65)\"><g id=\"Group_20\" data-name=\"Group 20\" transform=\"translate(48.65)\"><path id=\"Path_17\" data-name=\"Path 17\" d=\"M65.039,85.4H51.032a2.383,2.383,0,0,0-2.382,2.382v20.1a2.383,2.383,0,0,0,2.382,2.382H65.039a2.383,2.383,0,0,0,2.382-2.382v-20.1A2.391,2.391,0,0,0,65.039,85.4Zm.71,22.474a.716.716,0,0,1-.716.716H51.026a.716.716,0,0,1-.716-.716V87.782a.716.716,0,0,1,.716-.716H65.033a.716.716,0,0,1,.716.716Z\" transform=\"translate(-48.65 -80.262)\" fill=\"#fff\"/><path id=\"Path_18\" data-name=\"Path 18\" d=\"M151.839,0H137.832a2.383,2.383,0,0,0-2.382,2.382.833.833,0,0,0,1.666,0,.716.716,0,0,1,.716-.716h14.007a.716.716,0,0,1,.716.716v20.1a.716.716,0,0,1-.716.716.833.833,0,0,0,0,1.666,2.383,2.383,0,0,0,2.382-2.382V2.382A2.383,2.383,0,0,0,151.839,0Z\" transform=\"translate(-130.199)\" fill=\"#fff\"/></g></g></svg>\r\nexport const ICN_COMING_BATCHES = <svg id=\"Upcoming_batch\" data-name=\"Upcoming batch\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24.031\" height=\"30.039\" viewBox=\"0 0 24.031 30.039\"><g id=\"Group_47\" data-name=\"Group 47\"><rect id=\"Rectangle_27\" data-name=\"Rectangle 27\" width=\"10\" height=\"4\" transform=\"translate(7.016 20.02)\" fill=\"#fff\"/><rect id=\"Rectangle_28\" data-name=\"Rectangle 28\" width=\"10\" height=\"3\" transform=\"translate(7.016 15.02)\" fill=\"#fff\"/> <path id=\"Path_2325\" data-name=\"Path 2325\" d=\"M19.02,2H7A3.013,3.013,0,0,0,4,5V29.036a3,3,0,0,0,2.989,3H25.028a3.013,3.013,0,0,0,3-3V11.012Zm6.008,27.036H7V5H17.518v7.51h7.51Z\" transform=\"translate(-4 -2)\" fill=\"#fff\"/></g></svg>\r\nexport const ICN_EDIT = <></>\r\nexport const ICN_TRASH = <></>\r\nexport const ICN_MORE = <MoreVertIcon/>\r\nexport const ICN_SEARCH = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20.16\" height=\"20.164\" viewBox=\"0 0 20.16 20.164\"><path fill=\"#272d3b\" class=\"a\" d=\"M20.036,19.136l-4.9-4.9a8.6,8.6,0,1,0-.849.849l4.9,4.9a.608.608,0,0,0,.425.179.589.589,0,0,0,.425-.179A.6.6,0,0,0,20.036,19.136ZM1.253,8.6a7.391,7.391,0,1,1,7.391,7.4A7.4,7.4,0,0,1,1.253,8.6Z\" transform=\"translate(-0.05 0)\"/></svg>\r\nexport const ICN_COPY = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24.022\" height=\"30\" viewBox=\"0 0 24.022 30\"><g transform=\"translate(-48.65)\"><g transform=\"translate(48.65)\"><path fill=\"#fff\" class=\"a\" d=\"M65.039,85.4H51.032a2.383,2.383,0,0,0-2.382,2.382v20.1a2.383,2.383,0,0,0,2.382,2.382H65.039a2.383,2.383,0,0,0,2.382-2.382v-20.1A2.391,2.391,0,0,0,65.039,85.4Zm.71,22.474a.716.716,0,0,1-.716.716H51.026a.716.716,0,0,1-.716-.716V87.782a.716.716,0,0,1,.716-.716H65.033a.716.716,0,0,1,.716.716Z\" transform=\"translate(-48.65 -80.262)\"/><path fill=\"#fff\"  class=\"a\" d=\"M151.839,0H137.832a2.383,2.383,0,0,0-2.382,2.382.833.833,0,0,0,1.666,0,.716.716,0,0,1,.716-.716h14.007a.716.716,0,0,1,.716.716v20.1a.716.716,0,0,1-.716.716.833.833,0,0,0,0,1.666,2.383,2.383,0,0,0,2.382-2.382V2.382A2.383,2.383,0,0,0,151.839,0Z\" transform=\"translate(-130.199)\"/></g></g></svg>\r\n\r\n\r\n","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Shared\\Router.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Batches\\Batches.js",["199","200"],"import { useState } from \"react\";\r\nimport './batches.css'\r\nimport DynamicTable from \"../../Components/DynamicTable/DynamicTable\";\r\nimport {Modal,Form} from 'react-bootstrap'\r\nimport { Formik} from 'formik';\r\nimport { ICN_TRASH,ICN_EDIT, ICN_CLOSE  } from \"../../Constant/Icon\";\r\nimport { Button } from \"../../Components/Buttons/Buttons\";\r\nimport { TextInput,DateInput,SelectInput } from \"../../Components/InputField/InputField\";\r\nimport { Link, Router } from \"../../Shared/Router\";\r\nimport BatchesDetails from \"./BatchDetails\";\r\nimport ModalGen from \"../../Components/Modal/Modal\";\r\n\r\n\r\n\r\nconst dummyData =[\r\n    {batchName: 'ITU_01',technology: 'Angular',createdData:'22 june 2020',learners:'333',status:'Active',startDate:'123213',endDate:'323213'},\r\n    {batchName: 'ITU_01',technology: 'Angular',createdData:'22 june 2020',learners:'333',status:'Active',startDate:'123213',endDate:'323213'},\r\n    {batchName: 'ITU_01',technology: 'Angular',createdData:'22 june 2020',learners:'333',status:'Active',startDate:'123213',endDate:'323213'},\r\n    {batchName: 'ITU_01',technology: 'Angular',createdData:'22 june 2020',learners:'333',status:'Active',startDate:'123213',endDate:'323213'},\r\n    {batchName: 'ITU_01',technology: 'Angular',createdData:'22 june 2020',learners:'333',status:'Active',startDate:'123213',endDate:'323213'},\r\n\r\n]\r\n\r\nconst createBatches = {\r\n    batchName: '',\r\n    trainingType: '',\r\n    endDate:'',\r\n    startDate: '',\r\n    course:'',\r\n    instructor:''\r\n\r\n}\r\nconst Batch = () => {\r\n    const [show, setShow] = useState(false);\r\n    const [configuration, setConfiguration] = useState({\r\n        columns: {\r\n            \"batchName\": {\r\n                \"title\": \"Batch Name\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false,\r\n                render: (data)=>  <Link to={'batches-details'} className=\"dt-name\">{data.batchName}</Link> \r\n\r\n            },\r\n            \"technology\": {\r\n                \"title\": \"Technology\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"createdDate\": {\r\n                \"title\": \"Created Date\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"learner\": {\r\n                \"title\": \"learners\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"status\": {\r\n                \"title\": \"Status\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"startDate\": {\r\n                \"title\": \"Start Date\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n        },\r\n        headerTextColor: '#454E50', // user can change table header text color\r\n        sortBy: null,  // by default sort table by name key\r\n        sortDirection: false, // sort direction by default true\r\n        updateSortBy: (sortKey) => {\r\n            configuration.sortBy = sortKey;\r\n            Object.keys(configuration.columns).map(key => configuration.columns[key].sortDirection = (key === sortKey) ? !configuration.columns[key].sortDirection : false);\r\n            configuration.sortDirection = configuration.columns[sortKey].sortDirection;\r\n            setConfiguration({ ...configuration });\r\n        },\r\n        actions: [\r\n            {\r\n                \"title\": \"Edit\",\r\n                \"icon\": ICN_EDIT,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            },\r\n            {\r\n                \"title\": \"Delete\",\r\n                \"icon\": ICN_TRASH,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            }\r\n        ],\r\n        actionCustomClass: \"no-chev esc-btn-dropdown\", // user can pass their own custom className name to add/remove some css style on action button\r\n        actionVariant: \"\", // user can pass action button variant like primary, dark, light,\r\n        actionAlignment: true, // user can pass alignment property of dropdown menu by default it is alignLeft \r\n        // call this callback function onSearch method in input field on onChange handler eg: <input type=\"text\" onChange={(e) => onSearch(e.target.value)}/>\r\n        // this search is working for search enable fields(column) eg. isSearchEnabled: true, in tale column configuration\r\n        searchQuery: \"\",\r\n        tableCustomClass: \"ng-table sort-enabled\", // table custom class\r\n        showCheckbox: true,\r\n        clearSelection: false\r\n    });\r\n    return (<div className=\"table-shadow\">\r\n        <div className=\"table-top-action \">\r\n            <div>\r\n                <div className=\"\">Batches</div>\r\n            </div>\r\n            <div>\r\n               <Button onClick={()=>setShow(true)}> + Add New </Button>\r\n\r\n            <ModalGen {...{show,setShow,headerTitle: \"Add new Batches\",size:\"lg\"}}>\r\n            <div className=\"form-container\">\r\n            <Formik\r\n                onSubmit={()=>console.log('a')}\r\n                initialValues={createBatches}\r\n            >\r\n                {({ handleSubmit, isSubmitting, dirty }) => <form onSubmit={handleSubmit} className=\"create-batch\" >\r\n                        <div className=\"edit-shipping\">\r\n                            <Form.Group className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <TextInput label=\"Batch Name\" name=\"batchName\"/>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                  <SelectInput label=\"Training Type\" option={['Online','Self','Offline']} name=\"trainingType\"/>\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                  <DateInput label=\"Start Date\" name=\"startDate\"/>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                  <DateInput label=\"End date\" name=\"endDate\"/>\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                  <SelectInput label=\"Course\" name=\"course\" option={['Online','Self','Offline']}/>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                  <TextInput label=\"Instructor\" name=\"instructor\"/>\r\n                                </div>\r\n                            </Form.Group>\r\n                    </div>\r\n                    {/* modal footer which contains action button to save data or cancel current action */}\r\n                    <footer className=\"jcb\">\r\n                        <div>\r\n                            <span className=\"title-sm\">Upload participants</span>\r\n                        </div>\r\n                        <div>\r\n                           <Button type=\"submit\" >Create Batches</Button>\r\n                        </div>\r\n                    </footer>\r\n                </form>\r\n                }\r\n            </Formik>\r\n            </div>\r\n         </ModalGen>\r\n\r\n            </div>\r\n        </div>\r\n        <DynamicTable {...{configuration,sourceData: dummyData}}/>\r\n               \r\n    </div>)\r\n}\r\n\r\n\r\nconst Batches = () => {\r\n    return(\r\n        <Router>\r\n                <Batch path=\"/\" />\r\n                <BatchesDetails path=\"batches-details\"/>\r\n        </Router>\r\n    )\r\n}\r\nexport default Batches","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Calender\\Calender.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Participants\\Participants.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Labs\\Labs.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Support\\Support.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Services\\MethodFactory.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\DynamicTable\\DynamicTable.js",["201","202","203","204","205","206"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, OverlayTrigger, Dropdown, Tooltip } from 'react-bootstrap';\r\nimport { ICN_ARROW_DOWN,ICN_MORE } from '../../Constant/Icon';\r\nimport { CustomToggle } from '../../Services/MethodFactory';\r\nimport './dynamicTable.css';\r\nconst htmlParser = require('html-react-parser');\r\nconst NO_ARROW_HIGHLIGHTED = ICN_ARROW_DOWN\r\nconst HIGHLIGHT_UP_ARROW = ICN_ARROW_DOWN;\r\nconst HIGHLIGHT_DOWN_ARROW = ICN_ARROW_DOWN;\r\n/*\r\n    Sort the array by key.\r\n    @param {Array of Objects} arr - Array of object which is source data\r\n    @param {String} key - Object key which is used to sort the array\r\n    @param {Boolean} isAsc - Default ascending order is true\r\n    @return {Array of Objects} - Returns sorted array\r\n*/\r\nconst sortByKey = (arr = [], key = \"\", isAsc = true) => (Array.isArray(arr) && key) ? (arr.sort((a, b) => (typeof a[key] === 'string' ? a[key].toUpperCase() : a[key]) > (typeof b[key] === 'string' ? b[key].toUpperCase() : b[key]) !== isAsc ? -1 : 1)) : arr;\r\n\r\n/*\r\n    Applies filter on table rows for search enabled configuration only by search query.\r\n    @param {Array of Objects} data - Array of object which is source data\r\n    @param {Object} configuration - Table configuration such as columns and it's actions\r\n    @param {String} str - Search query string\r\n    @return {Array of Objects}\r\n*/\r\nconst applyFilter = (data = [], configuration = {}, str = \"\") => {\r\n    let filteredArr = [];\r\n    try {\r\n        if (typeof str === \"string\" && str) {\r\n            let searchEnabledColumns = Object.keys(configuration.columns).filter(key => configuration.columns[key].isSearchEnabled); // Returns search enabled configuration key only\r\n            filteredArr = data.filter(elem => searchEnabledColumns.some(key => elem[key].toUpperCase().indexOf(str.toUpperCase()) >= 0))\r\n        } else {\r\n            filteredArr = data\r\n        }\r\n    } catch (err) {\r\n        filteredArr = data;\r\n    }\r\n    return filteredArr;\r\n}\r\n\r\n/*\r\n    Returns custom field as per configuration.\r\n    @param {Object} config - Column configurations\r\n    @param {String} key - Source data Object key\r\n    @param {Any} val - source data object value\r\n    @return {JSX} - Table data(td)\r\n*/\r\nconst getTableData = (config = {}, data = {}, key = \"\") => {\r\n    let temp = data[key];\r\n    try {\r\n        if (config.render) temp = config.render(data, key);\r\n        if (temp === null || temp === undefined || temp === \"\") temp = \"NA\"; // display NA-Not Available if data is not available\r\n    } catch (err) {\r\n        console.error(\"Exception occurred in getTableData -- \" + err);\r\n    }\r\n    return temp;\r\n}\r\n\r\n/*\r\n    Constructing table header.\r\n    @param {Object} columns - It has all the table configuration such as columns and it's actions\r\n    @param {String} headerTextColor - Custom css class\r\n    @param {Function} updateSortBy - this is the callback function\r\n    @param {Object} configuration -Table configuration such as columns and it's actions\r\n    @return {JSX} - Table header(th)\r\n*/\r\nconst TableHeader = ({ columns = {}, headerTextColor = \"\", updateSortBy, sortBy, actions, showCheckbox, isSelectedAll, onSelectAll }) => <tr>\r\n    {showCheckbox && <th style={{ 'width': '10px', \"padding\": \"8px 18px\" }}>\r\n        <div className=\"custom-input\">\r\n            <input type=\"checkbox\" id=\"select-all\" checked={isSelectedAll} onChange={(e) => onSelectAll(e.target.checked)} />\r\n            <label htmlFor=\"select-all\"></label>\r\n        </div>\r\n    </th>}\r\n    {Object.keys(columns).map((key, i) => {\r\n\r\n\r\n\r\n        return <th key={i} className={(key === sortBy && columns[key].sortEnabled) ? \"active-sort\" : \"\"} style={{ width: columns[key].width, color: headerTextColor }} onClick={() => { if (columns[key].sortEnabled && typeof updateSortBy === 'function') updateSortBy(key) }}>\r\n            {columns[key].title && <div> {typeof columns[key].title === 'string' && columns[key].title}{typeof updateSortBy === 'function' && <span>&emsp;{(typeof columns[key].title === 'string' && (key === sortBy)) ? (columns[key].sortDirection ? HIGHLIGHT_UP_ARROW : HIGHLIGHT_DOWN_ARROW) : ((columns[key].sortEnabled) ? NO_ARROW_HIGHLIGHTED : \"\")}</span>}</div>}\r\n        </th>\r\n    })}\r\n    {actions && actions.length > 0 && <th style={{ \"width\": \"50px\" }}></th>}\r\n</tr>\r\n\r\n/*\r\n    Constructing table body which is rows(tr).\r\n    @param {Array of Objects} sourceData - Row data's\r\n    @param {Object} configuration -Table configuration such as columns and it's actions\r\n    @return {JSX} - Table header(th)\r\n*/\r\nconst TableBody = ({ sourceData, configuration, onSelect }) => sourceData.map((data, idx) => <tr key={idx}>\r\n    {/* key mapping. Note: key should be same as table key*/}\r\n    {configuration.showCheckbox && <td style={{ 'width': '10px', \"padding\": \"8px 18px\" }}>\r\n        <div className=\"custom-input\">\r\n            <input type=\"checkbox\" id={idx} checked={data.isChecked} onChange={(e) => onSelect(e.target.checked, idx)} />\r\n            <label htmlFor={idx}></label>\r\n        </div>\r\n    </td>}\r\n    {Object.keys(configuration.columns).map((key, rowIdx) => <td key={rowIdx} className={`${configuration.columns[key].tdCustomClass ? configuration.columns[key].tdCustomClass : \"elps\"} ${getTableData(configuration.columns[key], data, key) === \"NA\" ? \"text-muted\" : \"\"}`} onClick={() => { if (typeof configuration.columns[key].onClick === 'function') configuration.columns[key].onClick(data) }}>\r\n        {configuration.showTooltip ? <OverlayTrigger placement='auto' flip={true} overlay={<Tooltip>{data[key] || configuration.columns[key].title}</Tooltip>}><span>{getTableData(configuration.columns[key], data, key)}</span></OverlayTrigger> : <span>{getTableData(configuration.columns[key], data, key)}</span>}\r\n    </td>)}\r\n    {configuration.actions && configuration.actions.length > 0 && <td className=\"text-right\"><Action {...{ configuration, \"row\": data, index: idx }} /></td>}\r\n</tr>)\r\n\r\n/*\r\n    Constructing table row action.\r\n    @param {Object} configuration -Table configuration such as columns and it's actions\r\n    @param {Object} row - Row object\r\n    @return {JSX} - Dropdown with set of actions which passed through props\r\n*/\r\nconst Action = ({ configuration = {}, row = {}, index = null }) => <Dropdown alignRight={configuration.actionAlignment ? configuration.actionAlignment : true}>\r\n    <Dropdown.Toggle as={CustomToggle} variant={configuration.actionVariant ? configuration.actionVariant : \"\"} className={configuration.actionCustomClass} id={\"actions-\" + Math.random()} >\r\n        {ICN_MORE}\r\n    </Dropdown.Toggle>\r\n    <Dropdown.Menu size=\"sm\" >\r\n        {\r\n            configuration.actions.filter(action => (!action.rule || (typeof action.rule === \"function\" && action.rule(row)))).map((action, i) => <Dropdown.Item key={i} onClick={(e) => {\r\n                if (typeof action.onClick === 'function')\r\n                    action.onClick(row, index);\r\n            }} as=\"button\">\r\n                <span className=\"action-icon\">{action.icon}</span>{action.title}\r\n            </Dropdown.Item>)\r\n        }\r\n    </Dropdown.Menu>\r\n</Dropdown>\r\n\r\n/*\r\n    React bootstrap table component, It can be used where data to represented in table format.\r\n    @param {Object} props - The date required data to build a table\r\n    @return {JSX} - Table\r\n*/\r\nexport const DynamicTable = (props) => {\r\n    const [sourceData, setSourceData] = useState(props.sourceData);\r\n    const [isSelectedAll, setSelectedAll] = useState(false);\r\n    /**\r\n\t\tFires when user clicked on single checkbox.\r\n\t\t@param {Boolean} checked - This is checkbox event value\r\n\t*/\r\n    const onSelect = (checked, idx) => {\r\n        try {\r\n            let flag = checked;\r\n            let tempData = sourceData[idx];\r\n            if (tempData) {\r\n                tempData.isChecked = checked;\r\n                setSourceData([...sourceData]);\r\n                setSelectedAll(flag ? ((sourceData.filter(sd => sd.isChecked)).length === sourceData.length) : flag);\r\n                props.onSelected(sourceData.filter(e => e.isChecked)); // Invoking callback method when there user take an action of checkbox\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Exception occurred in onSelect -- \" + err);\r\n        }\r\n    }\r\n\r\n    /**\r\n\t\tFires when user clicked on select all checkbox.\r\n\t\t@param {Boolean} checked - This is checkbox event value\r\n\t*/\r\n    const onSelectAll = (flag) => {\r\n        try {\r\n            if (Array.isArray(sourceData) && sourceData.length > 0) {\r\n                for (let i = 0, l = sourceData.length; i < l; i++)\r\n                    sourceData[i].isChecked = flag;\r\n                setSourceData([...sourceData]);\r\n                setSelectedAll(flag);\r\n                props.onSelected(sourceData.filter(e => e.isChecked)); // Invoking callback method when there user take an action of checkbox\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Exception occurred in onSelectAll -- \" + err);\r\n        }\r\n    }\r\n\r\n    // Listening for source data change and updates checkbox isSelected.\r\n    useEffect(() => {\r\n        if (Array.isArray(sourceData) && sourceData.length > 0) {\r\n            let temp = sourceData.filter(d => d.isChecked);\r\n            if (temp.length === sourceData.length && !isSelectedAll) setSelectedAll(true);\r\n        }\r\n    }, [sourceData]);\r\n\r\n    // Listening for source data change and update the same in source data\r\n    useEffect(() => {\r\n        if (Array.isArray(props.sourceData)) setSourceData(props.sourceData);\r\n    }, [props.sourceData]);\r\n\r\n    // Listening for clear selection value change\r\n    useEffect(() => {\r\n        if (props.configuration.clearSelection) onSelectAll(false);\r\n    }, [props.configuration.clearSelection]);\r\n\r\n    // Listen sortBy, sortDirection and update the data source\r\n    useEffect(() => {\r\n        setSourceData(sortByKey(applyFilter(sourceData, props.configuration, props.configuration.searchQuery), props.configuration.sortBy, props.configuration.sortDirection));\r\n    }, [props.configuration.sortBy, props.configuration.sortDirection])\r\n\r\n    return <Table className={props.configuration.tableCustomClass ? props.configuration.tableCustomClass : \"ng-table\"}>\r\n        <thead>\r\n            <TableHeader {...{ ...props.configuration, isSelectedAll, onSelectAll }} />\r\n        </thead>\r\n        <tbody>\r\n            {Array.isArray(sourceData) && sourceData.length > 0 && <TableBody {...{ ...props, sourceData, onSelect }} />}\r\n            {\r\n                (!Array.isArray(sourceData) || sourceData.length <= 0) && <tr className=\"text-center\">\r\n                    <td colSpan={Object.keys(props.configuration.columns).length + (props.configuration.actions ? 1 : 0) + (props.configuration.showCheckbox ? 1 : 0)} className=\"no-item-show mt-4\">\r\n                        {props.errorMessage || \"There's no records\"}\r\n                    </td>\r\n                </tr>\r\n            }\r\n        </tbody>\r\n    </Table>\r\n}\r\nexport default DynamicTable;","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Participants\\ParticipantsDetails.js",["207","208"],"import { useState } from \"react\";\r\nimport '../Batches/batches.css'\r\n\r\nimport './participants.css'\r\nimport DynamicTable from \"../../Components/DynamicTable/DynamicTable\";\r\nimport { ICN_TRASH, ICN_EDIT, ICN_BATCHES, ICN_ON_GOING, ICN_PROGRESS, ICN_COMPLETED, ICN_PASSED, ICN_EMAIL_W, ICN_TEXT_W } from \"../../Constant/Icon\";\r\nimport PaginationOne from \"../../Components/Pagination/Pagination\";\r\nimport Card from \"../../Components/Card/Card\";\r\nimport { Button } from \"../../Components/Buttons/Buttons\";\r\n\r\n\r\n\r\n\r\nconst dummyData = [\r\n    { batchName: 'ITU_01', empId: '10290', emailId: 'benits@msn.com', phoneNo: '(659) 768-1869', status: 'passed' },\r\n    { batchName: 'ITU_02', empId: '10290', emailId: 'drewf@optonline.net', phoneNo: '(659) 768-1869', status: 'passed' },\r\n    { batchName: 'ITU_03', empId: '10290', emailId: 'devphil@sbcglobal.net', phoneNo: '(659) 768-1869', status: 'passed' },\r\n    { batchName: 'ITU_04', empId: '10290', emailId: 'cliffski@me.com', phoneNo: '(659) 768-1869', status: 'passed' },\r\n    { batchName: 'ITU_05', empId: '10290', emailId: '22 june 2020', phoneNo: '(659) 768-1869', status: 'passed' },\r\n\r\n]\r\n\r\nconst createBatches = {\r\n    batchName: '',\r\n    trainingType: '',\r\n    endDate: '',\r\n    startDate: '',\r\n    course: '',\r\n    instructor: ''\r\n\r\n}\r\nconst Participant = () => {\r\n    const [configuration, setConfiguration] = useState({\r\n        columns: {\r\n            \"batchName\": {\r\n                \"title\": \"Name\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false,\r\n            },\r\n            \"empId\": {\r\n                \"title\": \"Emp Id\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"emailId\": {\r\n                \"title\": \"Email Id\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"phoneNo\": {\r\n                \"title\": \"Phone Number\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"status\": {\r\n                \"title\": \"Status\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n        },\r\n        headerTextColor: '#454E50', // user can change table header text color\r\n        sortBy: null,  // by default sort table by name key\r\n        sortDirection: false, // sort direction by default true\r\n        updateSortBy: (sortKey) => {\r\n            configuration.sortBy = sortKey;\r\n            Object.keys(configuration.columns).map(key => configuration.columns[key].sortDirection = (key === sortKey) ? !configuration.columns[key].sortDirection : false);\r\n            configuration.sortDirection = configuration.columns[sortKey].sortDirection;\r\n            setConfiguration({ ...configuration });\r\n        },\r\n        actions: [\r\n            {\r\n                \"title\": \"Edit\",\r\n                \"icon\": ICN_EDIT,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            },\r\n            {\r\n                \"title\": \"Delete\",\r\n                \"icon\": ICN_TRASH,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            }\r\n        ],\r\n        actionCustomClass: \"no-chev esc-btn-dropdown\", // user can pass their own custom className name to add/remove some css style on action button\r\n        actionVariant: \"\", // user can pass action button variant like primary, dark, light,\r\n        actionAlignment: true, // user can pass alignment property of dropdown menu by default it is alignLeft \r\n        // call this callback function onSearch method in input field on onChange handler eg: <input type=\"text\" onChange={(e) => onSearch(e.target.value)}/>\r\n        // this search is working for search enable fields(column) eg. isSearchEnabled: true, in tale column configuration\r\n        searchQuery: \"\",\r\n        tableCustomClass: \"ng-table sort-enabled table-borderless\", // table custom class\r\n        showCheckbox: false,\r\n        clearSelection: false\r\n    });\r\n\r\n    const activityData = [\r\n        { icon: ICN_ON_GOING, name: 'Assigned', data: '15' },\r\n        { icon: ICN_PROGRESS, name: 'In Progress', data: '10' },\r\n        { icon: ICN_COMPLETED, name: 'Completed', data: '8' },\r\n        { icon: ICN_PASSED, name: 'Passed', data: '7' },\r\n    ]\r\n    return (<div className=\"table-shadow p-3\">\r\n        <div className=\"flx full-h\">\r\n            <div className=\"box-shadow flx1 p-2 mr-3\">\r\n                <div className=\"user-profile-container\">\r\n                    <div className=\"jcb\">\r\n                        <div className=\"user-pf\">Us</div>\r\n                    </div>\r\n\r\n                    <div className=\"jcb mt-2\">\r\n                        <Button>{ICN_EMAIL_W} <span className=\"pl-3\">Email</span></Button>\r\n                        <Button>{ICN_TEXT_W} <span className=\"pl-3\">Text</span></Button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flx3\">\r\n                <div className=\"jcb\">\r\n                    {activityData.map((p, i) => <div key={i} className=\"user-activity\">\r\n                        <div className=\"activities-btn\">\r\n                            {p.icon}\r\n                        </div>\r\n                        <div className=\"jcb-c text-right\">\r\n                            <div className=\"title-lg\">{p.data}</div>\r\n                            <div className=\"title-sm\">{p.name}</div>\r\n                        </div>\r\n                    </div>)}\r\n\r\n                </div>\r\n                <div>\r\n                    {/* ..........Analytic......... */}\r\n                    <Card title=\"Activities\" >\r\n                        <DynamicTable {...{ configuration, sourceData: dummyData }} />\r\n                        <div className=\"pagination-div\">\r\n                            <PaginationOne totalCount={30} onNavigate={(pageNumber) => console.log(pageNumber)} />\r\n\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>)\r\n}\r\nexport default Participant","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Batches\\BatchDetails.js",["209"],"import { useState } from \"react\";\r\nimport './batches.css'\r\nimport DynamicTable from \"../../Components/DynamicTable/DynamicTable\";\r\nimport { ICN_TRASH,ICN_EDIT  } from \"../../Constant/Icon\";\r\nimport PaginationOne from \"../../Components/Pagination/Pagination\";\r\n\r\n\r\n\r\nconst dummyData =[\r\n    {name: 'Jessie Buchanan',empId: '10290',emailId:'benits@msn.com',phoneNo:'(659) 768-1869',department:'Information Technology'},\r\n    {name: 'Lisa Palmer',empId: '10290',emailId:'drewf@optonline.net',phoneNo:'(659) 768-1869',department:'Information Technology'},\r\n    {name: 'Donna Higgins',empId: '10290',emailId:'devphil@sbcglobal.net',phoneNo:'(659) 768-1869',department:'Information Technology'},\r\n    {name: 'Bob Norris',empId: '10290',emailId:'cliffski@me.com',phoneNo:'(659) 768-1869',department:'Information Technology'},\r\n    {name: 'Tonya Walters',empId: '10290',emailId:'22 june 2020',phoneNo:'(659) 768-1869',department:'Information Technology'},\r\n\r\n]\r\n\r\nconst createBatches = {\r\n    batchName: '',\r\n    trainingType: '',\r\n    endDate:'',\r\n    startDate: '',\r\n    course:'',\r\n    instructor:''\r\n\r\n}\r\nconst BatchesDetails = () => {\r\n    const [configuration, setConfiguration] = useState({\r\n        columns: {\r\n            \"name\": {\r\n                \"title\": \"Name\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false,\r\n            },\r\n            \"empId\": {\r\n                \"title\": \"Emp Id\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"emailId\": {\r\n                \"title\": \"Email Id\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"phoneNo\": {\r\n                \"title\": \"Phone Number\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"department\": {\r\n                \"title\": \"Department\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n        },\r\n        headerTextColor: '#454E50', // user can change table header text color\r\n        sortBy: null,  // by default sort table by name key\r\n        sortDirection: false, // sort direction by default true\r\n        updateSortBy: (sortKey) => {\r\n            configuration.sortBy = sortKey;\r\n            Object.keys(configuration.columns).map(key => configuration.columns[key].sortDirection = (key === sortKey) ? !configuration.columns[key].sortDirection : false);\r\n            configuration.sortDirection = configuration.columns[sortKey].sortDirection;\r\n            setConfiguration({ ...configuration });\r\n        },\r\n        actions: [\r\n            {\r\n                \"title\": \"Edit\",\r\n                \"icon\": ICN_EDIT,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            },\r\n            {\r\n                \"title\": \"Delete\",\r\n                \"icon\": ICN_TRASH,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            }\r\n        ],\r\n        actionCustomClass: \"no-chev esc-btn-dropdown\", // user can pass their own custom className name to add/remove some css style on action button\r\n        actionVariant: \"\", // user can pass action button variant like primary, dark, light,\r\n        actionAlignment: true, // user can pass alignment property of dropdown menu by default it is alignLeft \r\n        // call this callback function onSearch method in input field on onChange handler eg: <input type=\"text\" onChange={(e) => onSearch(e.target.value)}/>\r\n        // this search is working for search enable fields(column) eg. isSearchEnabled: true, in tale column configuration\r\n        searchQuery: \"\",\r\n        tableCustomClass: \"ng-table sort-enabled table-borderless\", // table custom class\r\n        showCheckbox: false,\r\n        clearSelection: false\r\n    });\r\n    return (<div className=\"table-shadow\">\r\n        <div className=\"bDetail-action\">\r\n            <div className=\"full-w \">\r\n            <div>\r\n                <div className=\"\">Batches Details</div>\r\n            </div>\r\n            <div className=\"batch-info\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">Batch Name</div>\r\n                        <div className=\"col-6 mb-4\">ITU_01</div>\r\n                        <div className=\"col-6\">Status</div>\r\n                        <div className=\"col-6\">Active</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">Technology Name</div>\r\n                        <div className=\"col-6  mb-4\">Angular</div>\r\n                        <div className=\"col-6\">Start Date</div>\r\n                        <div className=\"col-6\">20 july 2020</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">Creation Date </div>\r\n                        <div className=\"col-6  mb-4\">20 july 2020</div>\r\n                        <div className=\"col-6\">End Date</div>\r\n                        <div className=\"col-6\">20 july 2020</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        <DynamicTable {...{configuration,sourceData: dummyData}}/>\r\n        <div className=\"pagination-div\">\r\n        <PaginationOne totalCount={30}  onNavigate={(pageNumber) => console.log(pageNumber)}/>\r\n\r\n        </div>\r\n    </div>)\r\n}\r\nexport default BatchesDetails","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Buttons\\Buttons.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\InputField\\InputField.js",["210"],"import React from 'react';\r\nimport {  ErrorMessage, Field } from 'formik';\r\nimport {Form} from 'react-bootstrap'\r\nimport './inputField.css'\r\nimport { ICN_EVENT } from '../../Constant/Icon';\r\n\r\n\r\n/*\r\n    Common button for cancel\r\n    @param {Objects} className - optional className for Cancel\r\n    @param {function} onClick - callback function\r\n    @param {children} props default property\r\n*/\r\nexport const TextInput = ({ label='',name }) => {\r\n    return (<>\r\n        <Form.Label className=\"label\">{label}</Form.Label>\r\n        <div className=\"input-field\">\r\n        <Field name={name} className=\"form-control form-control-sm\" />\r\n        </div>\r\n        <ErrorMessage component={name} name=\"province\" className=\"text-danger mb-2 small-text\" />\r\n    </>)\r\n}\r\n\r\nexport const DateInput = ({ label='',name }) => {\r\n    return (<>\r\n        <Form.Label className=\"label\">{label}</Form.Label>\r\n        <div className=\"input-field\">\r\n        <Field type=\"date\" name={name} className=\"form-control form-control-sm\" />\r\n         {/* {ICN_EVENT} */}\r\n        </div>\r\n        <ErrorMessage component={name} name=\"province\" className=\"text-danger mb-2 small-text\" />\r\n    </>)\r\n}\r\n\r\nexport const SelectInput = ({ label='',name, option=[] }) => {\r\n    return (<>\r\n        <Form.Label className=\"label\">{label}</Form.Label>\r\n        <div className=\"input-field\">\r\n           <Field as=\"select\" name={name} className=\"form-control form-control-sm\" >\r\n           {option.map(res => <option value={res}>{res}</option>)}\r\n           </Field>\r\n        </div>\r\n        <ErrorMessage component={name} name=\"province\" className=\"text-danger mb-2 small-text\" />\r\n    </>)\r\n}","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Pagination\\Pagination.js",["211"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\n\r\nfunction PaginationOne(props) {\r\n    const [paginateInfo, setPaginateInfo] = useState({});\r\n\r\n    // This method used to construct pagination array\r\n    const Paginate = (totalItems, currentPage = 1, pageSize = props.pageCount ? props.pageCount : 10, maxPages = 10) => {\r\n        // calculate total pages\r\n        let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        // ensure current page isn't out of range\r\n        if (currentPage < 1) {\r\n            currentPage = 1;\r\n        } else if (currentPage > totalPages) {\r\n            currentPage = totalPages;\r\n        }\r\n\r\n        let startPage, endPage;\r\n        if (totalPages <= maxPages) {\r\n            // total pages less than max so show all pages\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // total pages more than max so calculate start and end pages\r\n            let maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\r\n            let maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\r\n            if (currentPage <= maxPagesBeforeCurrentPage) {\r\n                // current page near the start\r\n                startPage = 1;\r\n                endPage = maxPages;\r\n            } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\r\n                // current page near the end\r\n                startPage = totalPages - maxPages + 1;\r\n                endPage = totalPages;\r\n            } else {\r\n                // current page somewhere in the middle\r\n                startPage = currentPage - maxPagesBeforeCurrentPage;\r\n                endPage = currentPage + maxPagesAfterCurrentPage;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        let startIndex = (currentPage - 1) * pageSize;\r\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    };\r\n\r\n    // Fires when user clicked on page navigation\r\n    const onNavigate = (pageNumber = 1) => {\r\n        initPagination(pageNumber);\r\n        props.onNavigate(pageNumber);\r\n    };\r\n\r\n    // This method is for Initialize pagination component\r\n    const initPagination = (currentPageNumber = 1) => {\r\n        try {\r\n            setPaginateInfo({ ...Paginate(props.totalCount, currentPageNumber) });\r\n        } catch (err) {\r\n            console.error(\"Error occurred while initPagination\" + err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (props.totalCount) initPagination(1); // Initialize pagination layout, Default page number: 1\r\n    }, [props.totalCount]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {paginateInfo && paginateInfo.totalPages > 1 && <div className=\"flx flx-center pagination-bar\">\r\n                {/* <div className=\"text-muted mr10\">Showing {paginateInfo.currentPage} of {paginateInfo.totalPages}</div> */}\r\n                <div className=\"flx1\">\r\n                    <Pagination size=\"sm\">\r\n                        <Pagination.First disabled={paginateInfo.currentPage === 1} onClick={() => onNavigate(1)} />\r\n                        <Pagination.Prev disabled={paginateInfo.currentPage === 1} onClick={() => onNavigate(paginateInfo.currentPage - 1)} />\r\n                        {paginateInfo && paginateInfo.pages.map((page, i) => {\r\n                            return (\r\n                                <Pagination.Item key={i} active={page === paginateInfo.currentPage} onClick={() => onNavigate(page)}>{page}</Pagination.Item>\r\n                            )\r\n                        })}\r\n                        <Pagination.Next disabled={paginateInfo.currentPage === paginateInfo.totalPages} onClick={() => onNavigate(paginateInfo.currentPage + 1)} />\r\n                        <Pagination.Last disabled={paginateInfo.currentPage === paginateInfo.totalPages} onClick={() => onNavigate(paginateInfo.totalPages)} />\r\n                    </Pagination>\r\n                </div>\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PaginationOne;\r\n","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\LabStore.js\\LabStore.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\LabStore.js\\LabList.js",["212"],"import { ShowChart } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport { BtnPrimary } from \"../../Components/Buttons/Buttons\";\r\nimport ModalGen from \"../../Components/Modal/Modal\";\r\nimport SearchBox from \"../../Components/SearchBox/SearchBox\"\r\nimport { ICN_ON_GOING, ICN_STAR } from \"../../Constant/Icon\"\r\nimport AddLab from \"./AddLab\";\r\nimport \"./Styles.css\";\r\n\r\nconst dummyData = [\r\n    {label:'Google Cloud Essentials', icon: ICN_ON_GOING, link: '', desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Google Cloud Essentials', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'App Development', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Big Data', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Machine Learning', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Security Backups & Recovery', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'}\r\n]\r\n\r\nconst LabList = () => {\r\n    const [show,setShow] = useState(false)\r\n    return (<div className=\"table-shadow p-3\">\r\n          <div className=\"jcb \">\r\n                <div className=\"\">Lab Store</div>\r\n                <SearchBox/>\r\n            </div>\r\n            <div className=\"flx mt-3\">\r\n                  <div className=\"tab-btn\">Catalog</div>  \r\n                  <div className=\"tab-btn secondary-color\">My Labs</div>  \r\n            </div>\r\n\r\n            <div className=\"catalog-container\">\r\n                {dummyData.map(res=> <div className=\"labList\">\r\n                    <div className=\"aic flx1 jcc\">{res.icon}</div>\r\n                    <div className=\"labList-info flx5\">\r\n                        <div>\r\n                            <div className=\"title-md text-white\">{res.label}</div>\r\n                            <div className=\"title-sm text-white\">{res.desc}</div>\r\n                        </div>\r\n                        <div className=\"text-md text-white\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    2 hours\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    Intermediate\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    on Demand\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    0.2$\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-right jcb-c\">\r\n                        <div><BtnPrimary onClick={()=>setShow(true)}>+ Import Now</BtnPrimary></div>\r\n                        <div className=\"\">\r\n                              <div className=\"title-sm text-white\">500 + active imports</div>\r\n                              <div className=\"star-icon\">\r\n                                  <div>\r\n                                      {ICN_STAR}\r\n                                  </div>\r\n                                  <div>\r\n                                      {ICN_STAR}\r\n                                  </div>\r\n                                  <div>\r\n                                      {ICN_STAR}\r\n                                  </div>\r\n                                  <div>\r\n                                      {ICN_STAR}\r\n                                  </div>\r\n                                  <div>\r\n                                      {ICN_STAR}\r\n                                  </div>\r\n                                  \r\n                              </div>\r\n                        </div>\r\n                    </div>\r\n                </div> )}\r\n          \r\n            </div>\r\n    {<ModalGen {...{show,setShow,headerTitle:\"Add This Lab\",size:\"xl\"}}>\r\n         {show && <AddLab/>}  \r\n    </ModalGen>}\r\n</div>)\r\n}\r\n\r\nexport default LabList","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\SearchBox\\SearchBox.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\LabStore.js\\AddLab.js",["213"],"import Carousel from 'react-bootstrap/Carousel'\r\nimport { ICN_ON_GOING } from \"../../Constant/Icon\"\r\nimport Screen1 from '../../Assets/Images/screen1.png';\r\nimport \"./Styles.css\";\r\nimport { Button } from '../../Components/Buttons/Buttons';\r\n\r\nconst dummyData = { label: 'Google Cloud Essentials', icon: ICN_ON_GOING, link: '', desc: 'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details' }\r\n\r\nconst AddLab = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"title-sm\">Google Cloud Essentials</div>\r\n            <div className=\"text-justify\">\r\n                In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s\r\n                fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the\r\n                Google Cloud learner - you will come in with little or no prior cloud knowledge, and come out with\r\n                practical experience that you can apply to your first Google Cloud project. From writing Cloud Shell\r\n                commands and deploying your first virtual machine, to running applications on Kubernetes Engine or with\r\n                load balancing, Google Cloud Essentials is a prime introduction to the platform’s basic features.\r\n            </div>\r\n            <div className=\"row pt-2 pb-4\">\r\n                <div className=\"col-3\">\r\n                  <div className=\"title-sm\">Duration: 4 hours</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"title-sm\">Difficulty level: Introductory</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"title-sm\">Availability type: On-demand</div>\r\n                </div>\r\n             </div>\r\n             <div className=\"title-md\">Lab Details</div>\r\n             <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  <div className=\"\">Developed by</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"\">TrainSoft</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"\">Number of users required</div>\r\n                </div>\r\n             </div>\r\n             <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  <div>Users' rating</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div>5</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div></div>\r\n                </div>\r\n             </div>\r\n             <div className=\"row aic\">\r\n                <div className=\"col-3\">\r\n                  <div>Cost per user</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"title-sm\">$0.20</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div></div>\r\n                </div>\r\n             </div>\r\n             <div className=\"title-md mt-2\">Screenshots</div>\r\n             <Carousel>\r\n                <Carousel.Item>\r\n                <div className=\"flx\">\r\n                <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  </div>\r\n                \r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                <div className=\"flx\">\r\n                <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  </div>\r\n                </Carousel.Item>\r\n          \r\n              </Carousel>\r\n\r\n              <footer className=\"jcb mt-4\">\r\n                <div></div>\r\n                        <div>\r\n                           <Button type=\"submit\" >Pay and import</Button>\r\n                        </div>\r\n                  </footer>\r\n            </div>)\r\n}\r\n\r\nexport default AddLab","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Modal\\Modal.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\Course\\Course.js",["214","215"],"import { useState } from \"react\";\r\nimport './../Batches/batches.css'\r\nimport DynamicTable from \"../../Components/DynamicTable/DynamicTable\";\r\nimport {Modal,Form} from 'react-bootstrap'\r\nimport { Formik} from 'formik';\r\nimport { ICN_TRASH,ICN_EDIT, ICN_CLOSE  } from \"../../Constant/Icon\";\r\nimport { Button } from \"../../Components/Buttons/Buttons\";\r\nimport { TextInput,DateInput,SelectInput } from \"../../Components/InputField/InputField\";\r\nimport { Link, Router } from \"../../Shared/Router\";\r\nimport ModalGen from \"../../Components/Modal/Modal\";\r\n\r\n\r\n\r\nconst dummyData =[\r\n    {course: 'Angular',batchName: 'ITU_01',createdData:'22 june 2020',learners:'333',status:'Active',startDate:'123213',endDate:'323213'},\r\n    {course: 'Angular',batchName: 'ITU_01',createdData:'22 june 2020',learners:'333',status:'Active',startDate:'123213',endDate:'323213'},\r\n    {course: 'Angular',batchName: 'ITU_01',createdData:'22 june 2020',learners:'333',status:'Active',startDate:'123213',endDate:'323213'},\r\n    {course: 'Angular',batchName: 'ITU_01',createdData:'22 june 2020',learners:'333',status:'Active',startDate:'123213',endDate:'323213'},\r\n    {course: 'Angular',batchName: 'ITU_01',createdData:'22 june 2020',learners:'333',status:'Active',startDate:'123213',endDate:'323213'},\r\n\r\n]\r\n\r\nconst createBatches = {\r\n    batchName: '',\r\n    trainingType: '',\r\n    endDate:'',\r\n    startDate: '',\r\n    course:'',\r\n    instructor:''\r\n\r\n}\r\nconst Courses = () => {\r\n    const [show, setShow] = useState(false);\r\n    const [configuration, setConfiguration] = useState({\r\n        columns: {\r\n            \"course\": {\r\n                \"title\": \"Course Name\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false,\r\n                render: (data)=>  <Link to={'batches-details'} className=\"dt-name\">{data.course}</Link> \r\n\r\n            },\r\n            \"batchName\": {\r\n                \"title\": \"Batch Name\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false,\r\n\r\n            }\r\n            ,\r\n            \"createdDate\": {\r\n                \"title\": \"Created Date\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"learner\": {\r\n                \"title\": \"learners\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"status\": {\r\n                \"title\": \"Status\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"startDate\": {\r\n                \"title\": \"Start Date\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n        },\r\n        headerTextColor: '#454E50', // user can change table header text color\r\n        sortBy: null,  // by default sort table by name key\r\n        sortDirection: false, // sort direction by default true\r\n        updateSortBy: (sortKey) => {\r\n            configuration.sortBy = sortKey;\r\n            Object.keys(configuration.columns).map(key => configuration.columns[key].sortDirection = (key === sortKey) ? !configuration.columns[key].sortDirection : false);\r\n            configuration.sortDirection = configuration.columns[sortKey].sortDirection;\r\n            setConfiguration({ ...configuration });\r\n        },\r\n        actions: [\r\n            {\r\n                \"title\": \"Edit\",\r\n                \"icon\": ICN_EDIT,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            },\r\n            {\r\n                \"title\": \"Delete\",\r\n                \"icon\": ICN_TRASH,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            }\r\n        ],\r\n        actionCustomClass: \"no-chev esc-btn-dropdown\", // user can pass their own custom className name to add/remove some css style on action button\r\n        actionVariant: \"\", // user can pass action button variant like primary, dark, light,\r\n        actionAlignment: true, // user can pass alignment property of dropdown menu by default it is alignLeft \r\n        // call this callback function onSearch method in input field on onChange handler eg: <input type=\"text\" onChange={(e) => onSearch(e.target.value)}/>\r\n        // this search is working for search enable fields(column) eg. isSearchEnabled: true, in tale column configuration\r\n        searchQuery: \"\",\r\n        tableCustomClass: \"ng-table sort-enabled\", // table custom class\r\n        showCheckbox: true,\r\n        clearSelection: false\r\n    });\r\n    return (<div className=\"table-shadow\">\r\n        <div className=\"table-top-action \">\r\n            <div>\r\n                <div className=\"\">Batches</div>\r\n            </div>\r\n            <div>\r\n               <Button onClick={()=>setShow(true)}> + Add New </Button>\r\n\r\n            <ModalGen {...{show,setShow,headerTitle: \"Add new Batches\",size:\"lg\"}}>\r\n            <div className=\"form-container\">\r\n            <Formik\r\n                onSubmit={()=>console.log('a')}\r\n                initialValues={createBatches}\r\n            >\r\n                {({ handleSubmit, isSubmitting, dirty }) => <form onSubmit={handleSubmit} className=\"create-batch\" >\r\n                        <div className=\"edit-shipping\">\r\n                            <Form.Group className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <TextInput label=\"Batch Name\" name=\"batchName\"/>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                  <SelectInput label=\"Training Type\" option={['Online','Self','Offline']} name=\"trainingType\"/>\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                  <DateInput label=\"Start Date\" name=\"startDate\"/>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                  <DateInput label=\"End date\" name=\"endDate\"/>\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                  <SelectInput label=\"Course\" name=\"course\" option={['Online','Self','Offline']}/>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                  <TextInput label=\"Instructor\" name=\"instructor\"/>\r\n                                </div>\r\n                            </Form.Group>\r\n                    </div>\r\n                    {/* modal footer which contains action button to save data or cancel current action */}\r\n                    <footer className=\"jcb\">\r\n                        <div>\r\n                            <span className=\"title-sm\">Upload participants</span>\r\n                        </div>\r\n                        <div>\r\n                           <Button type=\"submit\" >Create Batches</Button>\r\n                        </div>\r\n                    </footer>\r\n                </form>\r\n                }\r\n            </Formik>\r\n            </div>\r\n         </ModalGen>\r\n\r\n            </div>\r\n        </div>\r\n        <DynamicTable {...{configuration,sourceData: dummyData}}/>\r\n               \r\n    </div>)\r\n}\r\n\r\n\r\nconst Course = () => {\r\n    return(\r\n        <Router>\r\n                <Courses path=\"/\" />\r\n        </Router>\r\n    )\r\n}\r\nexport default Course","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Screens\\ClassLab\\ClassLab.js",["216","217"],"import './classlab.css'\r\nimport vid from '../../Assets/Images/vid.jpg';\r\nimport { ICN_ASSESSMENT, ICN_EDIT, ICN_EXIT, ICN_PEOPLE, ICN_RECORD, ICN_SCREEN_SHARE, ICN_SEND } from '../../Constant/Icon';\r\n\r\n\r\nconst ClassLab = () =>{\r\n    return(<>\r\n        <div className=\"p-4 full-w full-h\">\r\n            <div className=\"flx full-w full-h \">\r\n            <div className=\"full-w full-h flx3 column\">\r\n              <div className=\"title-lg\">TrainSoft - Instructor</div>\r\n              <div className=\"class-mode\">\r\n                New\r\n                <div className=\"mode-close\">X</div>\r\n              </div>    \r\n              <div className=\"box-shadow vic\">\r\n                    <div className=\"\">\r\n                            <div className=\"title-md mb-3\">You are currently not sharing anything </div>\r\n                            <div>Start sharing now!</div>\r\n                    </div>\r\n              </div>\r\n            </div>\r\n\r\n             {/* right panel */}\r\n               <div className=\"flx1 ml-3 column\">\r\n                    <div className=\"jcb\">\r\n                        <div className=\"action-btn\">\r\n                            {ICN_SCREEN_SHARE}\r\n                        </div>\r\n                        <div className=\"action-btn\">\r\n                            {ICN_RECORD}\r\n                        </div>\r\n                        <div className=\"action-btn\">\r\n                            {ICN_PEOPLE}\r\n                        </div>\r\n                        <div className=\"action-btn\">\r\n                            {ICN_ASSESSMENT}\r\n                        </div>\r\n                        <div className=\"action-btn\">\r\n                            {ICN_ASSESSMENT}\r\n                        </div>\r\n                        <div className=\"action-btn\">\r\n                            {ICN_EXIT}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"video-container\">\r\n                            <div className=\"video-action\">\r\n                                <img src={vid}/>\r\n                                <div></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flx mt-3 storeTab-shadow\">\r\n                        <div className=\"tab-btn\">Class conversation</div>  \r\n                        <div className=\"tab-btn secondary-color\">Private message</div>  \r\n                    </div>\r\n                    <div className=\"chat-container\">\r\n                        <div className=\"chat-body\">\r\n                            <div className=\"inbound-chat\">\r\n                            <div className=\"user-img\">\r\n\r\n                            </div>\r\n                                <div className=\"chat-bubble\">\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"outbound-chat\">\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"jcb\">\r\n                         <div className=\"chat-send\">\r\n                             <div><input type=\"text\" className=\"form-control\" placeholder=\"Type your message...\"/></div>\r\n                            <div className=\"primary-cir text-white\">{ICN_SEND}</div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n               </div>\r\n                {/* end right panel */}\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\nexport default ClassLab",{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":5,"column":8,"nodeType":"224","messageId":"225","endLine":5,"endColumn":14},{"ruleId":"222","severity":1,"message":"226","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":15},{"ruleId":"222","severity":1,"message":"227","line":1,"column":10,"nodeType":"224","messageId":"225","endLine":1,"endColumn":16},{"ruleId":"222","severity":1,"message":"228","line":2,"column":18,"nodeType":"224","messageId":"225","endLine":2,"endColumn":22},{"ruleId":"218","replacedBy":"229"},{"ruleId":"220","replacedBy":"230"},{"ruleId":"222","severity":1,"message":"231","line":12,"column":8,"nodeType":"224","messageId":"225","endLine":12,"endColumn":22},{"ruleId":"222","severity":1,"message":"232","line":13,"column":8,"nodeType":"224","messageId":"225","endLine":13,"endColumn":27},{"ruleId":"222","severity":1,"message":"233","line":15,"column":8,"nodeType":"224","messageId":"225","endLine":15,"endColumn":15},{"ruleId":"222","severity":1,"message":"234","line":2,"column":28,"nodeType":"224","messageId":"225","endLine":2,"endColumn":38},{"ruleId":"222","severity":1,"message":"235","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":16},{"ruleId":"222","severity":1,"message":"236","line":4,"column":9,"nodeType":"224","messageId":"225","endLine":4,"endColumn":14},{"ruleId":"222","severity":1,"message":"237","line":6,"column":30,"nodeType":"224","messageId":"225","endLine":6,"endColumn":39},{"ruleId":"222","severity":1,"message":"238","line":6,"column":7,"nodeType":"224","messageId":"225","endLine":6,"endColumn":17},{"ruleId":"239","severity":1,"message":"240","line":17,"column":168,"nodeType":"241","messageId":"242","endLine":17,"endColumn":169},{"ruleId":"239","severity":1,"message":"240","line":17,"column":231,"nodeType":"241","messageId":"242","endLine":17,"endColumn":234},{"ruleId":"243","severity":1,"message":"244","line":178,"column":8,"nodeType":"245","endLine":178,"endColumn":20,"suggestions":"246"},{"ruleId":"243","severity":1,"message":"247","line":188,"column":8,"nodeType":"245","endLine":188,"endColumn":44,"suggestions":"248"},{"ruleId":"243","severity":1,"message":"249","line":193,"column":8,"nodeType":"245","endLine":193,"endColumn":71,"suggestions":"250"},{"ruleId":"222","severity":1,"message":"251","line":6,"column":31,"nodeType":"224","messageId":"225","endLine":6,"endColumn":42},{"ruleId":"222","severity":1,"message":"252","line":23,"column":7,"nodeType":"224","messageId":"225","endLine":23,"endColumn":20},{"ruleId":"222","severity":1,"message":"252","line":18,"column":7,"nodeType":"224","messageId":"225","endLine":18,"endColumn":20},{"ruleId":"222","severity":1,"message":"253","line":5,"column":10,"nodeType":"224","messageId":"225","endLine":5,"endColumn":19},{"ruleId":"243","severity":1,"message":"254","line":82,"column":8,"nodeType":"245","endLine":82,"endColumn":26,"suggestions":"255"},{"ruleId":"222","severity":1,"message":"256","line":1,"column":10,"nodeType":"224","messageId":"225","endLine":1,"endColumn":19},{"ruleId":"222","severity":1,"message":"257","line":7,"column":7,"nodeType":"224","messageId":"225","endLine":7,"endColumn":16},{"ruleId":"222","severity":1,"message":"236","line":4,"column":9,"nodeType":"224","messageId":"225","endLine":4,"endColumn":14},{"ruleId":"222","severity":1,"message":"237","line":6,"column":30,"nodeType":"224","messageId":"225","endLine":6,"endColumn":39},{"ruleId":"222","severity":1,"message":"258","line":3,"column":26,"nodeType":"224","messageId":"225","endLine":3,"endColumn":34},{"ruleId":"259","severity":1,"message":"260","line":49,"column":33,"nodeType":"261","endLine":49,"endColumn":49},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","'render' is defined but never used.","'Link' is defined but never used.",["262"],["263"],"'BatchesDetails' is defined but never used.","'ParticipantsDetails' is defined but never used.","'LabList' is defined but never used.","'ICN_SEARCH' is defined but never used.","'SendIcon' is defined but never used.","'Modal' is defined but never used.","'ICN_CLOSE' is defined but never used.","'htmlParser' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '>' and '!=='.","BinaryExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isSelectedAll'. Either include it or remove the dependency array.","ArrayExpression",["264"],"React Hook useEffect has a missing dependency: 'onSelectAll'. Either include it or remove the dependency array.",["265"],"React Hook useEffect has missing dependencies: 'props.configuration' and 'sourceData'. Either include them or remove the dependency array. You can also do a functional update 'setSourceData(s => ...)' if you only need 'sourceData' in the 'setSourceData' call.",["266"],"'ICN_BATCHES' is defined but never used.","'createBatches' is assigned a value but never used.","'ICN_EVENT' is defined but never used.","React Hook useEffect has a missing dependency: 'initPagination'. Either include it or remove the dependency array.",["267"],"'ShowChart' is defined but never used.","'dummyData' is assigned a value but never used.","'ICN_EDIT' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [isSelectedAll, sourceData]",{"range":"276","text":"277"},"Update the dependencies array to be: [onSelectAll, props.configuration.clearSelection]",{"range":"278","text":"279"},"Update the dependencies array to be: [props.configuration, props.configuration.sortBy, props.configuration.sortDirection, sourceData]",{"range":"280","text":"281"},"Update the dependencies array to be: [initPagination, props.totalCount]",{"range":"282","text":"283"},[9327,9339],"[isSelectedAll, sourceData]",[9704,9740],"[onSelectAll, props.configuration.clearSelection]",[10017,10080],"[props.configuration, props.configuration.sortBy, props.configuration.sortDirection, sourceData]",[3196,3214],"[initPagination, props.totalCount]"]