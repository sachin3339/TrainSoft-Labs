[{"C:\\Users\\goutlaks\\lms\\src\\index.js":"1","C:\\Users\\goutlaks\\lms\\src\\App.js":"2","C:\\Users\\goutlaks\\lms\\src\\Screens\\Auth\\Login.js":"3","C:\\Users\\goutlaks\\lms\\src\\Components\\Header\\Header.js":"4","C:\\Users\\goutlaks\\lms\\src\\Components\\Sidebar\\Sidebar.js":"5","C:\\Users\\goutlaks\\lms\\src\\Screens\\Dashboard\\Dashboard.js":"6","C:\\Users\\goutlaks\\lms\\src\\Screens\\Home\\Home.js":"7","C:\\Users\\goutlaks\\lms\\src\\Screens\\Report\\Report.js":"8","C:\\Users\\goutlaks\\lms\\src\\Screens\\Setting\\Setting.js":"9","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\index.js":"10","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\App.js":"11","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Charts\\Charts.js":"12","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Services\\MethodFactory.js":"13","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\Router.js":"14","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\ClassLab.js":"15","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Auth\\Login.js":"16","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Layout\\Dashboard\\Dashboard.js":"17","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\BsUtils.js":"18","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\Icon.js":"19","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\Buttons\\Buttons.js":"20","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\OnlineMedia\\OnlineMedia.js":"21","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\ClassPoll\\ClassPoll.js":"22","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\Content\\Content.js":"23","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\WhiteBoard\\WhiteBoard.js":"24","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\CodeEditor\\CodeEditor.js":"25","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Layout\\Sidebar\\Sidebar.js":"26","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Setting\\Setting.js":"27","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Layout\\Header\\Header.js":"28","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Calender\\Calender.js":"29","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Support\\Support.js":"30","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\OrgMgmt\\OrgMgmt.js":"31","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\LabStore.js\\LabStore.js":"32","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Report\\Report.js":"33","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Course\\Course.js":"34","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Traning.js":"35","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Batches\\Batches.js":"36","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Home\\Home.js":"37","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\CodeEditor\\Language.js":"38","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Layout\\Sidebar\\SidebarConfig.js":"39","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\CardHeader.js":"40","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\LabStore.js\\LabList.js":"41","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Batches\\BatchDetails.js":"42","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\TrainingDetails.js":"43","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\SearchBox\\SearchBox.js":"44","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\DynamicTable\\DynamicTable.js":"45","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\InputField\\InputField.js":"46","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\LabStore.js\\AddLab.js":"47","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\Pagination.js":"48","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Session\\Session.js":"49","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\TrainingInfo\\TrainingInfo.js":"50","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Store\\AppContext.js":"51","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Store\\SpinnerHook.js":"52","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\Spinner\\Spinner.js":"53","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Session\\AddSession.js":"54","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Labs\\Labs.js":"55","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Report\\Report.js":"56","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Forum\\Forum.js":"57","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Assessment\\Assessment.js":"58","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\LabStore.js\\MyLab\\MyLab.js":"59","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\NoDataFound\\NoDataFound.js":"60","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Course\\CourseDetails.js":"61","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\CalenderGraph\\CalenderGraph.js":"62"},{"size":227,"mtime":1611041483818,"results":"63","hashOfConfig":"64"},{"size":511,"mtime":1611221516407,"results":"65","hashOfConfig":"64"},{"size":1249,"mtime":1611223955242,"results":"66","hashOfConfig":"64"},{"size":1155,"mtime":1611049157547,"results":"67","hashOfConfig":"64"},{"size":740,"mtime":1611223246807,"results":"68","hashOfConfig":"64"},{"size":760,"mtime":1611221507922,"results":"69","hashOfConfig":"64"},{"size":100,"mtime":1611218733618,"results":"70","hashOfConfig":"64"},{"size":104,"mtime":1611218746757,"results":"71","hashOfConfig":"64"},{"size":107,"mtime":1611218790042,"results":"72","hashOfConfig":"64"},{"size":339,"mtime":1613475145151,"results":"73","hashOfConfig":"74"},{"size":772,"mtime":1613475144790,"results":"75","hashOfConfig":"74"},{"size":2914,"mtime":1611726647111,"results":"76","hashOfConfig":"74"},{"size":406,"mtime":1611726647210,"results":"77","hashOfConfig":"74"},{"size":484,"mtime":1613475147487,"results":"78","hashOfConfig":"74"},{"size":7157,"mtime":1613970725388,"results":"79","hashOfConfig":"74"},{"size":934,"mtime":1613475147373,"results":"80","hashOfConfig":"74"},{"size":1754,"mtime":1613475144916,"results":"81","hashOfConfig":"74"},{"size":3275,"mtime":1613718793043,"results":"82","hashOfConfig":"74"},{"size":19695,"mtime":1613475147531,"results":"83","hashOfConfig":"74"},{"size":3792,"mtime":1613670089450,"results":"84","hashOfConfig":"74"},{"size":1482,"mtime":1613735737248,"results":"85","hashOfConfig":"74"},{"size":6520,"mtime":1613475147284,"results":"86","hashOfConfig":"74"},{"size":2394,"mtime":1613971725644,"results":"87","hashOfConfig":"74"},{"size":4099,"mtime":1613807465137,"results":"88","hashOfConfig":"74"},{"size":4259,"mtime":1613475144994,"results":"89","hashOfConfig":"74"},{"size":772,"mtime":1613670089534,"results":"90","hashOfConfig":"74"},{"size":216,"mtime":1613670089629,"results":"91","hashOfConfig":"74"},{"size":2300,"mtime":1613670089513,"results":"92","hashOfConfig":"74"},{"size":2316,"mtime":1613718775388,"results":"93","hashOfConfig":"74"},{"size":216,"mtime":1613670089637,"results":"94","hashOfConfig":"74"},{"size":228,"mtime":1613670089615,"results":"95","hashOfConfig":"74"},{"size":4500,"mtime":1613670089603,"results":"96","hashOfConfig":"74"},{"size":242,"mtime":1613670089622,"results":"97","hashOfConfig":"74"},{"size":8514,"mtime":1613721580495,"results":"98","hashOfConfig":"74"},{"size":9470,"mtime":1613670089800,"results":"99","hashOfConfig":"74"},{"size":8396,"mtime":1613670089557,"results":"100","hashOfConfig":"74"},{"size":8756,"mtime":1613712803133,"results":"101","hashOfConfig":"74"},{"size":2138,"mtime":1613475144999,"results":"102","hashOfConfig":"74"},{"size":1950,"mtime":1613719320518,"results":"103","hashOfConfig":"74"},{"size":715,"mtime":1613670089462,"results":"104","hashOfConfig":"74"},{"size":3467,"mtime":1613670089595,"results":"105","hashOfConfig":"74"},{"size":5891,"mtime":1613670089550,"results":"106","hashOfConfig":"74"},{"size":2357,"mtime":1613670089683,"results":"107","hashOfConfig":"74"},{"size":335,"mtime":1613711284072,"results":"108","hashOfConfig":"74"},{"size":10977,"mtime":1613475147555,"results":"109","hashOfConfig":"74"},{"size":2100,"mtime":1613670089471,"results":"110","hashOfConfig":"74"},{"size":5743,"mtime":1613475147211,"results":"111","hashOfConfig":"74"},{"size":4646,"mtime":1613475147498,"results":"112","hashOfConfig":"74"},{"size":2913,"mtime":1613670089670,"results":"113","hashOfConfig":"74"},{"size":4940,"mtime":1613670089689,"results":"114","hashOfConfig":"74"},{"size":455,"mtime":1613475145138,"results":"115","hashOfConfig":"74"},{"size":374,"mtime":1613475145143,"results":"116","hashOfConfig":"74"},{"size":481,"mtime":1613475144899,"results":"117","hashOfConfig":"74"},{"size":3894,"mtime":1613670089664,"results":"118","hashOfConfig":"74"},{"size":98,"mtime":1613475147125,"results":"119","hashOfConfig":"74"},{"size":133,"mtime":1613670089657,"results":"120","hashOfConfig":"74"},{"size":5331,"mtime":1613670089647,"results":"121","hashOfConfig":"74"},{"size":146,"mtime":1613670089643,"results":"122","hashOfConfig":"74"},{"size":4154,"mtime":1613670089608,"results":"123","hashOfConfig":"74"},{"size":3336,"mtime":1613670089489,"results":"124","hashOfConfig":"74"},{"size":323,"mtime":1613711706731,"results":"125","hashOfConfig":"74"},{"size":4986,"mtime":1613715533175,"results":"126","hashOfConfig":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"1x6u19f",{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"ds9ynd",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"148"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"148"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"148"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"148"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"148"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"148"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"148"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"148"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"148"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"148"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"148"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"148"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"148"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"148"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"148"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"148"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"148"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"148"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"148"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"148"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"148"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"148"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"C:\\Users\\goutlaks\\lms\\src\\index.js",[],["278","279"],"C:\\Users\\goutlaks\\lms\\src\\App.js",["280","281"],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Auth\\Login.js",[],"C:\\Users\\goutlaks\\lms\\src\\Components\\Header\\Header.js",[],"C:\\Users\\goutlaks\\lms\\src\\Components\\Sidebar\\Sidebar.js",[],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Dashboard\\Dashboard.js",["282","283"],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Home\\Home.js",[],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Report\\Report.js",[],"C:\\Users\\goutlaks\\lms\\src\\Screens\\Setting\\Setting.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\index.js",[],["284","285"],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\App.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Charts\\Charts.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Services\\MethodFactory.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\Router.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\ClassLab.js",["286","287"],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Auth\\Login.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Layout\\Dashboard\\Dashboard.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\BsUtils.js",["288"],"import React from 'react'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport { Dropdown, Modal, ProgressBar } from 'react-bootstrap';\r\nimport { CustomToggle } from '../../Services/MethodFactory';\r\nimport { ICN_CLOSE } from './Icon'\r\nimport \"./bsUtils.css\";\r\n\r\n// model\r\nexport const BsModal = ({ children, setShow, show, headerTitle, size = \"md\" }) => {\r\n    return (\r\n        <Modal\r\n            size={size}\r\n            show={show}\r\n            onHide={() => setShow(false)}\r\n            dialogClassName=\"modal-90w\"\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n            <Modal.Body className=\"px-5 py-4\">\r\n                <div className=\"jcb mb-3\">\r\n                    <div className=\"title-md \">{headerTitle}</div>\r\n                    <div><div className=\"circle-md\" onClick={() => setShow(false)}>\r\n                        {ICN_CLOSE}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                {children}\r\n            </Modal.Body>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\n// progress bar\r\nexport const Progress = ({ value = 0, variant, label = \"\", className = \"\" }) => <ProgressBar className={className} label={label} variant={variant} now={value} />\r\n\r\n// dropdown\r\nexport const BsDropDown = ({ children, header = \"\", direction = \"right\" }) => <Dropdown className=\"dropdown-menus\">\r\n    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n        {header}\r\n    </Dropdown.Toggle>\r\n    <Dropdown.Menu as=\"div\" align={direction}>\r\n        {children}\r\n    </Dropdown.Menu>\r\n</Dropdown>\r\n\r\n// card\r\nexport const Card = ({ children, title, action, className = \"\" }) => {\r\n    return (\r\n        <div className={`box-shadow ${className}`}>\r\n            {title && <div className=\"d-flex jcb aic pb-2\">\r\n                <div className=\"title-md\">{title}</div>\r\n                <div>\r\n                    {action && <div className=\"card-action-icon\">A</div>}\r\n                </div>\r\n            </div>}\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n// Breadcrumbs\r\nexport const Breadcrumbs = () => <Breadcrumb>\r\n    <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\r\n    <Breadcrumb.Item href=\"https://getbootstrap.com/docs/4.0/components/Breadcrumb/\">\r\n        Library\r\n</Breadcrumb.Item>\r\n    <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n</Breadcrumb>\r\n\r\n\r\n// profile\r\n// Assets/Images/vid.jpg\r\nexport const ProfileImg = ({url= null,name=\"\",size=\"sm\" }) =>{\r\n    return (<>\r\n        <div className={`user-profile profile-${size}`}>\r\n            {url === null ? <div className=\"\">{name}</div> : <img src={url}/> }\r\n           \r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport const BsCheckbox = ({label=\"\",checked=false,id,onChange, className=\"\"})=>{\r\n        return( <div className={`custom-input ${className}`}>\r\n                  <input type=\"checkbox\" id={id} checked={checked} onChange={onChange} />\r\n              <label htmlFor={id}><span className=\"pl-2\">{label}</span></label>\r\n        </div>)\r\n}\r\n\r\nexport const ActiveBox = ({label=\"\",className=\"\",bgColor=''})=>{\r\n    return( <div className={`aic ${className} ${bgColor}`}>\r\n                <div className=\"activeBox-div\">\r\n\r\n                </div>\r\n                <div className=\"mx-2 mr-4\">{label}</div>\r\n    </div>)\r\n}","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\Icon.js",["289"],"\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport const ICN_HOME = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"30.533\" viewBox=\"0 0 32 30.533\"><path id=\"Home\" d=\"M31.7,24.918,16.646,11.451a.423.423,0,0,0-.086-.066.891.891,0,0,0-1.2-.02L.3,24.832a.89.89,0,0,0,1.185,1.33l2.712-2.429v15.7a2.24,2.24,0,0,0,2.238,2.238h4.752a2.1,2.1,0,0,0,2.1-2.1V31.591a.323.323,0,0,1,.323-.323h4.8a.323.323,0,0,1,.323.323v7.984a2.1,2.1,0,0,0,2.1,2.1h4.752a2.544,2.544,0,0,0,2.238-2.8V23.818l2.712,2.429a.895.895,0,0,0,1.257-.072A.906.906,0,0,0,31.7,24.918Zm-5.673,4.39v9.55c0,.638-.316,1.027-.461,1.027H20.819a.323.323,0,0,1-.323-.323v-7.97a2.1,2.1,0,0,0-2.1-2.1H13.6a2.1,2.1,0,0,0-2.1,2.1v7.984a.323.323,0,0,1-.323.323H6.425a.462.462,0,0,1-.461-.461V22.14l9.991-8.925,10.077,9.01v7.082Z\" transform=\"translate(0 -11.141)\" fill=\"#fff\"/></svg>\r\nexport const ICN_SETTING = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"31.998\" viewBox=\"0 0 32 31.998\"><g id=\"settings\" transform=\"translate(0 -0.002)\"><g id=\"Group_35\" data-name=\"Group 35\" transform=\"translate(0 0.001)\"><path id=\"Path_70\" data-name=\"Path 70\" d=\"M30.362,12.642l-2.246-.381a12.683,12.683,0,0,0-.9-2.179L28.537,8.23a1.971,1.971,0,0,0-.214-2.547L26.331,3.691a1.962,1.962,0,0,0-1.4-.582,1.942,1.942,0,0,0-1.143.368L21.933,4.8a12.551,12.551,0,0,0-2.259-.929L19.3,1.652A1.975,1.975,0,0,0,17.347,0H14.533a1.975,1.975,0,0,0-1.952,1.651l-.388,2.273a12.37,12.37,0,0,0-2.173.916L8.182,3.517a1.974,1.974,0,0,0-2.547.214l-2,1.992A1.979,1.979,0,0,0,3.423,8.27L4.76,10.148a12.388,12.388,0,0,0-.889,2.186l-2.219.374A1.975,1.975,0,0,0,0,14.661v2.814a1.975,1.975,0,0,0,1.651,1.952l2.273.388a12.37,12.37,0,0,0,.916,2.173L3.523,23.819a1.971,1.971,0,0,0,.214,2.547l1.992,1.992a1.962,1.962,0,0,0,1.4.582,1.942,1.942,0,0,0,1.143-.368l1.878-1.337a12.646,12.646,0,0,0,2.112.869l.374,2.246A1.975,1.975,0,0,0,14.586,32h2.821a1.975,1.975,0,0,0,1.952-1.651L19.74,28.1a12.682,12.682,0,0,0,2.179-.9l1.852,1.324a1.962,1.962,0,0,0,1.15.368h0a1.962,1.962,0,0,0,1.4-.582l1.992-1.992a1.979,1.979,0,0,0,.214-2.547L27.2,21.914a12.592,12.592,0,0,0,.9-2.179l2.246-.374A1.975,1.975,0,0,0,32,17.408V14.594A1.951,1.951,0,0,0,30.362,12.642Zm-.154,4.766a.173.173,0,0,1-.147.174l-2.808.468a.9.9,0,0,0-.722.662,10.7,10.7,0,0,1-1.163,2.8.9.9,0,0,0,.04.983l1.651,2.326a.182.182,0,0,1-.02.227l-1.992,1.992a.17.17,0,0,1-.127.053.164.164,0,0,1-.1-.033L22.5,25.41a.9.9,0,0,0-.983-.04,10.7,10.7,0,0,1-2.8,1.163.887.887,0,0,0-.662.722l-.475,2.808a.173.173,0,0,1-.174.147H14.593a.173.173,0,0,1-.174-.147l-.468-2.808a.9.9,0,0,0-.662-.722,11.112,11.112,0,0,1-2.741-1.123.925.925,0,0,0-.455-.12.88.88,0,0,0-.521.167l-2.34,1.664a.2.2,0,0,1-.1.033.179.179,0,0,1-.127-.053L5.014,25.109a.181.181,0,0,1-.02-.227l1.644-2.306a.915.915,0,0,0,.04-.989A10.6,10.6,0,0,1,5.5,18.792a.915.915,0,0,0-.722-.662l-2.828-.481a.173.173,0,0,1-.147-.174V14.661a.173.173,0,0,1,.147-.174l2.788-.468a.9.9,0,0,0,.729-.668,10.69,10.69,0,0,1,1.143-2.808.893.893,0,0,0-.047-.976L4.9,7.227A.182.182,0,0,1,4.92,7L6.912,5.008a.17.17,0,0,1,.127-.053.164.164,0,0,1,.1.033L9.446,6.632a.915.915,0,0,0,.989.04A10.6,10.6,0,0,1,13.229,5.5a.915.915,0,0,0,.662-.722l.481-2.828a.173.173,0,0,1,.174-.147H17.36a.173.173,0,0,1,.174.147L18,4.734a.9.9,0,0,0,.668.729,10.85,10.85,0,0,1,2.868,1.177.9.9,0,0,0,.983-.04l2.306-1.658a.2.2,0,0,1,.1-.033.179.179,0,0,1,.127.053l1.992,1.992a.181.181,0,0,1,.02.227L25.415,9.5a.9.9,0,0,0-.04.983,10.7,10.7,0,0,1,1.163,2.8.887.887,0,0,0,.722.662l2.808.475a.173.173,0,0,1,.147.174v2.814Z\" transform=\"translate(0 -0.001)\" fill=\"#fff\"/><path id=\"Path_71\" data-name=\"Path 71\" d=\"M143.017,136a6.917,6.917,0,1,0,6.917,6.917A6.922,6.922,0,0,0,143.017,136Zm0,12.027a5.109,5.109,0,1,1,5.109-5.109A5.113,5.113,0,0,1,143.017,148.028Z\" transform=\"translate(-127.014 -126.922)\" fill=\"#fff\"/></g></g></svg>\r\nexport const ICN_PIE_CHART = <PieChartIcon/>\r\nexport const ICN_LIVE_HELP = <LiveHelpIcon/>\r\nexport const ICN_LIBRARY = <LibraryBooksIcon/>\r\nexport const ICN_ARROW_DOWN = <KeyboardArrowDownIcon/>\r\nexport const ICN_CLOSE = <CloseIcon/>\r\nexport const ICN_EVENT = <EventIcon/>\r\nexport const ICN_STAR = <StarRateIcon/>\r\nexport const ICN_SEND = <TelegramIcon/>\r\nexport const ICN_SCREEN_SHARE = <ScreenShareIcon/>\r\nexport const ICN_RECORD = <FiberManualRecordIcon/>\r\nexport const ICN_PEOPLE = <PeopleIcon/>\r\nexport const ICN_ASSESSMENT= <AssessmentIcon/>\r\nexport const ICN_EXIT= <ExitToAppIcon/>\r\nexport const ICN_PLAY = <PlayArrowIcon/>\r\nexport const ICN_PRESENT = <PresentToAllIcon/>\r\nexport const ICN_VIDEO = <VideocamIcon/>\r\nexport const ICN_MIC = <MicIcon/>\r\nexport const ICN_SAVE = <SaveIcon/>\r\nexport const ICN_PUBLISH = <PublishIcon/>\r\nexport const ICN_DOWNLOAD = <GetAppIcon/>\r\nexport const ICN_STAR_HALF = <Brightness3Icon/>\r\nexport const ICN_FULL_SCREEN = <FullscreenIcon/>\r\nexport const ICN_SELECT = <NearMeIcon/>\r\nexport const ICN_PEN = <CreateIcon/>\r\nexport const ICN_STOP = <StopIcon/>\r\nexport const ICN_PAINT = <ColorLensIcon/>\r\nexport const ICN_CIRCLE = <FiberManualRecordIcon/>\r\nexport const ICN_TEXT_FIELD = <TextFieldsIcon/>\r\nexport const ICN_CALL_MADE = <CallMadeIcon/>\r\nexport const ICN_DELETE = <DeleteIcon/>\r\n\r\n\r\nexport const ICN_PROGRESS = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"44.619\" height=\"14.941\" viewBox=\"0 0 44.619 14.941\"><path id=\"Progress\" d=\"M-9.18.63a7.32,7.32,0,0,1-7.38-7.47,7.212,7.212,0,0,1,7.38-7.47A7.212,7.212,0,0,1-1.8-6.84,7.32,7.32,0,0,1-9.18.63ZM-28.7.49a5.693,5.693,0,0,1-5.74-5.81,5.609,5.609,0,0,1,5.74-5.81,5.609,5.609,0,0,1,5.74,5.81A5.693,5.693,0,0,1-28.7.49ZM-42.73.315A3.66,3.66,0,0,1-46.42-3.42a3.606,3.606,0,0,1,3.69-3.735A3.606,3.606,0,0,1-39.04-3.42,3.66,3.66,0,0,1-42.73.315Z\" transform=\"translate(46.42 14.311)\" fill=\"#fff\"/></svg>\r\nexport const ICN_PASSED = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"29.867\" height=\"29.867\" viewBox=\"0 0 29.867 29.867\"><path id=\"Passed\" d=\"M29.548,6.318H26.229V3H9.637V6.318H6.318A3.328,3.328,0,0,0,3,9.637V11.3a8.282,8.282,0,0,0,7.284,8.2,8.312,8.312,0,0,0,5.99,4.911v5.144H9.637v3.318H26.229V29.548H19.592V24.4a8.312,8.312,0,0,0,5.99-4.911,8.282,8.282,0,0,0,7.284-8.2V9.637A3.328,3.328,0,0,0,29.548,6.318ZM6.318,11.3V9.637H9.637v6.338A5,5,0,0,1,6.318,11.3Zm11.615,9.955a4.992,4.992,0,0,1-4.978-4.978V6.318h9.955v9.955A4.992,4.992,0,0,1,17.933,21.252ZM29.548,11.3a5,5,0,0,1-3.318,4.679V9.637h3.318Z\" transform=\"translate(-3 -3)\" fill=\"#fff\"/></svg>\r\nexport const ICN_COMPLETED = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24.021\" height=\"30\" viewBox=\"0 0 24.021 30\"><g id=\"Complete\" transform=\"translate(-1411.502 -285)\"><g id=\"copy\" transform=\"translate(1362.851 285)\"><g id=\"Group_20\" data-name=\"Group 20\" transform=\"translate(48.65)\"><path id=\"Path_17\" data-name=\"Path 17\" d=\"M65.039,85.4H51.032a2.383,2.383,0,0,0-2.382,2.382v20.1a2.383,2.383,0,0,0,2.382,2.382H65.039a2.383,2.383,0,0,0,2.382-2.382v-20.1A2.391,2.391,0,0,0,65.039,85.4Zm.71,22.474a.716.716,0,0,1-.716.716H51.026a.716.716,0,0,1-.716-.716V87.782a.716.716,0,0,1,.716-.716H65.033a.716.716,0,0,1,.716.716Z\" transform=\"translate(-48.65 -80.262)\" fill=\"#fff\"/><path id=\"Path_18\" data-name=\"Path 18\" d=\"M151.839,0H137.832a2.383,2.383,0,0,0-2.382,2.382.833.833,0,0,0,1.666,0,.716.716,0,0,1,.716-.716h14.007a.716.716,0,0,1,.716.716v20.1a.716.716,0,0,1-.716.716.833.833,0,0,0,0,1.666,2.383,2.383,0,0,0,2.382-2.382V2.382A2.383,2.383,0,0,0,151.839,0Z\" transform=\"translate(-130.199)\" fill=\"#fff\"/></g></g><path id=\"Path_2523\" data-name=\"Path 2523\" d=\"M12.47,14,9,10.5l1.4-1.41,2.07,2.08L17.6,6,19,7.41Z\" transform=\"translate(1407 293)\" fill=\"#fff\"/></g></svg>\r\nexport const ICN_EMAIL_W = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"16\" viewBox=\"0 0 20 16\"><path id=\"Email\" d=\"M22,6a2.006,2.006,0,0,0-2-2H4A2.006,2.006,0,0,0,2,6V18a2.006,2.006,0,0,0,2,2H20a2.006,2.006,0,0,0,2-2ZM20,6l-8,5L4,6Zm0,12H4V8l8,5,8-5Z\" transform=\"translate(-2 -4)\" fill=\"#fff\"/></svg>\r\nexport const ICN_TEXT_W = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path id=\"Text\" d=\"M20,2H4A2.006,2.006,0,0,0,2,4V22l4-4H20a2.006,2.006,0,0,0,2-2V4A2.006,2.006,0,0,0,20,2Zm0,14H6L4,18V4H20ZM7,9H9v2H7Zm4,0h2v2H11Zm4,0h2v2H15Z\" transform=\"translate(-2 -2)\" fill=\"#fff\"/></svg>\r\nexport const ICN_PARTICIPANT = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32.93\" height=\"32.93\" viewBox=\"0 0 32.93 32.93\"><g id=\"Participant\" transform=\"translate(-3765 -1197)\"><path id=\"Path_2500\" data-name=\"Path 2500\" d=\"M27.465,14.5C21.957,14.5,11,17.524,11,23.481v4.49H43.93v-4.49C43.93,17.524,32.973,14.5,27.465,14.5Z\" transform=\"translate(3754 1201.958)\" fill=\"#fff\"/><g id=\"Group_108\" data-name=\"Group 108\" transform=\"translate(3773.981 1197)\"><path id=\"Path_2501\" data-name=\"Path 2501\" d=\"M25.106,22.01a7.484,7.484,0,1,0-7.245,0,7.327,7.327,0,0,0,7.245,0Z\" transform=\"translate(-14 -8)\" fill=\"#fff\"/></g></g></svg>\r\nexport const ICN_REPORT = <svg id=\"Report\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path id=\"Path_2510\" data-name=\"Path 2510\" d=\"M33.813,15a2.8,2.8,0,0,0,1.947-.791L38.534,15.6a2.755,2.755,0,0,0-.034.341,2.813,2.813,0,1,0,5.625,0,2.778,2.778,0,0,0-.282-1.2l3.765-3.765a2.778,2.778,0,0,0,1.2.282,2.816,2.816,0,0,0,2.813-2.813,2.77,2.77,0,0,0-.14-.833l3.271-2.453A2.811,2.811,0,1,0,53.5,2.813a2.77,2.77,0,0,0,.14.833L50.369,6.1a2.8,2.8,0,0,0-4.087,3.544l-3.765,3.765a2.764,2.764,0,0,0-3.152.509l-2.775-1.387a2.755,2.755,0,0,0,.034-.341A2.813,2.813,0,1,0,33.813,15Zm0,0\" transform=\"translate(-29.063)\" fill=\"#fff\"/><path id=\"Path_2511\" data-name=\"Path 2511\" d=\"M31.063,170.75h-1V150.938a.937.937,0,0,0-.938-.937h-3.75a.937.937,0,0,0-.938.938V170.75H22.563V156.563a.937.937,0,0,0-.938-.938h-3.75a.937.937,0,0,0-.938.938V170.75H15.063v-6.688a.937.937,0,0,0-.938-.937h-3.75a.937.937,0,0,0-.938.938v6.688H7.563V160.313a.937.937,0,0,0-.938-.938H2.875a.937.937,0,0,0-.938.938V170.75h-1a.938.938,0,1,0,0,1.875H31.063a.938.938,0,1,0,0-1.875Zm0,0\" transform=\"translate(0 -140.625)\" fill=\"#fff\"/></svg>\r\nexport const ICN_SUPPORT = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"29\" viewBox=\"0 0 26 29\"><path id=\"Support\" d=\"M26.111,2H5.889A2.827,2.827,0,0,0,3,4.762V24.1a2.827,2.827,0,0,0,2.889,2.762h5.778L16,31l4.333-4.143h5.778A2.836,2.836,0,0,0,29,24.1V4.762A2.836,2.836,0,0,0,26.111,2ZM17.444,24.1H14.556V21.333h2.889Zm2.99-10.7-1.3,1.27a4.61,4.61,0,0,0-1.69,3.908H14.556v-.69a5.438,5.438,0,0,1,1.69-3.908l1.791-1.74a2.643,2.643,0,0,0,.852-1.947,2.892,2.892,0,0,0-5.778,0H10.222A5.654,5.654,0,0,1,16,4.762a5.654,5.654,0,0,1,5.778,5.524A4.3,4.3,0,0,1,20.434,13.393Z\" transform=\"translate(-3 -2)\" fill=\"#fff\"/></svg>\r\nexport const ICN_BATCHES = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"41.951\" height=\"20.064\" viewBox=\"0 0 41.951 20.064\"><g id=\"Batch\" transform=\"translate(22419.579 17475.689)\"><path id=\"Path_2498\" data-name=\"Path 2498\" d=\"M10.394,14.789A4.894,4.894,0,1,0,5.5,9.894,4.9,4.9,0,0,0,10.394,14.789Zm0-6.992a2.1,2.1,0,1,1-2.1,2.1A2.095,2.095,0,0,1,10.394,7.8Z\" transform=\"translate(-22419.863 -17480.689)\" fill=\"#fff\"/><path id=\"Path_2499\" data-name=\"Path 2499\" d=\"M11.859,18.2H5.874a14.507,14.507,0,0,1,5.915-1.4c.154,0,.322.014.475.014a6.4,6.4,0,0,1,2.293-2.531A16.4,16.4,0,0,0,11.789,14C8.516,14,2,15.636,2,18.894v2.1h9.789v-2.1A3.823,3.823,0,0,1,11.859,18.2Z\" transform=\"translate(-22421.578 -17476.625)\" fill=\"#fff\"/><path id=\"Path_2500\" data-name=\"Path 2500\" d=\"M18.691,14.5C16.118,14.5,11,15.912,11,18.7v2.1H26.382V18.7C26.382,15.912,21.264,14.5,18.691,14.5Z\" transform=\"translate(-22417.223 -17476.418)\" fill=\"#fff\"/><g id=\"Group_108\" data-name=\"Group 108\" transform=\"translate(-22402.045 -17471.357)\"><path id=\"Path_2501\" data-name=\"Path 2501\" d=\"M19.188,14.544a3.5,3.5,0,1,0-3.384,0,3.423,3.423,0,0,0,3.384,0Z\" transform=\"translate(-14 -8)\" fill=\"#fff\"/></g><path id=\"Path_2502\" data-name=\"Path 2502\" d=\"M10.394,14.789a4.894,4.894,0,1,1,4.894-4.894A4.9,4.9,0,0,1,10.394,14.789Zm0-6.992a2.1,2.1,0,1,0,2.1,2.1A2.095,2.095,0,0,0,10.394,7.8Z\" transform=\"translate(-22397.811 -17480.689)\" fill=\"#fff\"/><path id=\"Path_2503\" data-name=\"Path 2503\" d=\"M4.7,18.2h5.985a14.507,14.507,0,0,0-5.915-1.4c-.154,0-.322.014-.475.014A6.4,6.4,0,0,0,2,14.28,16.4,16.4,0,0,1,4.769,14c3.272,0,9.789,1.636,9.789,4.894v2.1H4.769v-2.1A3.823,3.823,0,0,0,4.7,18.2Z\" transform=\"translate(-22392.184 -17476.625)\" fill=\"#fff\"/></g></svg>\r\nexport const ICN_NOTIFICATION = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"34.125\" viewBox=\"0 0 28 34.125\"><path id=\"Notification\" d=\"M14,34.125a3.5,3.5,0,0,1-3.5-3.5h7A3.5,3.5,0,0,1,14,34.125Zm14-5.251H0v-1.75l3.5-3.5V14.874a12.416,12.416,0,0,1,2.054-7.1,9.663,9.663,0,0,1,5.821-3.955V2.626a2.626,2.626,0,1,1,5.251,0V3.815A9.676,9.676,0,0,1,22.44,7.776a12.4,12.4,0,0,1,2.061,7.1v8.751l3.5,3.5v1.75Z\" fill=\"#2d62ed\"/></svg>\r\nexport const ICN_CALENDER = <svg id=\"Calendar\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path id=\"Path_2504\" data-name=\"Path 2504\" d=\"M0,0H32V32H0Z\" fill=\"none\"/><path id=\"Path_2505\" data-name=\"Path 2505\" d=\"M27.2,3.727H25.8V1H23V3.727H9V1H6.2V3.727H4.8A2.772,2.772,0,0,0,2,6.455V28.273A2.772,2.772,0,0,0,4.8,31H27.2A2.772,2.772,0,0,0,30,28.273V6.455A2.772,2.772,0,0,0,27.2,3.727Zm0,24.545H4.8V10.545H27.2Z\" fill=\"#fff\"/></svg>\r\nexport const ICN_COURSE = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38.492\" height=\"32.93\" viewBox=\"0 0 38.492 32.93\"><g id=\"Course\" transform=\"translate(0 -37)\"><path id=\"Path_2601\" data-name=\"Path 2601\" d=\"M36.877,65.043H35.747a2.055,2.055,0,0,0,.227-.941V44.555a2.07,2.07,0,0,0-2.067-2.067H30.862V41.8a.986.986,0,0,0-.985-.985h-.933V37.985a.985.985,0,0,0-1.307-.931l-1.776.614a.564.564,0,0,0,.369,1.066l1.587-.549V51.746L19.81,54.515V40.954l4.145-1.433a.564.564,0,1,0-.369-1.066l-4.341,1.5-8.39-2.9a.985.985,0,0,0-1.307.931v2.829H8.616a.986.986,0,0,0-.985.985v.689H4.586a2.07,2.07,0,0,0-2.067,2.067v2.005a.564.564,0,1,0,1.128,0V44.556a.941.941,0,0,1,.94-.94H7.631v1.128H5.338a.564.564,0,0,0-.564.564V63.351a.564.564,0,0,0,.564.564H33.155a.564.564,0,0,0,.564-.564V45.307a.564.564,0,0,0-.564-.564H30.862V43.615h3.044a.941.941,0,0,1,.94.94V64.1a.941.941,0,0,1-.94.94H4.587a.941.941,0,0,1-.94-.94V48.974a.564.564,0,0,0-1.128,0V64.1a2.053,2.053,0,0,0,.227.94H1.616A1.618,1.618,0,0,0,0,66.659v1.654a1.618,1.618,0,0,0,1.616,1.616H24.034a.564.564,0,0,0,0-1.128H1.616a.489.489,0,0,1-.489-.489V66.659a.489.489,0,0,1,.489-.489H15.45v.4a1.41,1.41,0,0,0,1.408,1.408h4.777a1.41,1.41,0,0,0,1.408-1.408v-.4H36.877a.489.489,0,0,1,.489.489v1.654a.489.489,0,0,1-.489.489H26.5a.564.564,0,1,0,0,1.128H36.877a1.618,1.618,0,0,0,1.616-1.616V66.659a1.618,1.618,0,0,0-1.616-1.616Zm-8.6-12.264a.986.986,0,0,0,.663-.931V41.942h.79v12.8H22.6Zm-17.6-14.594,8.006,2.769V54.515l-8.006-2.769ZM8.759,41.942h.79v9.906a.986.986,0,0,0,.663.931l5.679,1.964H8.759ZM32.59,45.871V62.786H5.9V45.872H7.631v9.014a.986.986,0,0,0,.985.985H29.877a.986.986,0,0,0,.985-.985V45.871Zm-10.675,20.7a.281.281,0,0,1-.28.281H16.858a.281.281,0,0,1-.281-.281v-.4h5.338Z\" fill=\"#fff\"/></g></svg>\r\nexport const ICN_ON_GOING = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24.021\" height=\"30\" viewBox=\"0 0 24.021 30\"><g id=\"On_going\" data-name=\"On going\" transform=\"translate(-48.65)\"><g id=\"Group_20\" data-name=\"Group 20\" transform=\"translate(48.65)\"><path id=\"Path_17\" data-name=\"Path 17\" d=\"M65.039,85.4H51.032a2.383,2.383,0,0,0-2.382,2.382v20.1a2.383,2.383,0,0,0,2.382,2.382H65.039a2.383,2.383,0,0,0,2.382-2.382v-20.1A2.391,2.391,0,0,0,65.039,85.4Zm.71,22.474a.716.716,0,0,1-.716.716H51.026a.716.716,0,0,1-.716-.716V87.782a.716.716,0,0,1,.716-.716H65.033a.716.716,0,0,1,.716.716Z\" transform=\"translate(-48.65 -80.262)\" fill=\"#fff\"/><path id=\"Path_18\" data-name=\"Path 18\" d=\"M151.839,0H137.832a2.383,2.383,0,0,0-2.382,2.382.833.833,0,0,0,1.666,0,.716.716,0,0,1,.716-.716h14.007a.716.716,0,0,1,.716.716v20.1a.716.716,0,0,1-.716.716.833.833,0,0,0,0,1.666,2.383,2.383,0,0,0,2.382-2.382V2.382A2.383,2.383,0,0,0,151.839,0Z\" transform=\"translate(-130.199)\" fill=\"#fff\"/></g></g></svg>\r\nexport const ICN_COMING_BATCHES = <svg id=\"Upcoming_batch\" data-name=\"Upcoming batch\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24.031\" height=\"30.039\" viewBox=\"0 0 24.031 30.039\"><g id=\"Group_47\" data-name=\"Group 47\"><rect id=\"Rectangle_27\" data-name=\"Rectangle 27\" width=\"10\" height=\"4\" transform=\"translate(7.016 20.02)\" fill=\"#fff\"/><rect id=\"Rectangle_28\" data-name=\"Rectangle 28\" width=\"10\" height=\"3\" transform=\"translate(7.016 15.02)\" fill=\"#fff\"/> <path id=\"Path_2325\" data-name=\"Path 2325\" d=\"M19.02,2H7A3.013,3.013,0,0,0,4,5V29.036a3,3,0,0,0,2.989,3H25.028a3.013,3.013,0,0,0,3-3V11.012Zm6.008,27.036H7V5H17.518v7.51h7.51Z\" transform=\"translate(-4 -2)\" fill=\"#fff\"/></g></svg>\r\nexport const ICN_EDIT = <></>\r\nexport const ICN_TRASH = <></>\r\nexport const ICN_MORE = <MoreVertIcon/>\r\nexport const ICN_SEARCH = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20.16\" height=\"20.164\" viewBox=\"0 0 20.16 20.164\"><path fill=\"#272d3b\" class=\"a\" d=\"M20.036,19.136l-4.9-4.9a8.6,8.6,0,1,0-.849.849l4.9,4.9a.608.608,0,0,0,.425.179.589.589,0,0,0,.425-.179A.6.6,0,0,0,20.036,19.136ZM1.253,8.6a7.391,7.391,0,1,1,7.391,7.4A7.4,7.4,0,0,1,1.253,8.6Z\" transform=\"translate(-0.05 0)\"/></svg>\r\nexport const ICN_COPY = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24.022\" height=\"30\" viewBox=\"0 0 24.022 30\"><g transform=\"translate(-48.65)\"><g transform=\"translate(48.65)\"><path fill=\"#fff\" class=\"a\" d=\"M65.039,85.4H51.032a2.383,2.383,0,0,0-2.382,2.382v20.1a2.383,2.383,0,0,0,2.382,2.382H65.039a2.383,2.383,0,0,0,2.382-2.382v-20.1A2.391,2.391,0,0,0,65.039,85.4Zm.71,22.474a.716.716,0,0,1-.716.716H51.026a.716.716,0,0,1-.716-.716V87.782a.716.716,0,0,1,.716-.716H65.033a.716.716,0,0,1,.716.716Z\" transform=\"translate(-48.65 -80.262)\"/><path fill=\"#fff\"  class=\"a\" d=\"M151.839,0H137.832a2.383,2.383,0,0,0-2.382,2.382.833.833,0,0,0,1.666,0,.716.716,0,0,1,.716-.716h14.007a.716.716,0,0,1,.716.716v20.1a.716.716,0,0,1-.716.716.833.833,0,0,0,0,1.666,2.383,2.383,0,0,0,2.382-2.382V2.382A2.383,2.383,0,0,0,151.839,0Z\" transform=\"translate(-130.199)\"/></g></g></svg>\r\n\r\n\r\n","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\Buttons\\Buttons.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\OnlineMedia\\OnlineMedia.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\ClassPoll\\ClassPoll.js",["290","291","292","293","294"],"import { useState } from 'react';\r\n\r\nimport { Formik } from 'formik';\r\nimport { BtnRound, Button } from \"../../../Common/Buttons/Buttons\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { ICN_ASSESSMENT, ICN_RECORD } from '../../../Common/Icon';\r\nimport { BsModal, Progress } from '../../../Common/BsUtils';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst createBatches = {\r\n    batchName: '',\r\n    duration: '',\r\n    question: '',\r\n    course: '',\r\n    instructor: ''\r\n\r\n}\r\n\r\n\r\nconst ClassPoll = ({ show, setShow }) => {\r\n\r\n    const [record, setRecord] = useState(false)\r\n    const [assessment, setAssessment] = useState(true)\r\n    const [doughnutData,setDoughnutData] = useState({\r\n        labels: ['Androids', 'iOS'],\r\n        datasets: [{\r\n            data: [70,30],\r\n            backgroundColor: ['#FF007C', '#FFFFFF'],\r\n            hoverBackgroundColor: ['#FF007C', '#FFFFFF'],\r\n            borderColor: '#ddd',\r\n        }],\r\n        text: '23%'\r\n    })\r\n\r\n    return (<div>\r\n        <BsModal {...{ show, setShow, headerTitle: \"Create a Knowledge Check Poll\", size: \"lg\" }}>\r\n            {/* <div className=\"form-container\">\r\n            <Formik\r\n                onSubmit={()=>console.log('a')}\r\n                initialValues={createBatches}\r\n            >\r\n                {({ handleSubmit, isSubmitting, dirty }) => <form onSubmit={handleSubmit} className=\"create-batch\" >\r\n                        <div className=\"edit-shipping\">\r\n                            <Form.Group className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <TextInput label=\"Poll Name\" name=\"batchName\"/>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                   <TextInput label=\"Duration\" name=\"duration\"/>\r\n                                </div>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                  <TextInput label=\"Question\" name=\"question\"/>\r\n                                </div>\r\n                            \r\n                            </Form.Group>\r\n                            <div className=\"\">\r\n                            <label class=\"label form-label\">Options</label>\r\n                            <div className=\"row\">\r\n                               <div className=\"col-1\">\r\n                                 <div className=\"check-box\"></div>\r\n                                </div>\r\n                                <div className=\"col-11\">\r\n                                  <TextInput  name=\"instructor\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-2\">\r\n                               <div className=\"col-1\">\r\n                                 <div className=\"check-box\"></div>\r\n                                </div>\r\n                                <div className=\"col-11\">\r\n                                  <TextInput  name=\"instructor\"/>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <div><BtnRound>+</BtnRound></div>\r\n                    </div>\r\n                    <footer className=\"jcb\">\r\n                        <div></div>\r\n                        <div>\r\n                           <Button type=\"submit\">Publish</Button>\r\n                        </div>\r\n                    </footer>\r\n                </form>\r\n                }\r\n            </Formik>\r\n            </div> */}\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"title-sm\">Poll Name</div>\r\n                        <div className=\"pb-2\">Operating System preference</div>\r\n                        <div className=\"title-sm\">Question</div>\r\n                        <div className=\"pb-2\">What is your preferred OS?</div>\r\n                        <div className=\"flx mt-3\">\r\n                            <div>\r\n                                <div className={`btn-square ${assessment ? 'btn-active': ''}`} onClick={() => { setAssessment(true); setRecord(false) }}>\r\n                                    {ICN_ASSESSMENT}\r\n                                </div>\r\n                                <div className=\"title-sm\">Option</div>\r\n                            </div>\r\n                            <div className={`btn-square mx-2 ${record ? 'btn-active': ''}`} onClick={() => { setAssessment(false); setRecord(true) }}>\r\n                                {ICN_RECORD}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"title-lg my-4\">00:05 MM:SS</div>\r\n                    </div>\r\n                    <div className=\"col-6 jcc-c\">\r\n                        {assessment && <>\r\n                            <Progress className=\"mb-2\" label=\"Androids\" variant=\"secondary\" value=\"80\" />\r\n                            <Progress variant=\"danger\" label=\"iOS\" value=\"40\" />\r\n                        </>\r\n                        }\r\n                        {record && <>  {doughnutData &&\r\n                                        <Pie\r\n                                            data={doughnutData}\r\n                                            option={{\r\n                                                title: { display: true, text: 'Connected, Abandoned', fontSize: '25px' },\r\n                                                legend: {\r\n                                                    display: false,\r\n                                                    labels: {\r\n                                                        boxWidth: 18\r\n                                                    }\r\n                                                },\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                        </>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"jcse\">\r\n                    <div><Button className=\"px-4\">End Poll</Button></div>\r\n                    <div><Button className=\"px-4\">Delete Poll</Button></div>\r\n                    <div><Button className=\"px-4\">Publish Poll</Button></div>\r\n                </div>\r\n            </div>\r\n        </BsModal>\r\n    </div>)\r\n}\r\n\r\nexport default ClassPoll","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\Content\\Content.js",["295","296"],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\WhiteBoard\\WhiteBoard.js",["297","298","299","300","301","302","303","304"],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\CodeEditor\\CodeEditor.js",["305","306"],"import React, { useState, useRef, useEffect, useContext } from 'react'\r\nimport Editor from \"@monaco-editor/react\";\r\nimport './codeEditor.css'\r\nimport { Language } from './Language';\r\nimport { Dropdown, Spinner } from 'react-bootstrap';\r\nimport { CustomToggle } from '../../../../Services/MethodFactory';\r\nimport axios from 'axios';\r\nimport { ICN_ARROW_DOWN, ICN_DOWNLOAD, ICN_FULL_SCREEN, ICN_PLAY, ICN_PUBLISH, ICN_SAVE, ICN_STAR_HALF } from '../../../Common/Icon';\r\nimport AppContext from '../../../../Store/AppContext';\r\nconst CodeEditor = () => {\r\n    const {spinner} = useContext(AppContext) \r\n    const [inputData, setInputData] = useState('')\r\n    const editorRef = useRef(null);\r\n    const [lang, setLang] = useState(Language[0])\r\n    const [lightTheams, setLightTheams] = useState(false)\r\n    const [output, setOutput] = useState('')\r\n    const [inputTab, setInputTab] = useState(true)\r\n    const [spinners,setSpinners] = useState(false)\r\n\r\n    const handleEditorDidMount = (editor, monaco) => {\r\n        editorRef.current = editor;\r\n    }\r\n\r\n    const runCode = () => {\r\n        setSpinners(true)\r\n        spinner.show()\r\n        const payload = {\r\n            \"stdin\": inputData,\r\n            \"script\": editorRef.current.getValue(),\r\n            \"language\": lang.language,\r\n        }\r\n        axios.post(`http://ec2-65-1-14-123.ap-south-1.compute.amazonaws.com/insled/v1/jdoodle/execute`, payload)\r\n            .then(({ data }) => {\r\n                setOutput(data.output)\r\n                setInputTab(false)\r\n                setSpinners(false)\r\n                spinner.hide()\r\n            })\r\n            \r\n    }\r\n\r\n    useEffect(() => {\r\n        setOutput('')\r\n        setInputTab('')\r\n        setInputTab(true)\r\n    }, [lang])\r\n\r\n    return (<>\r\n        <div className=\"jcb\">\r\n            <div className=\"\"></div>\r\n            <div className=\"editor-tab\">\r\n                <div>\r\n                    <Dropdown className=\"dropdown-menus\">\r\n                        <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n                            <div className=\"editor-tab-w\">{lang.label} {ICN_ARROW_DOWN}</div>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as=\"div\" align=\"right\">\r\n                            {Language.map(res => <Dropdown.Item onClick={() => setLang(res)}>{res.label}</Dropdown.Item>)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n                <div className=\"editor-btn\">\r\n                    <div onClick={() => runCode()}>\r\n                        {spinners ? <><Spinner animation=\"border\" size=\"sm\" /></> : <div>{ICN_PLAY}</div>}\r\n                    </div>\r\n                    <div>\r\n                        {ICN_DOWNLOAD}\r\n                    </div>\r\n                    <div className={`rotate-45 ${lightTheams ? '' : 'color-blue'}`} onClick={() => setLightTheams(!lightTheams)}>\r\n                        <span >{ICN_STAR_HALF}</span>\r\n                    </div>\r\n                    <div>\r\n                        {ICN_FULL_SCREEN}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Editor\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n            defaultLanguage={lang.language}\r\n            defaultValue={lang.value}\r\n            theme={lightTheams ? \"vs-light\" : \"vs-dark\"}\r\n            onMount={handleEditorDidMount}\r\n        />\r\n        <div className=\"p-2 column\">\r\n            <div className=\"flx\">\r\n                <div onClick={() => setInputTab(true)} className={`class-mode ${inputTab === true ? 'bg-primary' : ''}`}>Input</div>\r\n                <div onClick={() => setInputTab(false)} className={`class-mode ${inputTab === false ? 'bg-primary' : ''}`}>Output</div>\r\n            </div>\r\n            {inputTab ?\r\n                <div className=\"editor-output\">\r\n                    <div><textarea rows=\"3\" placeholder=\"Enter input\" className=\"form-control\" onChange={(e) => setInputData(e.target.value)} type=\"text\" /></div>\r\n                </div>\r\n                : <div className=\"editor-output\">\r\n                    <div>{output}</div>\r\n                </div>\r\n            }\r\n        </div>\r\n    </>)\r\n\r\n}\r\n\r\nexport default CodeEditor","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Layout\\Sidebar\\Sidebar.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Setting\\Setting.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Layout\\Header\\Header.js",["307"],"import { Dropdown } from 'react-bootstrap';\r\nimport { ICN_NOTIFICATION, ICN_SEARCH } from '../../Common/Icon';\r\nimport { CustomToggle } from '../../../Services/MethodFactory';\r\nimport './header.css'\r\nimport { ProfileImg } from '../../Common/BsUtils';\r\n\r\n\r\nconst Header = ({location}) => {\r\n    return (<div className=\"header\">\r\n            <div className=\"title-lg mb-0\">\r\n                {location.state && location.state.title}\r\n            </div>\r\n           \r\n            <div className=\"aic\">\r\n            <Dropdown className=\"notification\">\r\n                    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n                       <div className=\"mx-2\">{ICN_NOTIFICATION}</div>\r\n                    </Dropdown.Toggle>\r\n                <Dropdown.Menu as=\"div\" align=\"left\">\r\n                    <div className=\"my-2\">\r\n                        <div className=\"title-sm\">Lorem Ipsum</div>\r\n                        <div className=\"text-sm\">Lorem ipsum dolor sit amet, consectetur adipisci</div>\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <div className=\"title-sm\">Lorem Ipsum</div>\r\n                        <div className=\"text-sm\">Lorem ipsum dolor sit amet, consectetur adipisci</div>\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <div className=\"title-sm\">Lorem Ipsum</div>\r\n                        <div className=\"text-sm\">Lorem ipsum dolor sit amet, consectetur adipisci</div>\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <div className=\"title-sm\">Lorem Ipsum</div>\r\n                        <div className=\"text-sm\">Lorem ipsum dolor sit amet, consectetur adipisci</div>\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <div className=\"title-sm\">Lorem Ipsum</div>\r\n                        <div className=\"text-sm\">Lorem ipsum dolor sit amet, consectetur adipisci</div>\r\n                    </div>\r\n                        <div className=\"text-md text-center pointer\">View More</div>  \r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <ProfileImg name=\"JD\" size=\"md\"/>\r\n            </div>\r\n            \r\n    </div>)\r\n}\r\n\r\nexport default Header","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Calender\\Calender.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Support\\Support.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\OrgMgmt\\OrgMgmt.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\LabStore.js\\LabStore.js",["308"],"import { BtnPrimary, TabBtn } from \"../../Common/Buttons/Buttons\";\r\nimport SearchBox from \"../../Common/SearchBox/SearchBox\"\r\nimport { ICN_ON_GOING } from \"../../Common/Icon\"\r\nimport { navigate, Router } from \"../../Common/Router\";\r\n\r\nimport LabList from \"./LabList\";\r\nimport \"./Styles.css\";\r\nimport CardHeader from \"../../Common/CardHeader\";\r\nimport MyLab from \"./MyLab/MyLab\";\r\n\r\nconst dummyData = [\r\n    {label:'Infrastructure & DevOps', icon: ICN_ON_GOING, link: '', desc:'Implement, deploy, migrate and maintain application in the cloud'},\r\n    {label:'Website Development', icon: ICN_ON_GOING, link: '',  desc:'For software engineers who develop web applications in the cloud'},\r\n    {label:'App Development', icon: ICN_ON_GOING, link: '',  desc:'For developer who develops mobile apps in the cloud'},\r\n    {label:'Big Data', icon: ICN_ON_GOING, link: '',  desc:'Design, build, analyze Big Data Solutions'},\r\n    {label:'Machine Learning', icon: ICN_ON_GOING, link: '',  desc:'Write distributed Machine Learning models that scale'},\r\n    {label:'Security Backups & Recovery', icon: ICN_ON_GOING, link: '',  desc:'Stay compliant, protect information, data application and infrastructure'}\r\n]\r\n\r\nconst dummyData2 = [\r\n    {label:'Google Cloud Essentials', icon: ICN_ON_GOING, link: '', desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Google Cloud Essentials', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'App Development', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Big Data', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Machine Learning', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Security Backups & Recovery', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'}\r\n]\r\n\r\nconst LabContainer = ({location})=>{\r\n    return (<div className=\"catalog-container\">\r\n    {dummyData.map(res=> <div className=\"catalogBox\">\r\n        <div className=\"aic flx1 jcc\">{res.icon}</div>\r\n        <div className=\"catalogBox-info\">\r\n            <div>\r\n                <div className=\"title-md text-white\">{res.label}</div>\r\n                <div className=\"title-sm text-white\">{res.desc}</div>\r\n            </div>\r\n            <div className=\"text-right\">\r\n            <BtnPrimary onClick={()=> navigate('labstore/lab-list',{state: { title: 'LAB STORE', subTitle:\"Catalog\", subPath:\"labstore\" }})}>Show All 50 Labs</BtnPrimary>\r\n            </div>\r\n        </div>\r\n    </div> )}\r\n\r\n</div>)\r\n}\r\n\r\nconst LabStore = ({location})=>{\r\n    console.log(location)\r\n    return(\r\n        <div className=\"table-shadow p-3\">\r\n        <CardHeader {...{location}}/>\r\n          <div className=\"flx storeTab-shadow mb-3\">\r\n              <TabBtn active={location.state.subPath === \"labstore\"} onClick={()=>navigate(\"/labstore\",{state: { title: 'LAB STORE',subTitle:\"Catalog\", subPath:\"labstore\" }})}>Catalog</TabBtn>\r\n              <TabBtn  active={location.state.subPath === \"mylab\"} onClick={()=>navigate(\"/labstore/mylab\",{state: { title: 'LAB STORE',subTitle:\"My Lab\", subPath:\"mylab\"  }})}>My Labs</TabBtn> \r\n          </div>\r\n          <Router>\r\n                <LabContainer path=\"/\"/>\r\n                <LabList {...{list: dummyData2}} path=\"lab-list\"/>\r\n                <MyLab  {...{dummyData2}} path=\"mylab\"/>\r\n          </Router>\r\n    </div>)\r\n}\r\nexport default LabStore\r\n","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Report\\Report.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Course\\Course.js",["309","310"],"import { useState } from \"react\";\r\nimport './../Batches/batches.css'\r\nimport DynamicTable from \"../../Common/DynamicTable/DynamicTable\";\r\nimport { Modal, Form } from 'react-bootstrap'\r\nimport { Formik } from 'formik';\r\nimport { ICN_TRASH, ICN_EDIT, ICN_CLOSE } from \"../../Common/Icon\";\r\nimport { Button } from \"../../Common/Buttons/Buttons\";\r\nimport { TextInput, DateInput, SelectInput } from \"../../Common/InputField/InputField\";\r\nimport { Link, Router } from \"../../Common/Router\";\r\nimport { BsModal } from \"../../Common/BsUtils\";\r\nimport CardHeader from \"../../Common/CardHeader\";\r\nimport CourseDetails from \"./CourseDetails\";\r\n\r\n\r\n\r\nconst dummyData = [\r\n    { course: 'Angular', batchName: 'ITU_01', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { course: 'Angular', batchName: 'ITU_01', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { course: 'Angular', batchName: 'ITU_01', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { course: 'Angular', batchName: 'ITU_01', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { course: 'Angular', batchName: 'ITU_01', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n\r\n]\r\n\r\nconst createBatches = {\r\n    batchName: '',\r\n    trainingType: '',\r\n    endDate: '',\r\n    startDate: '',\r\n    course: '',\r\n    instructor: ''\r\n\r\n}\r\nconst Courses = ({location}) => {\r\n    const [show, setShow] = useState(false);\r\n    const [configuration, setConfiguration] = useState({\r\n        columns: {\r\n            \"course\": {\r\n                \"title\": \"Course Name\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false,\r\n                render: (data) => <Link to={'course-details'} state={{title: \"COURSE\",subTitle:'Course Details',}} className=\"dt-name\">{data.course}</Link>\r\n\r\n            },\r\n            \"batchName\": {\r\n                \"title\": \"Batch Name\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false,\r\n\r\n            }\r\n            ,\r\n            \"createdDate\": {\r\n                \"title\": \"Created Date\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"learner\": {\r\n                \"title\": \"learners\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"status\": {\r\n                \"title\": \"Status\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"startDate\": {\r\n                \"title\": \"Start Date\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n        },\r\n        headerTextColor: '#454E50', // user can change table header text color\r\n        sortBy: null,  // by default sort table by name key\r\n        sortDirection: false, // sort direction by default true\r\n        updateSortBy: (sortKey) => {\r\n            configuration.sortBy = sortKey;\r\n            Object.keys(configuration.columns).map(key => configuration.columns[key].sortDirection = (key === sortKey) ? !configuration.columns[key].sortDirection : false);\r\n            configuration.sortDirection = configuration.columns[sortKey].sortDirection;\r\n            setConfiguration({ ...configuration });\r\n        },\r\n        actions: [\r\n            {\r\n                \"title\": \"Edit\",\r\n                \"icon\": ICN_EDIT,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            },\r\n            {\r\n                \"title\": \"Delete\",\r\n                \"icon\": ICN_TRASH,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            }\r\n        ],\r\n        actionCustomClass: \"no-chev esc-btn-dropdown\", // user can pass their own custom className name to add/remove some css style on action button\r\n        actionVariant: \"\", // user can pass action button variant like primary, dark, light,\r\n        actionAlignment: true, // user can pass alignment property of dropdown menu by default it is alignLeft \r\n        // call this callback function onSearch method in input field on onChange handler eg: <input type=\"text\" onChange={(e) => onSearch(e.target.value)}/>\r\n        // this search is working for search enable fields(column) eg. isSearchEnabled: true, in tale column configuration\r\n        searchQuery: \"\",\r\n        tableCustomClass: \"ng-table sort-enabled\", // table custom class\r\n        showCheckbox: true,\r\n        clearSelection: false\r\n    });\r\n    return (<><div className=\"table-shadow\">\r\n        <div className=\"p-3\"><CardHeader {...{location}}/></div> \r\n        <DynamicTable {...{ configuration, sourceData: dummyData }} />\r\n    </div>\r\n        <div className=\"table-footer-action\">\r\n            <div>\r\n                <Button onClick={() => setShow(true)}> + Add New </Button>\r\n                <BsModal {...{ show, setShow, headerTitle: \"Add new Batches\", size: \"lg\" }}>\r\n                    <div className=\"form-container\">\r\n                        <Formik\r\n                            onSubmit={() => console.log('a')}\r\n                            initialValues={createBatches}\r\n                        >\r\n                            {({ handleSubmit, isSubmitting, dirty }) => <form onSubmit={handleSubmit} className=\"create-batch\" >\r\n                                <div className=\"edit-shipping\">\r\n                                    <Form.Group className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <TextInput label=\"Batch Name\" name=\"batchName\" />\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <SelectInput label=\"Training Type\" option={['Online', 'Self', 'Offline']} name=\"trainingType\" />\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <DateInput label=\"Start Date\" name=\"startDate\" />\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <DateInput label=\"End date\" name=\"endDate\" />\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <SelectInput label=\"Course\" name=\"course\" option={['Online', 'Self', 'Offline']} />\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <TextInput label=\"Instructor\" name=\"instructor\" />\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                                {/* modal footer which contains action button to save data or cancel current action */}\r\n                                <footer className=\"jcb\">\r\n                                    <div>\r\n                                        <span className=\"title-sm\">Upload participants</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button type=\"submit\" >Create Batches</Button>\r\n                                    </div>\r\n                                </footer>\r\n                            </form>\r\n                            }\r\n                        </Formik>\r\n                    </div>\r\n                </BsModal>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\n\r\nconst Course = () => {\r\n    return (\r\n        <Router>\r\n            <Courses path=\"/\" />\r\n            <CourseDetails path=\"course-details\"/>\r\n        </Router>\r\n    )\r\n}\r\nexport default Course","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Traning.js",["311"],"import { useState } from \"react\";\r\nimport '../Batches/batches.css'\r\nimport DynamicTable from \"../../Common/DynamicTable/DynamicTable\";\r\nimport { Modal, Form } from 'react-bootstrap'\r\nimport { Formik } from 'formik';\r\nimport { ICN_TRASH, ICN_EDIT, ICN_CLOSE } from '../../Common/Icon';\r\nimport { Button } from \"../../Common/Buttons/Buttons\";\r\nimport { TextInput, DateInput, SelectInput } from \"../../Common/InputField/InputField\";\r\nimport { Link, Router } from \"../../Common/Router\";\r\nimport SearchBox from \"../../Common/SearchBox/SearchBox\";\r\nimport TrainingDetails from \"./TrainingDetails\";\r\nimport CardHeader from \"../../Common/CardHeader\";\r\n\r\nconst dummyData = [\r\n    { names: 'Jack A', technology: 'Angular', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { names: 'Jill B', technology: 'Angular', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { names: 'Jane C', technology: 'Angular', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { names: 'Cody D', technology: 'Angular', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { names: 'Blackwell E', technology: 'Angular', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n\r\n]\r\n\r\nconst createBatches = {\r\n    batchName: '',\r\n    trainingType: '',\r\n    endDate: '',\r\n    startDate: '',\r\n    course: '',\r\n    instructor: ''\r\n\r\n}\r\nconst Trainings = () => {\r\n    const [show, setShow] = useState(false);\r\n    const [configuration, setConfiguration] = useState({\r\n        columns: {\r\n            \"names\": {\r\n                \"title\": \"Name\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false,\r\n                render: (data) => <Link to={`training-details`} className=\"dt-name\">{data.names}</Link>\r\n\r\n            },\r\n            \"technology\": {\r\n                \"title\": \"Technology\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"createdDate\": {\r\n                \"title\": \"Created Date\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"learner\": {\r\n                \"title\": \"learners\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"status\": {\r\n                \"title\": \"Status\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"startDate\": {\r\n                \"title\": \"Start Date\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n        },\r\n        headerTextColor: '#454E50', // user can change table header text color\r\n        sortBy: null,  // by default sort table by name key\r\n        sortDirection: false, // sort direction by default true\r\n        updateSortBy: (sortKey) => {\r\n            configuration.sortBy = sortKey;\r\n            Object.keys(configuration.columns).map(key => configuration.columns[key].sortDirection = (key === sortKey) ? !configuration.columns[key].sortDirection : false);\r\n            configuration.sortDirection = configuration.columns[sortKey].sortDirection;\r\n            setConfiguration({ ...configuration });\r\n        },\r\n        actions: [\r\n            {\r\n                \"title\": \"Edit\",\r\n                \"icon\": ICN_EDIT,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            },\r\n            {\r\n                \"title\": \"Delete\",\r\n                \"icon\": ICN_TRASH,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            }\r\n        ],\r\n        actionCustomClass: \"no-chev esc-btn-dropdown\", // user can pass their own custom className name to add/remove some css style on action button\r\n        actionVariant: \"\", // user can pass action button variant like primary, dark, light,\r\n        actionAlignment: true, // user can pass alignment property of dropdown menu by default it is alignLeft \r\n        // call this callback function onSearch method in input field on onChange handler eg: <input type=\"text\" onChange={(e) => onSearch(e.target.value)}/>\r\n        // this search is working for search enable fields(column) eg. isSearchEnabled: true, in tale column configuration\r\n        searchQuery: \"\",\r\n        tableCustomClass: \"ng-table sort-enabled\", // table custom class\r\n        showCheckbox: true,\r\n        clearSelection: false\r\n    });\r\n    return (<>\r\n\r\n        <div className=\"table-shadow\">\r\n            <CardHeader/>\r\n            <DynamicTable {...{ configuration, sourceData: dummyData }} />\r\n        </div>\r\n        <div className=\"table-footer-action \">\r\n            <div>\r\n                <Button> Report </Button>\r\n                <Button onClick={() => setShow(true)} className=\"ml-4\" > + Add New </Button>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={show}\r\n                    onHide={() => setShow(false)}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"example-custom-modal-styling-title\"\r\n                >\r\n                    <Modal.Body className=\"px-5 py-4\">\r\n                        <div className=\"jcb mb-3\">\r\n                            <div className=\"title-md \">Add New Batches</div>\r\n                            <div><div className=\"circle-md\" onClick={() => setShow(false)}>\r\n                                {ICN_CLOSE}\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <Formik\r\n                                onSubmit={() => console.log('a')}\r\n                                initialValues={createBatches}\r\n                            >\r\n                                {({ handleSubmit, isSubmitting, dirty }) => <form onSubmit={handleSubmit} className=\"create-batch\" >\r\n                                    <div className=\"edit-shipping\">\r\n                                        <Form.Group className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <TextInput label=\"Batch Name\" name=\"batchName\" />\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <SelectInput label=\"Training Type\" option={['Online', 'Self', 'Offline']} name=\"trainingType\" />\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <DateInput label=\"Start Date\" name=\"startDate\" />\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <DateInput label=\"End date\" name=\"endDate\" />\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <SelectInput label=\"Course\" name=\"course\" option={['Online', 'Self', 'Offline']} />\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <TextInput label=\"Instructor\" name=\"instructor\" />\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    {/* modal footer which contains action button to save data or cancel current action */}\r\n                                    <footer className=\"jcb\">\r\n                                        <div>\r\n                                            <span className=\"title-sm\">Upload Trainings</span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <Button type=\"submit\" >Create Batches</Button>\r\n                                        </div>\r\n\r\n                                    </footer>\r\n                                </form>\r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst Training = () => {\r\n    return (\r\n        <Router>\r\n            <Trainings path=\"/\" />\r\n            <TrainingDetails path=\"training-details/*\" />\r\n        </Router>\r\n    )\r\n\r\n}\r\nexport default Training","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Batches\\Batches.js",["312"],"import { useState } from \"react\";\r\nimport './batches.css'\r\nimport DynamicTable from \"../../Common/DynamicTable/DynamicTable\";\r\nimport { Form } from 'react-bootstrap'\r\nimport { Formik } from 'formik';\r\nimport { ICN_TRASH, ICN_EDIT, ICN_CLOSE } from \"../../Common/Icon\";\r\nimport { Button } from \"../../Common/Buttons/Buttons\";\r\nimport { TextInput, DateInput, SelectInput } from \"../../Common/InputField/InputField\";\r\nimport { Link, Router } from \"../../Common/Router\";\r\nimport BatchesDetails from \"./BatchDetails\";\r\nimport { BsModal } from \"../../Common/BsUtils\";\r\nimport CardHeader from \"../../Common/CardHeader\";\r\n\r\n\r\n\r\nconst dummyData = [\r\n    { batchName: 'ITU_01', technology: 'Angular', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { batchName: 'ITU_01', technology: 'Angular', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { batchName: 'ITU_01', technology: 'Angular', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { batchName: 'ITU_01', technology: 'Angular', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n    { batchName: 'ITU_01', technology: 'Angular', createdData: '22 june 2020', learners: '333', status: 'Active', startDate: '123213', endDate: '323213' },\r\n\r\n]\r\n\r\nconst createBatches = {\r\n    batchName: '',\r\n    trainingType: '',\r\n    endDate: '',\r\n    startDate: '',\r\n    course: '',\r\n    instructor: ''\r\n\r\n}\r\nconst Batch = () => {\r\n    const [show, setShow] = useState(false);\r\n    const [configuration, setConfiguration] = useState({\r\n        columns: {\r\n            \"batchName\": {\r\n                \"title\": \"Batch Name\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false,\r\n                render: (data) => <Link to={'batches-details'} className=\"dt-name\">{data.batchName}</Link>\r\n\r\n            },\r\n            \"technology\": {\r\n                \"title\": \"Technology\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"createdDate\": {\r\n                \"title\": \"Created Date\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"learner\": {\r\n                \"title\": \"learners\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"status\": {\r\n                \"title\": \"Status\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"startDate\": {\r\n                \"title\": \"Start Date\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": true,\r\n                isSearchEnabled: false\r\n            }\r\n        },\r\n        headerTextColor: '#454E50', // user can change table header text color\r\n        sortBy: null,  // by default sort table by name key\r\n        sortDirection: false, // sort direction by default true\r\n        updateSortBy: (sortKey) => {\r\n            configuration.sortBy = sortKey;\r\n            Object.keys(configuration.columns).map(key => configuration.columns[key].sortDirection = (key === sortKey) ? !configuration.columns[key].sortDirection : false);\r\n            configuration.sortDirection = configuration.columns[sortKey].sortDirection;\r\n            setConfiguration({ ...configuration });\r\n        },\r\n        actions: [\r\n            {\r\n                \"title\": \"Edit\",\r\n                \"icon\": ICN_EDIT,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            },\r\n            {\r\n                \"title\": \"Delete\",\r\n                \"icon\": ICN_TRASH,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            }\r\n        ],\r\n        actionCustomClass: \"no-chev esc-btn-dropdown\", // user can pass their own custom className name to add/remove some css style on action button\r\n        actionVariant: \"\", // user can pass action button variant like primary, dark, light,\r\n        actionAlignment: true, // user can pass alignment property of dropdown menu by default it is alignLeft \r\n        // call this callback function onSearch method in input field on onChange handler eg: <input type=\"text\" onChange={(e) => onSearch(e.target.value)}/>\r\n        // this search is working for search enable fields(column) eg. isSearchEnabled: true, in tale column configuration\r\n        searchQuery: \"\",\r\n        tableCustomClass: \"ng-table sort-enabled\", // table custom class\r\n        showCheckbox: true,\r\n        clearSelection: false\r\n    });\r\n    return (<><div className=\"table-shadow\">\r\n            <CardHeader/>\r\n        <DynamicTable {...{ configuration, sourceData: dummyData }} />\r\n    </div>\r\n    <div className=\"table-footer-action\">\r\n            <div>\r\n                <Button onClick={() => setShow(true)}> + Add New </Button>\r\n\r\n                <BsModal {...{ show, setShow, headerTitle: \"Add new Batches\", size: \"lg\" }}>\r\n                    <div className=\"form-container\">\r\n                        <Formik\r\n                            onSubmit={() => console.log('a')}\r\n                            initialValues={createBatches}\r\n                        >\r\n                            {({ handleSubmit, isSubmitting, dirty }) => <form onSubmit={handleSubmit} className=\"create-batch\" >\r\n                                <div>\r\n                                    <Form.Group className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <TextInput label=\"Batch Name\" name=\"batchName\" />\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <SelectInput label=\"Training Type\" option={['Online', 'Self', 'Offline']} name=\"trainingType\" />\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <DateInput label=\"Start Date\" name=\"startDate\" />\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <DateInput label=\"End date\" name=\"endDate\" />\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <SelectInput label=\"Course\" name=\"course\" option={['Online', 'Self', 'Offline']} />\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <TextInput label=\"Instructor\" name=\"instructor\" />\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                                <footer className=\"jcb\">\r\n                                    <div>\r\n                                        <span className=\"title-sm\">Upload participants</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button type=\"submit\" >Create Batches</Button>\r\n                                    </div>\r\n                                </footer>\r\n                            </form>\r\n                            }\r\n                        </Formik>\r\n                    </div>\r\n                </BsModal>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\n\r\nconst Batches = () => {\r\n    return (\r\n        <Router>\r\n            <Batch path=\"/\" />\r\n            <BatchesDetails path=\"batches-details\" />\r\n        </Router>\r\n    )\r\n}\r\nexport default Batches","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Home\\Home.js",["313"],"import Charts from '../../Charts/Charts'\r\nimport Table from 'react-bootstrap/Table'\r\nimport './home.css'\r\n\r\nimport { ICN_COPY, ICN_COMING_BATCHES } from '../../Common/Icon';\r\nimport { Progress, Card} from '../../Common/BsUtils';\r\nimport {\r\n    CircularProgressbar,\r\n    buildStyles\r\n} from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport CalenderGraph from '../../Common/CalenderGraph/CalenderGraph';\r\nconst tableData = [\r\n    { name: \"ITU_01\", avgScr: 50 },\r\n    { name: \"ITU_02\", avgScr: 70 },\r\n    { name: \"ITU_03\", avgScr: 100 },\r\n    { name: \"ITU_05\", avgScr: 60 },\r\n    { name: \"ITU_01\", avgScr: 50 },\r\n    { name: \"ITU_02\", avgScr: 70 },\r\n    { name: \"ITU_03\", avgScr: 100 },\r\n    { name: \"ITU_05\", avgScr: 60 },\r\n    { name: \"ITU_01\", avgScr: 90 }\r\n\r\n]\r\n\r\nconst Home = () => {\r\n    return (<div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n                {/* ..........user info......... */}\r\n                <Card title=\"\">\r\n                    <div className=\"user-info\">\r\n                        <div className=\"title-lg\">Welcome back Julie!</div>\r\n                        <div>\r\n                            Since your last login on the system, there were:\r\n                               <div>\r\n                                <div className=\"aic\"><div className=\"red-circle\"></div> <div>21 new enrollment</div></div>\r\n                                <div className=\"aic\"><div className=\"red-circle\"></div> <div>15 courses completed </div></div>\r\n                                <div className=\"aic\"><div className=\"red-circle\"></div> <div>45 new messages </div></div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n                {/* ..........End user info......... */}\r\n\r\n            </div>\r\n            <div className=\"col-md-4 \">\r\n                {/* ..........Lms insight......... */}\r\n                <Card title=\"Lms insight\" action={true}>\r\n                    <div className=\"\">\r\n                        <div className=\"lms-card\"><div className=\"lms-card-g\">AWS Solution Architect</div><div>45 Enrolled <span>a</span></div></div>\r\n                        <div className=\"lms-card\"><div className=\"lms-card-p\">Machine Learning</div><div>40 Enrolled</div> <span>a</span></div>\r\n                        <div className=\"lms-card\"><div className=\"lms-card-g\">Splunk</div><div>40 Enrolled</div> <span>a</span></div>\r\n                    </div>\r\n                </Card>\r\n                {/* ..........End Lms insight......... */}\r\n            </div>\r\n        </div>\r\n        <div className=\"row mt-3\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 pr-0\">\r\n                        {/* ..........Technology Activity......... */}\r\n                        <Card title=\"Technology Activity\" action={true}>\r\n                            <Charts ChartType=\"activities\" labelLeft=\"Employee percentile\" />\r\n                        </Card>\r\n                        {/* ..........End Technology Activity......... */}\r\n\r\n                        {/* ..........Analytic......... */}\r\n                        <Card title=\"Analytic\" className=\"mt-3\" action={true}>\r\n                            <div className=\"flx\">\r\n                                <div className=\"text-center \">\r\n                                    <CircularProgressbar\r\n                                        maxValue=\"1000\"\r\n                                        minValue=\"1\" value=\"580\"\r\n                                        text={`580`}\r\n                                        styles={buildStyles({\r\n                                            trailColor: \"#F5FBFF\",\r\n                                            pathColor: \"#2D62ED\",\r\n                                        })} />\r\n                                    <div className=\"mt-2\">Active Learner</div>\r\n                                </div>\r\n                                <div className=\"text-center mx-4\">\r\n                                    <CircularProgressbar\r\n                                        value=\"70\"\r\n                                        text={`70%`}\r\n                                        styles={buildStyles({\r\n                                            trailColor: \"#F5FBFF\",\r\n                                            pathColor: \"#7D00B5\",\r\n                                        })} />\r\n                                    <div className=\"mt-2\">Visitor Rate</div>\r\n                                </div>\r\n\r\n                                <div className=\"text-center\">\r\n                                    <CircularProgressbar\r\n                                        maxValue=\"1000\"\r\n                                        minValue=\"1\" value=\"789\"\r\n                                        text={`789`}\r\n                                        styles={buildStyles({\r\n                                            trailColor: \"#F5FBFF\",\r\n                                            pathColor: \"#00CCF2\",\r\n                                        })} />\r\n                                    <div className=\"mt-2\">Total Learners</div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Card>\r\n                        {/* ..........End Analytic......... */}\r\n                    </div>\r\n\r\n                    <div className=\"col-md-5\">\r\n                        {/* ..........Batches......... */}\r\n                        <Card className=\"full-h\" title=\"Batches Stats\" action={true}>\r\n                            <div className=\"table-bless\">\r\n                                <Table className=\"table-borderless \">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td>Name</td>\r\n                                            <td className=\"progress-w\">Progress</td>\r\n                                            <td className=\"avgScore-w\">Avg score</td>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {tableData.map((res, i) =>\r\n                                            <tr>\r\n                                                <td>{res.name}</td>\r\n                                                <td><Progress className=\"mb-2\" className=\"progress-sh\" variant={i % 2 === 0 ? 'secondary' : 'danger'} value={res.avgScr} /></td>\r\n                                                <td className=\"text-right\">{res.avgScr}</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Card>\r\n                        {/* ..........End Batches......... */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4 column\">\r\n                <div className=\"jcb pb-2\">\r\n                    <div className=\"grid-batch\">\r\n                        <div>{ICN_COPY}</div>\r\n                        <div>\r\n                            <div className=\"title-lg mb-0 text-white\">28</div>\r\n                                         On-going batches\r\n                                    </div>\r\n                        <div className=\"jce\">\r\n                            <div className=\"grid-batch-icon\">\r\n                            <i class=\"bi bi-arrows-angle-expand\"></i>\r\n                                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"grid-batch bg-purple\">\r\n                        <div>{ICN_COMING_BATCHES}</div>\r\n                        <div>\r\n                            <div className=\"title-lg mb-0 text-white\">28</div>\r\n                                         On-going batches\r\n                                    </div>\r\n                        <div className=\"jce\">\r\n                            <div className=\"grid-batch-icon\">\r\n                            <i class=\"bi bi-arrows-angle-expand\"></i>\r\n                                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                \r\n                    {/* ..........Calender......... */}\r\n                    <Card title=\"Calender\" className=\"full-h\">\r\n                        <CalenderGraph/>\r\n                    </Card>\r\n                    {/* ..........End Calender......... */}\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Home","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\ClassLab\\CodeEditor\\Language.js",["314","315","316"],"const someJSCodeExample = `\r\n\r\n  const CANCELATION_MESSAGE = {\r\n    type: 'cancelation',\r\n    msg: 'operation is manually canceled',\r\n  };\r\n\r\n  function makeCancelable(promise) {\r\n    let hasCanceled_ = false;\r\n\r\n    const wrappedPromise = new Promise((resolve, reject) => {\r\n      promise.then(val => hasCanceled_ ? reject(CANCELATION_MESSAGE) : resolve(val));\r\n      promise.catch(reject);\r\n    });\r\n\r\n    return (wrappedPromise.cancel = () => (hasCanceled_ = true), wrappedPromise);\r\n  }\r\n\r\n  export default makeCancelable;\r\n`;\r\n\r\nconst someCSSCodeExample = `\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n  }\r\n  *::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n`;\r\n\r\n\r\nconst python = `\r\n# This program adds two numbers\r\n\r\nnum1 = 1.5\r\nnum2 = 6.3\r\n\r\n# Add two numbers\r\nsum = num1 + num2\r\n\r\n# Display the sum\r\nprint('The sum of {0} and {1} is {2}'.format(num1, num2, sum))`\r\n\r\nconst sql = ``\r\n\r\nexport const Language = [\r\n      {\r\n        label: \"Java\",\r\n        name: \"index.java\",\r\n        language: \"java\",\r\n        value: ''\r\n      },\r\n      {\r\n        label: \"C\",\r\n        name: \"index.c\",\r\n        language: \"c\",\r\n        value: ''\r\n      },\r\n      {\r\n        label: \"Python2\",\r\n        name: \"index.cpp\",\r\n        language: \"python2\",\r\n        value: python\r\n      },\r\n      {\r\n        label: \"Sql\",\r\n        name: \"index.cpp\",\r\n        language: \"sql\",\r\n        value: ''\r\n      },\r\n      {\r\n        label: \"NodeJs\",\r\n        name: \"index.js\",\r\n        language: \"nodejs\",\r\n        value: ''\r\n      },\r\n      {\r\n        label: \"Swift\",\r\n        name: \"\",\r\n        language: \"swift\",\r\n        value: ''\r\n      },\r\n      {\r\n        label: \"Ruby\",\r\n        name: \"\",\r\n        language: \"ruby\",\r\n        value: ''\r\n      }\r\n      \r\n]","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Layout\\Sidebar\\SidebarConfig.js",["317","318","319"],"import { Children } from 'react'\r\nimport {ICN_HOME,ICN_CALENDER,ICN_SETTING, ICN_SUPPORT, ICN_REPORT, ICN_PARTICIPANT, ICN_BATCHES} from '../../Common/Icon'\r\nexport const SidebarConfig = [\r\n    {\r\n        icon: ICN_HOME,\r\n        title: \"HOME\",\r\n        pathname: \"/\",\r\n        disabled: false\r\n    },\r\n    {\r\n        icon: ICN_BATCHES,\r\n        title: \"ORG MGMT\",\r\n        pathname: \"org-mgmt\",\r\n        disabled: true\r\n    },\r\n    {\r\n        icon: ICN_PARTICIPANT,\r\n        title: \"TRAINING\",\r\n        pathname: \"training\",\r\n        disabled: false\r\n    },\r\n    {\r\n        icon: ICN_BATCHES,\r\n        title: \"BATCHES\",\r\n        pathname: \"batches\",\r\n        disabled: false\r\n    },\r\n    // {\r\n    //     icon: ICN_BATCHES,\r\n    //     title: \"USER\",\r\n    //     pathname: \"user\",\r\n    //     disabled: false\r\n    // },\r\n    {\r\n        icon: ICN_PARTICIPANT,\r\n        title: \"COURSE\",\r\n        pathname: \"course\",\r\n        disabled: true\r\n    },\r\n    {\r\n        icon: ICN_PARTICIPANT,\r\n        title: \"LAB STORE\",\r\n        pathname: \"labstore\",\r\n        subPath:'labstore',\r\n        disabled: false,\r\n        Children: [\r\n            {\r\n                title: \"Catalog\",\r\n                pathName:'labstore',\r\n                disabled: false,\r\n            },\r\n            {\r\n                title: \"My Lab\",\r\n                pathName:'mylab',\r\n                disabled: false,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        icon: ICN_REPORT,\r\n        title: \"REPORT\",\r\n        pathname: \"report\",\r\n        disabled: true\r\n    },\r\n    // {\r\n    //     icon: ICN_CALENDER,\r\n    //     title: \"CALENDER\",\r\n    //     pathname: \"calender\",\r\n    //     disabled: true\r\n    // },\r\n    {\r\n        icon: ICN_SUPPORT,\r\n        title: \"SUPPORT\",\r\n        pathname: \"support\",\r\n        disabled: true\r\n    },\r\n    // {\r\n    //     icon: ICN_SETTING,\r\n    //     title: \"SETTING\",\r\n    //     pathname: \"setting\",\r\n    //     disabled: true\r\n    // },\r\n\r\n\r\n]","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\CardHeader.js",["320"],"import { Breadcrumb } from \"react-bootstrap\";\r\nimport { navigate } from \"./Router\";\r\n\r\nimport SearchBox from \"./SearchBox/SearchBox\"\r\n\r\n\r\nconst CardHeader = ({ location }) => {\r\n    return (<>\r\n        <div className=\"jcb aic py-2\">\r\n            {location && location.state && <Breadcrumb>\r\n                <Breadcrumb.Item className=\"\">{location.state.title}</Breadcrumb.Item>\r\n                {location.state.subTitle && <Breadcrumb.Item active>\r\n                    {location.state.subTitle}\r\n                </Breadcrumb.Item>}\r\n                {/* <Breadcrumb.Item active>Data</Breadcrumb.Item> */}\r\n            </Breadcrumb>}\r\n            <SearchBox />\r\n        </div>\r\n    </>)\r\n}\r\nexport default CardHeader;","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\LabStore.js\\LabList.js",["321","322"],"import { useState } from \"react\";\r\nimport { BsModal } from \"../../Common/BsUtils\";\r\nimport { BtnPrimary } from \"../../Common/Buttons/Buttons\";\r\nimport SearchBox from \"../../Common/SearchBox/SearchBox\"\r\nimport { ICN_ON_GOING, ICN_STAR } from \"../../Common/Icon\"\r\nimport AddLab from \"./AddLab\";\r\nimport \"./Styles.css\";\r\n\r\nconst dummyData = [\r\n    {label:'Google Cloud Essentials', icon: ICN_ON_GOING, link: '', desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Google Cloud Essentials', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'App Development', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Big Data', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Machine Learning', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'},\r\n    {label:'Security Backups & Recovery', icon: ICN_ON_GOING, link: '',  desc:'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details'}\r\n]\r\n\r\nconst LabList = () => {\r\n    const [show,setShow] = useState(false)\r\n    return (<div className=\"table-shadow p-3\">\r\n          <div className=\"jcb \">\r\n                <div className=\"\">Lab Store</div>\r\n                <SearchBox/>\r\n            </div>\r\n            <div className=\"flx mt-3\">\r\n                  <div className=\"tab-btn\">Catalog</div>  \r\n                  <div className=\"tab-btn secondary-color\">My Labs</div>  \r\n            </div>\r\n\r\n            <div className=\"catalog-container\">\r\n                {dummyData.map(res=> <div className=\"labList\">\r\n                    <div className=\"aic flx1 jcc\">{res.icon}</div>\r\n                    <div className=\"labList-info flx5\">\r\n                        <div>\r\n                            <div className=\"title-md text-white\">{res.label}</div>\r\n                            <div className=\"title-sm text-white\">{res.desc}</div>\r\n                        </div>\r\n                        <div className=\"text-md text-white\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    2 hours\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    Intermediate\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    on Demand\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    0.2$\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-right jcb-c\">\r\n                        <div><BtnPrimary onClick={()=>setShow(true)}>+ Import Now</BtnPrimary></div>\r\n                        <div className=\"\">\r\n                              <div className=\"title-sm text-white\">500 + active imports</div>\r\n                              <div className=\"star-icon\">\r\n                                  <div>\r\n                                      {ICN_STAR}\r\n                                  </div>\r\n                                  <div>\r\n                                      {ICN_STAR}\r\n                                  </div>\r\n                                  <div>\r\n                                      {ICN_STAR}\r\n                                  </div>\r\n                                  <div>\r\n                                      {ICN_STAR}\r\n                                  </div>\r\n                                  <div>\r\n                                      {ICN_STAR}\r\n                                  </div>\r\n                                  \r\n                              </div>\r\n                        </div>\r\n                    </div>\r\n                </div> )}\r\n          \r\n            </div>\r\n    {<BsModal {...{show,setShow,headerTitle:\"Add This Lab\",size:\"xl\"}}>\r\n         {show && <AddLab/>}  \r\n    </BsModal>}\r\n</div>)\r\n}\r\n\r\nexport default LabList","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Batches\\BatchDetails.js",["323"],"import { useState } from \"react\";\r\nimport './batches.css'\r\nimport DynamicTable from \"../../Common/DynamicTable/DynamicTable\";\r\nimport { ICN_TRASH,ICN_EDIT  } from \"../../Common/Icon\";\r\nimport PaginationOne from \"../../Common/Pagination\";\r\nimport CardHeader from \"../../Common/CardHeader\";\r\n\r\n\r\n\r\n\r\nconst dummyData =[\r\n    {name: 'Jessie Buchanan',empId: '10290',emailId:'benits@msn.com',phoneNo:'(659) 768-1869',department:'Information Technology'},\r\n    {name: 'Lisa Palmer',empId: '10290',emailId:'drewf@optonline.net',phoneNo:'(659) 768-1869',department:'Information Technology'},\r\n    {name: 'Donna Higgins',empId: '10290',emailId:'devphil@sbcglobal.net',phoneNo:'(659) 768-1869',department:'Information Technology'},\r\n    {name: 'Bob Norris',empId: '10290',emailId:'cliffski@me.com',phoneNo:'(659) 768-1869',department:'Information Technology'},\r\n    {name: 'Tonya Walters',empId: '10290',emailId:'22 june 2020',phoneNo:'(659) 768-1869',department:'Information Technology'},\r\n\r\n]\r\n\r\nconst createBatches = {\r\n    batchName: '',\r\n    trainingType: '',\r\n    endDate:'',\r\n    startDate: '',\r\n    course:'',\r\n    instructor:''\r\n\r\n}\r\nconst BatchesDetails = ({location}) => {\r\n    const [configuration, setConfiguration] = useState({\r\n        columns: {\r\n            \"name\": {\r\n                \"title\": \"Name\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false,\r\n            },\r\n            \"empId\": {\r\n                \"title\": \"Emp Id\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"emailId\": {\r\n                \"title\": \"Email Id\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"phoneNo\": {\r\n                \"title\": \"Phone Number\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n            ,\r\n            \"department\": {\r\n                \"title\": \"Department\",\r\n                \"sortDirection\": null,\r\n                \"sortEnabled\": false,\r\n                isSearchEnabled: false\r\n            }\r\n        },\r\n        headerTextColor: '#454E50', // user can change table header text color\r\n        sortBy: null,  // by default sort table by name key\r\n        sortDirection: false, // sort direction by default true\r\n        updateSortBy: (sortKey) => {\r\n            configuration.sortBy = sortKey;\r\n            Object.keys(configuration.columns).map(key => configuration.columns[key].sortDirection = (key === sortKey) ? !configuration.columns[key].sortDirection : false);\r\n            configuration.sortDirection = configuration.columns[sortKey].sortDirection;\r\n            setConfiguration({ ...configuration });\r\n        },\r\n        actions: [\r\n            {\r\n                \"title\": \"Edit\",\r\n                \"icon\": ICN_EDIT,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            },\r\n            {\r\n                \"title\": \"Delete\",\r\n                \"icon\": ICN_TRASH,\r\n                \"onClick\": (data, i) => console.log(data)\r\n            }\r\n        ],\r\n        actionCustomClass: \"no-chev esc-btn-dropdown\", // user can pass their own custom className name to add/remove some css style on action button\r\n        actionVariant: \"\", // user can pass action button variant like primary, dark, light,\r\n        actionAlignment: true, // user can pass alignment property of dropdown menu by default it is alignLeft \r\n        // call this callback function onSearch method in input field on onChange handler eg: <input type=\"text\" onChange={(e) => onSearch(e.target.value)}/>\r\n        // this search is working for search enable fields(column) eg. isSearchEnabled: true, in tale column configuration\r\n        searchQuery: \"\",\r\n        tableCustomClass: \"ng-table sort-enabled table-borderless\", // table custom class\r\n        showCheckbox: false,\r\n        clearSelection: false\r\n    });\r\n    return (<div className=\"table-shadow p-3\">\r\n        <CardHeader {...{location}}/>\r\n        <div className=\"bDetail-action\">\r\n            <div className=\"full-w \">\r\n            <div className=\"batch-info\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">Batch Name</div>\r\n                        <div className=\"col-6 mb-4\">ITU_01</div>\r\n                        <div className=\"col-6\">Status</div>\r\n                        <div className=\"col-6\">Active</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">Technology Name</div>\r\n                        <div className=\"col-6  mb-4\">Angular</div>\r\n                        <div className=\"col-6\">Start Date</div>\r\n                        <div className=\"col-6\">20 july 2020</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">Creation Date </div>\r\n                        <div className=\"col-6  mb-4\">20 july 2020</div>\r\n                        <div className=\"col-6\">End Date</div>\r\n                        <div className=\"col-6\">20 july 2020</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        <DynamicTable {...{configuration,sourceData: dummyData}}/>\r\n        <div className=\"pagination-div\">\r\n        <PaginationOne totalCount={30}  onNavigate={(pageNumber) => console.log(pageNumber)}/>\r\n\r\n        </div>\r\n    </div>)\r\n}\r\nexport default BatchesDetails","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\TrainingDetails.js",["324","325"],"import { useState } from \"react\";\r\nimport '../Batches/batches.css'\r\nimport './training.css'\r\nimport { TabBtn } from \"../../Common/Buttons/Buttons\";\r\nimport SearchBox from \"../../Common/SearchBox/SearchBox\";\r\nimport TrainingInfo from \"./TrainingInfo/TrainingInfo\";\r\nimport { Router } from \"../../Common/Router\";\r\nimport Session from \"./Session/Session\";\r\nimport Assessment from \"./Assessment/Assessment\";\r\nimport Forum from \"./Forum/Forum\";\r\nimport Report from \"./Report/Report\";\r\nimport { useNavigate } from \"@reach/router\"\r\nimport CardHeader from \"../../Common/CardHeader\";\r\n\r\n\r\nconst TrainingDetails = ({ location }) => {\r\n    const navigate = useNavigate();\r\n    return (<>\r\n        <div className=\"table-shadow p-3\">\r\n            <CardHeader {...{location}}/>\r\n            <div className=\"flx my-2\">\r\n                <TabBtn active={location.state.subPath === \"/\"} onClick={() => navigate(\"/training/training-details\", { state: { path:'training', title: 'TRAINING',subTitle:\"Training Info\", subPath:\"/\" } })}>Training Info</TabBtn>\r\n                <TabBtn active={location.state.subPath === \"session\"} onClick={() => navigate(\"/training/training-details/session\", { state: {path:'training', title: 'TRAINING',subTitle:\"Sessions\",subPath:\"session\" } })}>Sessions</TabBtn>\r\n                <TabBtn active={location.state.subPath === \"assessment\"} onClick={() => navigate(\"/training/training-details/assessment\", {path:'training', state: { title: 'TRAINING',subTitle:\"Assessments\",subPath:\"assessment\" } })}>Assessments</TabBtn>\r\n                <TabBtn active={location.state.subPath === \"reports\"} onClick={() => navigate(\"/training/training-details/report\", { state: {path:'training', title: 'TRAINING',subTitle:\"Reports\",subPath:\"report\" } })}>Reports</TabBtn>\r\n                <TabBtn active={location.state.subPath === \"forum\"} onClick={() => navigate(\"/training/training-details/forum\", { state: {path:'training', title: 'TRAINING',subTitle:\"Discussion Forum\",subPath:\"forum\" } })}>Discussion Forum</TabBtn>\r\n            </div>\r\n            <Router>\r\n                <TrainingInfo path=\"/\" />\r\n                <Session path=\"session\" />\r\n                <Assessment path=\"assessment\" />\r\n                <Report path=\"report\" />\r\n                <Forum path=\"forum\" />\r\n            </Router>\r\n\r\n        </div></>)\r\n}\r\nexport default TrainingDetails","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\SearchBox\\SearchBox.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\DynamicTable\\DynamicTable.js",["326","327","328","329","330","331"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, OverlayTrigger, Dropdown, Tooltip } from 'react-bootstrap';\r\nimport { ICN_ARROW_DOWN,ICN_MORE } from '../Icon';\r\nimport { CustomToggle } from '../../../Services/MethodFactory';\r\nimport './dynamicTable.css';\r\nconst htmlParser = require('html-react-parser');\r\nconst NO_ARROW_HIGHLIGHTED = ICN_ARROW_DOWN\r\nconst HIGHLIGHT_UP_ARROW = ICN_ARROW_DOWN;\r\nconst HIGHLIGHT_DOWN_ARROW = ICN_ARROW_DOWN;\r\n/*\r\n    Sort the array by key.\r\n    @param {Array of Objects} arr - Array of object which is source data\r\n    @param {String} key - Object key which is used to sort the array\r\n    @param {Boolean} isAsc - Default ascending order is true\r\n    @return {Array of Objects} - Returns sorted array\r\n*/\r\nconst sortByKey = (arr = [], key = \"\", isAsc = true) => (Array.isArray(arr) && key) ? (arr.sort((a, b) => (typeof a[key] === 'string' ? a[key].toUpperCase() : a[key]) > (typeof b[key] === 'string' ? b[key].toUpperCase() : b[key]) !== isAsc ? -1 : 1)) : arr;\r\n\r\n/*\r\n    Applies filter on table rows for search enabled configuration only by search query.\r\n    @param {Array of Objects} data - Array of object which is source data\r\n    @param {Object} configuration - Table configuration such as columns and it's actions\r\n    @param {String} str - Search query string\r\n    @return {Array of Objects}\r\n*/\r\nconst applyFilter = (data = [], configuration = {}, str = \"\") => {\r\n    let filteredArr = [];\r\n    try {\r\n        if (typeof str === \"string\" && str) {\r\n            let searchEnabledColumns = Object.keys(configuration.columns).filter(key => configuration.columns[key].isSearchEnabled); // Returns search enabled configuration key only\r\n            filteredArr = data.filter(elem => searchEnabledColumns.some(key => elem[key].toUpperCase().indexOf(str.toUpperCase()) >= 0))\r\n        } else {\r\n            filteredArr = data\r\n        }\r\n    } catch (err) {\r\n        filteredArr = data;\r\n    }\r\n    return filteredArr;\r\n}\r\n\r\n/*\r\n    Returns custom field as per configuration.\r\n    @param {Object} config - Column configurations\r\n    @param {String} key - Source data Object key\r\n    @param {Any} val - source data object value\r\n    @return {JSX} - Table data(td)\r\n*/\r\nconst getTableData = (config = {}, data = {}, key = \"\") => {\r\n    let temp = data[key];\r\n    try {\r\n        if (config.render) temp = config.render(data, key);\r\n        if (temp === null || temp === undefined || temp === \"\") temp = \"NA\"; // display NA-Not Available if data is not available\r\n    } catch (err) {\r\n        console.error(\"Exception occurred in getTableData -- \" + err);\r\n    }\r\n    return temp;\r\n}\r\n\r\n/*\r\n    Constructing table header.\r\n    @param {Object} columns - It has all the table configuration such as columns and it's actions\r\n    @param {String} headerTextColor - Custom css class\r\n    @param {Function} updateSortBy - this is the callback function\r\n    @param {Object} configuration -Table configuration such as columns and it's actions\r\n    @return {JSX} - Table header(th)\r\n*/\r\nconst TableHeader = ({ columns = {}, headerTextColor = \"\", updateSortBy, sortBy, actions, showCheckbox, isSelectedAll, onSelectAll }) => <tr>\r\n    {showCheckbox && <th style={{ 'width': '10px', \"padding\": \"8px 18px\" }}>\r\n        <div className=\"custom-input\">\r\n            <input type=\"checkbox\" id=\"select-all\" checked={isSelectedAll} onChange={(e) => onSelectAll(e.target.checked)} />\r\n            <label htmlFor=\"select-all\"></label>\r\n        </div>\r\n    </th>}\r\n    {Object.keys(columns).map((key, i) => {\r\n\r\n\r\n\r\n        return <th key={i} className={(key === sortBy && columns[key].sortEnabled) ? \"active-sort\" : \"\"} style={{ width: columns[key].width, color: headerTextColor }} onClick={() => { if (columns[key].sortEnabled && typeof updateSortBy === 'function') updateSortBy(key) }}>\r\n            {columns[key].title && <div> {typeof columns[key].title === 'string' && columns[key].title}{typeof updateSortBy === 'function' && <span>&emsp;{(typeof columns[key].title === 'string' && (key === sortBy)) ? (columns[key].sortDirection ? HIGHLIGHT_UP_ARROW : HIGHLIGHT_DOWN_ARROW) : ((columns[key].sortEnabled) ? NO_ARROW_HIGHLIGHTED : \"\")}</span>}</div>}\r\n        </th>\r\n    })}\r\n    {actions && actions.length > 0 && <th style={{ \"width\": \"50px\" }}></th>}\r\n</tr>\r\n\r\n/*\r\n    Constructing table body which is rows(tr).\r\n    @param {Array of Objects} sourceData - Row data's\r\n    @param {Object} configuration -Table configuration such as columns and it's actions\r\n    @return {JSX} - Table header(th)\r\n*/\r\nconst TableBody = ({ sourceData, configuration, onSelect }) => sourceData.map((data, idx) => <tr key={idx}>\r\n    {/* key mapping. Note: key should be same as table key*/}\r\n    {configuration.showCheckbox && <td style={{ 'width': '10px', \"padding\": \"8px 18px\" }}>\r\n        <div className=\"custom-input\">\r\n            <input type=\"checkbox\" id={idx} checked={data.isChecked} onChange={(e) => onSelect(e.target.checked, idx)} />\r\n            <label htmlFor={idx}></label>\r\n        </div>\r\n    </td>}\r\n    {Object.keys(configuration.columns).map((key, rowIdx) => <td key={rowIdx} className={`${configuration.columns[key].tdCustomClass ? configuration.columns[key].tdCustomClass : \"elps\"} ${getTableData(configuration.columns[key], data, key) === \"NA\" ? \"text-muted\" : \"\"}`} onClick={() => { if (typeof configuration.columns[key].onClick === 'function') configuration.columns[key].onClick(data) }}>\r\n        {configuration.showTooltip ? <OverlayTrigger placement='auto' flip={true} overlay={<Tooltip>{data[key] || configuration.columns[key].title}</Tooltip>}><span>{getTableData(configuration.columns[key], data, key)}</span></OverlayTrigger> : <span>{getTableData(configuration.columns[key], data, key)}</span>}\r\n    </td>)}\r\n    {configuration.actions && configuration.actions.length > 0 && <td className=\"text-right\"><Action {...{ configuration, \"row\": data, index: idx }} /></td>}\r\n</tr>)\r\n\r\n/*\r\n    Constructing table row action.\r\n    @param {Object} configuration -Table configuration such as columns and it's actions\r\n    @param {Object} row - Row object\r\n    @return {JSX} - Dropdown with set of actions which passed through props\r\n*/\r\nconst Action = ({ configuration = {}, row = {}, index = null }) => <Dropdown alignRight={configuration.actionAlignment ? configuration.actionAlignment : true}>\r\n    <Dropdown.Toggle as={CustomToggle} variant={configuration.actionVariant ? configuration.actionVariant : \"\"} className={configuration.actionCustomClass} id={\"actions-\" + Math.random()} >\r\n        {ICN_MORE}\r\n    </Dropdown.Toggle>\r\n    <Dropdown.Menu size=\"sm\" >\r\n        {\r\n            configuration.actions.filter(action => (!action.rule || (typeof action.rule === \"function\" && action.rule(row)))).map((action, i) => <Dropdown.Item key={i} onClick={(e) => {\r\n                if (typeof action.onClick === 'function')\r\n                    action.onClick(row, index);\r\n            }} as=\"button\">\r\n                <span className=\"action-icon\">{action.icon}</span>{action.title}\r\n            </Dropdown.Item>)\r\n        }\r\n    </Dropdown.Menu>\r\n</Dropdown>\r\n\r\n/*\r\n    React bootstrap table component, It can be used where data to represented in table format.\r\n    @param {Object} props - The date required data to build a table\r\n    @return {JSX} - Table\r\n*/\r\nexport const DynamicTable = (props) => {\r\n    const [sourceData, setSourceData] = useState(props.sourceData);\r\n    const [isSelectedAll, setSelectedAll] = useState(false);\r\n    /**\r\n\t\tFires when user clicked on single checkbox.\r\n\t\t@param {Boolean} checked - This is checkbox event value\r\n\t*/\r\n    const onSelect = (checked, idx) => {\r\n        try {\r\n            let flag = checked;\r\n            let tempData = sourceData[idx];\r\n            if (tempData) {\r\n                tempData.isChecked = checked;\r\n                setSourceData([...sourceData]);\r\n                setSelectedAll(flag ? ((sourceData.filter(sd => sd.isChecked)).length === sourceData.length) : flag);\r\n                props.onSelected(sourceData.filter(e => e.isChecked)); // Invoking callback method when there user take an action of checkbox\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Exception occurred in onSelect -- \" + err);\r\n        }\r\n    }\r\n\r\n    /**\r\n\t\tFires when user clicked on select all checkbox.\r\n\t\t@param {Boolean} checked - This is checkbox event value\r\n\t*/\r\n    const onSelectAll = (flag) => {\r\n        try {\r\n            if (Array.isArray(sourceData) && sourceData.length > 0) {\r\n                for (let i = 0, l = sourceData.length; i < l; i++)\r\n                    sourceData[i].isChecked = flag;\r\n                setSourceData([...sourceData]);\r\n                setSelectedAll(flag);\r\n                props.onSelected(sourceData.filter(e => e.isChecked)); // Invoking callback method when there user take an action of checkbox\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Exception occurred in onSelectAll -- \" + err);\r\n        }\r\n    }\r\n\r\n    // Listening for source data change and updates checkbox isSelected.\r\n    useEffect(() => {\r\n        if (Array.isArray(sourceData) && sourceData.length > 0) {\r\n            let temp = sourceData.filter(d => d.isChecked);\r\n            if (temp.length === sourceData.length && !isSelectedAll) setSelectedAll(true);\r\n        }\r\n    }, [sourceData]);\r\n\r\n    // Listening for source data change and update the same in source data\r\n    useEffect(() => {\r\n        if (Array.isArray(props.sourceData)) setSourceData(props.sourceData);\r\n    }, [props.sourceData]);\r\n\r\n    // Listening for clear selection value change\r\n    useEffect(() => {\r\n        if (props.configuration.clearSelection) onSelectAll(false);\r\n    }, [props.configuration.clearSelection]);\r\n\r\n    // Listen sortBy, sortDirection and update the data source\r\n    useEffect(() => {\r\n        setSourceData(sortByKey(applyFilter(sourceData, props.configuration, props.configuration.searchQuery), props.configuration.sortBy, props.configuration.sortDirection));\r\n    }, [props.configuration.sortBy, props.configuration.sortDirection])\r\n\r\n    return <Table className={props.configuration.tableCustomClass ? props.configuration.tableCustomClass : \"ng-table\"}>\r\n        <thead>\r\n            <TableHeader {...{ ...props.configuration, isSelectedAll, onSelectAll }} />\r\n        </thead>\r\n        <tbody>\r\n            {Array.isArray(sourceData) && sourceData.length > 0 && <TableBody {...{ ...props, sourceData, onSelect }} />}\r\n            {\r\n                (!Array.isArray(sourceData) || sourceData.length <= 0) && <tr className=\"text-center\">\r\n                    <td colSpan={Object.keys(props.configuration.columns).length + (props.configuration.actions ? 1 : 0) + (props.configuration.showCheckbox ? 1 : 0)} className=\"no-item-show mt-4\">\r\n                        {props.errorMessage || \"There's no records\"}\r\n                    </td>\r\n                </tr>\r\n            }\r\n        </tbody>\r\n    </Table>\r\n}\r\nexport default DynamicTable;","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\InputField\\InputField.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\LabStore.js\\AddLab.js",["332"],"import Carousel from 'react-bootstrap/Carousel'\r\nimport { ICN_ON_GOING } from \"../../Common/Icon\"\r\nimport Screen1 from '../../../Assets/Images/screen1.png';\r\nimport \"./Styles.css\";\r\nimport { Button } from '../../Common/Buttons/Buttons';\r\n\r\nconst dummyData = { label: 'Google Cloud Essentials', icon: ICN_ON_GOING, link: '', desc: 'In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the Google... more details' }\r\n\r\nconst AddLab = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"title-sm\">Google Cloud Essentials</div>\r\n            <div className=\"text-justify\">\r\n                In this introductory-level Quest, you will get hands-on practice with the Google Cloud’s\r\n                fundamental tools and services. Google Cloud Essentials is the recommended first Quest for the\r\n                Google Cloud learner - you will come in with little or no prior cloud knowledge, and come out with\r\n                practical experience that you can apply to your first Google Cloud project. From writing Cloud Shell\r\n                commands and deploying your first virtual machine, to running applications on Kubernetes Engine or with\r\n                load balancing, Google Cloud Essentials is a prime introduction to the platform’s basic features.\r\n            </div>\r\n            <div className=\"row pt-2 pb-4\">\r\n                <div className=\"col-3\">\r\n                  <div className=\"title-sm\">Duration: 4 hours</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"title-sm\">Difficulty level: Introductory</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"title-sm\">Availability type: On-demand</div>\r\n                </div>\r\n             </div>\r\n             <div className=\"title-md\">Lab Details</div>\r\n             <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  <div className=\"\">Developed by</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"\">TrainSoft</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"\">Number of users required</div>\r\n                </div>\r\n             </div>\r\n             <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                  <div>Users' rating</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div>5</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div></div>\r\n                </div>\r\n             </div>\r\n             <div className=\"row aic\">\r\n                <div className=\"col-3\">\r\n                  <div>Cost per user</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div className=\"title-sm\">$0.20</div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <div></div>\r\n                </div>\r\n             </div>\r\n             <div className=\"title-md mt-2\">Screenshots</div>\r\n             <Carousel>\r\n                <Carousel.Item>\r\n                <div className=\"flx\">\r\n                <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  </div>\r\n                \r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                <div className=\"flx\">\r\n                <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  <div className=\"carousel-div\">\r\n                  <img\r\n                    className=\"d-block\"\r\n                    src={Screen1}\r\n                    alt=\"First slide\"\r\n                  />\r\n                  </div>\r\n                  </div>\r\n                </Carousel.Item>\r\n          \r\n              </Carousel>\r\n\r\n              <footer className=\"jcb mt-4\">\r\n                <div></div>\r\n                        <div>\r\n                           <Button type=\"submit\" >Pay and import</Button>\r\n                        </div>\r\n                  </footer>\r\n            </div>)\r\n}\r\n\r\nexport default AddLab","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\Pagination.js",["333"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\n\r\nfunction PaginationOne(props) {\r\n    const [paginateInfo, setPaginateInfo] = useState({});\r\n\r\n    // This method used to construct pagination array\r\n    const Paginate = (totalItems, currentPage = 1, pageSize = props.pageCount ? props.pageCount : 10, maxPages = 10) => {\r\n        // calculate total pages\r\n        let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        // ensure current page isn't out of range\r\n        if (currentPage < 1) {\r\n            currentPage = 1;\r\n        } else if (currentPage > totalPages) {\r\n            currentPage = totalPages;\r\n        }\r\n\r\n        let startPage, endPage;\r\n        if (totalPages <= maxPages) {\r\n            // total pages less than max so show all pages\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // total pages more than max so calculate start and end pages\r\n            let maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\r\n            let maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\r\n            if (currentPage <= maxPagesBeforeCurrentPage) {\r\n                // current page near the start\r\n                startPage = 1;\r\n                endPage = maxPages;\r\n            } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\r\n                // current page near the end\r\n                startPage = totalPages - maxPages + 1;\r\n                endPage = totalPages;\r\n            } else {\r\n                // current page somewhere in the middle\r\n                startPage = currentPage - maxPagesBeforeCurrentPage;\r\n                endPage = currentPage + maxPagesAfterCurrentPage;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        let startIndex = (currentPage - 1) * pageSize;\r\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    };\r\n\r\n    // Fires when user clicked on page navigation\r\n    const onNavigate = (pageNumber = 1) => {\r\n        initPagination(pageNumber);\r\n        props.onNavigate(pageNumber);\r\n    };\r\n\r\n    // This method is for Initialize pagination component\r\n    const initPagination = (currentPageNumber = 1) => {\r\n        try {\r\n            setPaginateInfo({ ...Paginate(props.totalCount, currentPageNumber) });\r\n        } catch (err) {\r\n            console.error(\"Error occurred while initPagination\" + err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (props.totalCount) initPagination(1); // Initialize pagination layout, Default page number: 1\r\n    }, [props.totalCount]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {paginateInfo && paginateInfo.totalPages > 1 && <div className=\"flx flx-center pagination-bar\">\r\n                {/* <div className=\"text-muted mr10\">Showing {paginateInfo.currentPage} of {paginateInfo.totalPages}</div> */}\r\n                <div className=\"flx1\">\r\n                    <Pagination size=\"sm\">\r\n                        <Pagination.First disabled={paginateInfo.currentPage === 1} onClick={() => onNavigate(1)} />\r\n                        <Pagination.Prev disabled={paginateInfo.currentPage === 1} onClick={() => onNavigate(paginateInfo.currentPage - 1)} />\r\n                        {paginateInfo && paginateInfo.pages.map((page, i) => {\r\n                            return (\r\n                                <Pagination.Item key={i} active={page === paginateInfo.currentPage} onClick={() => onNavigate(page)}>{page}</Pagination.Item>\r\n                            )\r\n                        })}\r\n                        <Pagination.Next disabled={paginateInfo.currentPage === paginateInfo.totalPages} onClick={() => onNavigate(paginateInfo.currentPage + 1)} />\r\n                        <Pagination.Last disabled={paginateInfo.currentPage === paginateInfo.totalPages} onClick={() => onNavigate(paginateInfo.totalPages)} />\r\n                    </Pagination>\r\n                </div>\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PaginationOne;\r\n","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Session\\Session.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\TrainingInfo\\TrainingInfo.js",["334","335","336","337","338"],"import '../training.css'\r\nimport { Button } from \"../../../Common/Buttons/Buttons\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport { ICN_TRASH, ICN_EDIT, ICN_BATCHES, ICN_ON_GOING, ICN_PROGRESS, ICN_COMPLETED, ICN_PASSED, ICN_EMAIL_W, ICN_TEXT_W }from '../../../Common/Icon';\r\n\r\nconst TrainingInfo = ()=>{\r\n    const activityData = [\r\n        { icon: ICN_ON_GOING, name: 'Batch enrolled', data: '15' },\r\n        { icon: ICN_PROGRESS, name: 'Total Training', data: '10' },\r\n        { icon: ICN_COMPLETED, name: 'Average Attendance', data: '8' },\r\n        { icon: ICN_PASSED, name: 'Labs', data: '7' },\r\n    ]\r\n    const activityCard = [\r\n        { name: \"OOAD session\", time: 'Mon, 20 Jun 2020 12:03:05', label: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio.' },\r\n        { name: \"Assessment 1\", time: 'Mon, 20 Jun 2020 12:03:05', label: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam.' },\r\n        { name: \"OOAD session\", time: 'Mon, 20 Jun 2020 12:03:05', label: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam.' },\r\n\r\n    ]\r\n    return(<>\r\n       <div className=\"flx full-h\">\r\n\r\n<div className=\"box-shadow flx1 p-2 mr-3\">\r\n    {/* <div className=\"user-profile-container\">\r\n    <div className=\"jcb\">\r\n        <div className=\"user-pf\">Us</div>\r\n    </div>\r\n\r\n    <div className=\"jcb mt-2\">\r\n        <Button>{ICN_EMAIL_W} <span className=\"pl-3\">Email</span></Button>\r\n        <Button>{ICN_TEXT_W} <span className=\"pl-3\">Text</span></Button>\r\n\r\n    </div>\r\n</div> */}\r\n    <div className=\"jcc my-4\">\r\n        <Button>{ICN_PROGRESS} Announcement</Button>\r\n    </div>\r\n    <div className=\"my-5 title-sm\">\r\n        <div className=\"row my-2\">\r\n            <div className=\"col-6\">Training Name</div>\r\n            <div className=\"col-6\">ML_B1_B2_C1</div>\r\n        </div>\r\n        <div className=\"row my-2\">\r\n            <div className=\"col-6\">Created by</div>\r\n            <div className=\"col-6\">Jack A</div>\r\n        </div>\r\n        <div className=\"row my-2\">\r\n            <div className=\"col-6\">Email ID</div>\r\n            <div className=\"col-6\">jack@email.com</div>\r\n        </div>\r\n        <div className=\"row my-2\">\r\n            <div className=\"col-6\">Phone Number</div>\r\n            <div className=\"col-6\">(231) 983 9872</div>\r\n        </div>\r\n        <div className=\"row my-2\">\r\n            <div className=\"col-6\">Start Date</div>\r\n            <div className=\"col-6\">05/08/2020</div>\r\n        </div>\r\n        <div className=\"row my-2\">\r\n            <div className=\"col-6\">End Date</div>\r\n            <div className=\"col-6\">05/09/2020</div>\r\n        </div>\r\n        <div className=\"row my-2\">\r\n            <div className=\"col-6\">Course</div>\r\n            <div className=\"col-6\">c1</div>\r\n        </div>\r\n    </div>\r\n    <div className=\"jcc mt-2\">\r\n        <div className=\"training-progress\">\r\n            <CircularProgressbar\r\n                maxValue=\"100\"\r\n                minValue=\"1\" value=\"75\"\r\n                text={`75%`}\r\n                styles={buildStyles({\r\n                    trailColor: \"#F5FBFF\",\r\n                    pathColor: \"#2D62ED\",\r\n                })} />\r\n        </div>\r\n    </div>\r\n        <div className=\"text-center mt-2\">\r\n             <div className=\"title-md \">Training progress</div>\r\n            <div className=\"pointer\">Download Report</div>\r\n        </div>\r\n</div>\r\n<div className=\"flx3\">\r\n    <div className=\"jcb\">\r\n        {activityData.map((p, i) => <div key={i} className=\"user-activity\">\r\n            <div className=\"activities-btn\">\r\n                {p.icon}\r\n            </div>\r\n            <div className=\"jcb-c text-right\">\r\n                <div className=\"title-lg\">{p.data}</div>\r\n                <div className=\"title-sm\">{p.name}</div>\r\n            </div>\r\n        </div>)}\r\n\r\n    </div>\r\n    <div>\r\n        {/* ..........Analytic......... */}\r\n        <div className=\"box-shadow\">\r\n            <div className=\"jcb\">\r\n                <div className=\"aic title-lg\">Activities</div>\r\n                <div className=\"aic  title-md\">\r\n                    <div className=\"mr-4\">Customized view</div>\r\n                    <div className=\"flx\"><div className=\"aic\">\r\n                        <div>From</div> <div className=\"checkbox-div\"></div>\r\n                    </div><div className=\"aic ml-4\"><div>To</div> <div className=\"checkbox-div\"></div> </div></div>\r\n                </div>\r\n            </div>\r\n            {activityCard.map(res => <div className=\"activity-card\">\r\n                <div className=\"title-md text-white\">{res.name}</div>\r\n                <div className=\"text-sm text-white\">{res.time}</div>\r\n                <div className=\"mt-3\">{res.label}</div>\r\n            </div>)}\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n    </>)\r\n}\r\nexport default TrainingInfo","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Store\\AppContext.js",["339"],"import React, { useState } from 'react';\r\nimport useSpinner from './SpinnerHook';\r\nconst AppContext = React.createContext({});\r\nexport default AppContext;\r\nexport const AppConsumer = AppContext.Consumer;\r\n\r\n\r\nexport const AppProvider = (props) => {\r\n    const spinner = useSpinner() \r\n   \r\n    const appData = {\r\n        spinner\r\n    };\r\n\r\n    return <AppContext.Provider value={{\r\n        ...appData,\r\n    }} > {props.children} </ AppContext.Provider>\r\n}","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Store\\SpinnerHook.js",["340"],"import React, { useState } from 'react';\r\nconst useSpinner = () => {\r\n    const [spinner, setSpinner] = useState(false)\r\n    const [message, setMessage] = useState()\r\n    const show = (mes = 'Loading Please..Wait') => { setMessage(mes) ; setSpinner(true) }\r\n    const hide = () => setSpinner(false)\r\n    return { show, hide, spinner, message }\r\n}\r\nexport default useSpinner;","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\Spinner\\Spinner.js",["341"],"import useSpinner from '../../../Store/SpinnerHook'\r\nimport  './spinner.css'\r\n\r\nconst Spinner = ({value})=> {\r\n    return(<>\r\n    { value && value.spinner &&  <div class=\"fullpage-spinner flx flx-center\">\r\n        <div class=\"loading-spinner-container\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n                </div><div class=\"mt-3 text-dark\">{value.message}</div>\r\n                </div>\r\n            </div>}\r\n        </>)\r\n}\r\nexport default Spinner","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Session\\AddSession.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Labs\\Labs.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Report\\Report.js",["342"],"import Session from \"../Session/Session\"\r\n\r\nconst Report = () =>{\r\n    return(<>\r\n       Report\r\n    </>)\r\n}\r\n\r\nexport default Report","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Forum\\Forum.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Training\\Assessment\\Assessment.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\LabStore.js\\MyLab\\MyLab.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\NoDataFound\\NoDataFound.js",["343"],"import React from 'react';\r\nimport './style.css';\r\n\r\n/*\r\n    Common button for cancel\r\n    @param {Objects} className - optional className for Cancel\r\n    @param {function} onClick - callback function\r\n    @param {children} props default property\r\n*/\r\nconst ICN_NODATA = <></>;\r\nconst ICN_NODATA_BIG = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"180px\" height=\"120px\" viewBox=\"0 0 751.015 496.951\"><g transform=\"translate(-974.332 -1442)\" opacity=\"0.2\"><circle cx=\"42\" cy=\"42\" r=\"42\" transform=\"translate(1398 1486)\" fill=\"#aeaeae\"></circle><path d=\"M-2986.043,5326.816s100.775-172.565,124.041-206.045,46.721,0,46.721,0,149.648,214.009,167.545,242.035h0L-2810.891,5394Z\" transform=\"translate(4336.025 -3460.901)\" fill=\"#aeaeae\"></path><path d=\"M-2978.752,5328s119.568-161.057,147.876-203.322,56.847,0,56.847,0,194.766,304.976,216.541,340.356c5.836,9.482,0,4.366,0,4.366s-153.753-73.551-259.069-103.971S-2978.752,5328-2978.752,5328Z\" transform=\"translate(4098.476 -3535.819)\" fill=\"#aeaeae\"></path><path d=\"M-3217.191,5376.188s-15.993,6.016.7-.221c7.145-2.23,115.629-34.748,240.563,2.556,129.465,38.657,216.652,86.1,216.652,86.1s79.683,48.571,183.556,20.458c103.456-28,85.219-24.935,72.49-20.458-.167.042-.084.021,0,0\" transform=\"translate(4208.428 -3565)\" fill=\"none\" stroke=\"#aeaeae\" stroke-width=\"20\"></path><path d=\"M4245.6-3293.721v-47.208c-20.4-.6-48.5-9.55-55.378-40.039a3.906,3.906,0,0,1-.222-.975c0-.073,0-1.062,0-1.222v-71.313a12.089,12.089,0,0,1,12.087-12.088,12.089,12.089,0,0,1,12.088,12.088l.048,72.516c0,.015,0,.03,0,.045.869,1.045,13.595,15.934,31.38,13.029V-3513.7A13.3,13.3,0,0,1,4258.9-3527a13.3,13.3,0,0,1,13.3,13.3v102.716c17.846,1.864,30.486-12.217,31.372-13.233v-.046l.05-72.515c0-6.676,5.683-12.089,12.693-12.089s12.694,5.413,12.694,12.089v71.312c0,.161-.008,1.148,0,1.222a3.82,3.82,0,0,1-.233.975c-7.042,29.748-35.3,39-56.573,39.981v89.571a13.3,13.3,0,0,1-13.3,13.3A13.3,13.3,0,0,1,4245.6-3293.721Zm-55.6-88.24a.137.137,0,0,1,0,.019v0A.059.059,0,0,1,4190-3381.962Zm139-42.286a.074.074,0,0,1,0-.019.141.141,0,0,1,0,.024Z\" transform=\"translate(-3185 5110)\" fill=\"#949494\"></path><rect width=\"12\" height=\"38\" rx=\"6\" transform=\"translate(1434 1442)\" fill=\"#989898\"></rect><rect width=\"12\" height=\"38\" rx=\"6\" transform=\"translate(1434 1576)\" fill=\"#989898\"></rect><rect width=\"12\" height=\"38\" rx=\"6\" transform=\"translate(1526 1522) rotate(90)\" fill=\"#989898\"></rect><rect width=\"12\" height=\"38\" rx=\"6\" transform=\"translate(1392 1522) rotate(90)\" fill=\"#989898\"></rect><rect width=\"12\" height=\"38\" rx=\"6\" transform=\"translate(1496.57 1462.012) rotate(43)\" fill=\"#989898\"></rect><rect width=\"12\" height=\"38\" rx=\"6\" transform=\"translate(1400.57 1559.012) rotate(43)\" fill=\"#989898\"></rect><rect width=\"12\" height=\"38\" rx=\"6\" transform=\"matrix(-0.588, 0.809, -0.809, -0.588, 1408.898, 1487.314)\" fill=\"#989898\"></rect><rect width=\"12\" height=\"38\" rx=\"6\" transform=\"matrix(-0.588, 0.809, -0.809, -0.588, 1513.898, 1576.314)\" fill=\"#989898\"></rect></g></svg>\r\n\r\nconst NoDataFound = ({ title, subTitle, small = true }) => {\r\n    return (<>\r\n    <div className=\"no-item-show\">\r\n            <div className=\"mb10\">\r\n                { ICN_NODATA_BIG}\r\n            </div>\r\n            <h5 className=\"no-title\">{title}</h5>\r\n            <p className=\"no-micro\">{subTitle}</p>\r\n    </div>\r\n</>)\r\n}\r\n\r\nexport default NoDataFound;","C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Screens\\Course\\CourseDetails.js",[],"C:\\Users\\goutlaks\\TrainSoft-Labs\\trainsoft-ui\\src\\Components\\Common\\CalenderGraph\\CalenderGraph.js",[],{"ruleId":"344","replacedBy":"345"},{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","severity":1,"message":"349","line":5,"column":8,"nodeType":"350","messageId":"351","endLine":5,"endColumn":14},{"ruleId":"348","severity":1,"message":"352","line":6,"column":8,"nodeType":"350","messageId":"351","endLine":6,"endColumn":15},{"ruleId":"348","severity":1,"message":"353","line":1,"column":10,"nodeType":"350","messageId":"351","endLine":1,"endColumn":16},{"ruleId":"348","severity":1,"message":"354","line":2,"column":18,"nodeType":"350","messageId":"351","endLine":2,"endColumn":22},{"ruleId":"344","replacedBy":"355"},{"ruleId":"346","replacedBy":"356"},{"ruleId":"348","severity":1,"message":"357","line":7,"column":31,"nodeType":"350","messageId":"351","endLine":7,"endColumn":37},{"ruleId":"358","severity":1,"message":"359","line":76,"column":33,"nodeType":"360","endLine":76,"endColumn":50},{"ruleId":"358","severity":1,"message":"359","line":76,"column":62,"nodeType":"360","endLine":76,"endColumn":78},{"ruleId":"348","severity":1,"message":"361","line":10,"column":8,"nodeType":"350","messageId":"351","endLine":10,"endColumn":16},{"ruleId":"348","severity":1,"message":"362","line":3,"column":10,"nodeType":"350","messageId":"351","endLine":3,"endColumn":16},{"ruleId":"348","severity":1,"message":"363","line":4,"column":10,"nodeType":"350","messageId":"351","endLine":4,"endColumn":18},{"ruleId":"348","severity":1,"message":"364","line":5,"column":10,"nodeType":"350","messageId":"351","endLine":5,"endColumn":14},{"ruleId":"348","severity":1,"message":"365","line":10,"column":7,"nodeType":"350","messageId":"351","endLine":10,"endColumn":20},{"ruleId":"348","severity":1,"message":"366","line":24,"column":25,"nodeType":"350","messageId":"351","endLine":24,"endColumn":40},{"ruleId":"348","severity":1,"message":"367","line":4,"column":10,"nodeType":"350","messageId":"351","endLine":4,"endColumn":18},{"ruleId":"368","severity":1,"message":"369","line":19,"column":8,"nodeType":"370","endLine":19,"endColumn":19,"suggestions":"371"},{"ruleId":"348","severity":1,"message":"372","line":1,"column":19,"nodeType":"350","messageId":"351","endLine":1,"endColumn":28},{"ruleId":"348","severity":1,"message":"373","line":3,"column":22,"nodeType":"350","messageId":"351","endLine":3,"endColumn":31},{"ruleId":"348","severity":1,"message":"374","line":3,"column":81,"nodeType":"350","messageId":"351","endLine":3,"endColumn":94},{"ruleId":"348","severity":1,"message":"375","line":3,"column":96,"nodeType":"350","messageId":"351","endLine":3,"endColumn":104},{"ruleId":"348","severity":1,"message":"376","line":9,"column":12,"nodeType":"350","messageId":"351","endLine":9,"endColumn":19},{"ruleId":"348","severity":1,"message":"377","line":9,"column":20,"nodeType":"350","messageId":"351","endLine":9,"endColumn":30},{"ruleId":"348","severity":1,"message":"378","line":10,"column":12,"nodeType":"350","messageId":"351","endLine":10,"endColumn":19},{"ruleId":"348","severity":1,"message":"379","line":10,"column":20,"nodeType":"350","messageId":"351","endLine":10,"endColumn":30},{"ruleId":"348","severity":1,"message":"380","line":8,"column":67,"nodeType":"350","messageId":"351","endLine":8,"endColumn":78},{"ruleId":"348","severity":1,"message":"381","line":8,"column":80,"nodeType":"350","messageId":"351","endLine":8,"endColumn":88},{"ruleId":"348","severity":1,"message":"382","line":2,"column":28,"nodeType":"350","messageId":"351","endLine":2,"endColumn":38},{"ruleId":"348","severity":1,"message":"383","line":2,"column":8,"nodeType":"350","messageId":"351","endLine":2,"endColumn":17},{"ruleId":"348","severity":1,"message":"384","line":4,"column":10,"nodeType":"350","messageId":"351","endLine":4,"endColumn":15},{"ruleId":"348","severity":1,"message":"385","line":6,"column":31,"nodeType":"350","messageId":"351","endLine":6,"endColumn":40},{"ruleId":"348","severity":1,"message":"383","line":10,"column":8,"nodeType":"350","messageId":"351","endLine":10,"endColumn":17},{"ruleId":"348","severity":1,"message":"385","line":6,"column":31,"nodeType":"350","messageId":"351","endLine":6,"endColumn":40},{"ruleId":"386","severity":1,"message":"387","line":128,"column":80,"nodeType":"388","endLine":128,"endColumn":103},{"ruleId":"348","severity":1,"message":"389","line":1,"column":7,"nodeType":"350","messageId":"351","endLine":1,"endColumn":24},{"ruleId":"348","severity":1,"message":"390","line":22,"column":7,"nodeType":"350","messageId":"351","endLine":22,"endColumn":25},{"ruleId":"348","severity":1,"message":"391","line":59,"column":7,"nodeType":"350","messageId":"351","endLine":59,"endColumn":10},{"ruleId":"348","severity":1,"message":"392","line":1,"column":10,"nodeType":"350","messageId":"351","endLine":1,"endColumn":18},{"ruleId":"348","severity":1,"message":"393","line":2,"column":18,"nodeType":"350","messageId":"351","endLine":2,"endColumn":30},{"ruleId":"348","severity":1,"message":"394","line":2,"column":31,"nodeType":"350","messageId":"351","endLine":2,"endColumn":42},{"ruleId":"348","severity":1,"message":"395","line":2,"column":10,"nodeType":"350","messageId":"351","endLine":2,"endColumn":18},{"ruleId":"348","severity":1,"message":"383","line":4,"column":8,"nodeType":"350","messageId":"351","endLine":4,"endColumn":17},{"ruleId":"348","severity":1,"message":"396","line":5,"column":10,"nodeType":"350","messageId":"351","endLine":5,"endColumn":22},{"ruleId":"348","severity":1,"message":"365","line":20,"column":7,"nodeType":"350","messageId":"351","endLine":20,"endColumn":20},{"ruleId":"348","severity":1,"message":"397","line":1,"column":10,"nodeType":"350","messageId":"351","endLine":1,"endColumn":18},{"ruleId":"348","severity":1,"message":"383","line":5,"column":8,"nodeType":"350","messageId":"351","endLine":5,"endColumn":17},{"ruleId":"348","severity":1,"message":"398","line":6,"column":7,"nodeType":"350","messageId":"351","endLine":6,"endColumn":17},{"ruleId":"399","severity":1,"message":"400","line":17,"column":168,"nodeType":"401","messageId":"402","endLine":17,"endColumn":169},{"ruleId":"399","severity":1,"message":"400","line":17,"column":231,"nodeType":"401","messageId":"402","endLine":17,"endColumn":234},{"ruleId":"368","severity":1,"message":"403","line":178,"column":8,"nodeType":"370","endLine":178,"endColumn":20,"suggestions":"404"},{"ruleId":"368","severity":1,"message":"405","line":188,"column":8,"nodeType":"370","endLine":188,"endColumn":44,"suggestions":"406"},{"ruleId":"368","severity":1,"message":"407","line":193,"column":8,"nodeType":"370","endLine":193,"endColumn":71,"suggestions":"408"},{"ruleId":"348","severity":1,"message":"409","line":7,"column":7,"nodeType":"350","messageId":"351","endLine":7,"endColumn":16},{"ruleId":"368","severity":1,"message":"410","line":82,"column":8,"nodeType":"370","endLine":82,"endColumn":26,"suggestions":"411"},{"ruleId":"348","severity":1,"message":"412","line":4,"column":10,"nodeType":"350","messageId":"351","endLine":4,"endColumn":19},{"ruleId":"348","severity":1,"message":"375","line":4,"column":21,"nodeType":"350","messageId":"351","endLine":4,"endColumn":29},{"ruleId":"348","severity":1,"message":"413","line":4,"column":31,"nodeType":"350","messageId":"351","endLine":4,"endColumn":42},{"ruleId":"348","severity":1,"message":"414","line":4,"column":99,"nodeType":"350","messageId":"351","endLine":4,"endColumn":110},{"ruleId":"348","severity":1,"message":"415","line":4,"column":112,"nodeType":"350","messageId":"351","endLine":4,"endColumn":122},{"ruleId":"348","severity":1,"message":"397","line":1,"column":17,"nodeType":"350","messageId":"351","endLine":1,"endColumn":25},{"ruleId":"348","severity":1,"message":"416","line":1,"column":8,"nodeType":"350","messageId":"351","endLine":1,"endColumn":13},{"ruleId":"348","severity":1,"message":"417","line":1,"column":8,"nodeType":"350","messageId":"351","endLine":1,"endColumn":18},{"ruleId":"348","severity":1,"message":"418","line":1,"column":8,"nodeType":"350","messageId":"351","endLine":1,"endColumn":15},{"ruleId":"348","severity":1,"message":"419","line":10,"column":7,"nodeType":"350","messageId":"351","endLine":10,"endColumn":17},"no-native-reassign",["420"],"no-negated-in-lhs",["421"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","'render' is defined but never used.","'Link' is defined but never used.",["420"],["421"],"'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SendIcon' is defined but never used.","'Formik' is defined but never used.","'BtnRound' is defined but never used.","'Form' is defined but never used.","'createBatches' is assigned a value but never used.","'setDoughnutData' is assigned a value but never used.","'ICN_PLAY' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setFromClose'. Either include it or remove the dependency array. If 'setFromClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["422"],"'useEffect' is defined but never used.","'ICN_PAINT' is defined but never used.","'ICN_CALL_MADE' is defined but never used.","'ICN_EDIT' is defined but never used.","'canRedo' is assigned a value but never used.","'setCanRedo' is assigned a value but never used.","'drawing' is assigned a value but never used.","'setDrawing' is assigned a value but never used.","'ICN_PUBLISH' is defined but never used.","'ICN_SAVE' is defined but never used.","'ICN_SEARCH' is defined but never used.","'SearchBox' is defined but never used.","'Modal' is defined but never used.","'ICN_CLOSE' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'someJSCodeExample' is assigned a value but never used.","'someCSSCodeExample' is assigned a value but never used.","'sql' is assigned a value but never used.","'Children' is defined but never used.","'ICN_CALENDER' is defined but never used.","'ICN_SETTING' is defined but never used.","'navigate' is defined but never used.","'ICN_ON_GOING' is defined but never used.","'useState' is defined but never used.","'htmlParser' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '>' and '!=='.","BinaryExpression","unexpectedMixedOperator","React Hook useEffect has a missing dependency: 'isSelectedAll'. Either include it or remove the dependency array.",["423"],"React Hook useEffect has a missing dependency: 'onSelectAll'. Either include it or remove the dependency array.",["424"],"React Hook useEffect has missing dependencies: 'props.configuration' and 'sourceData'. Either include them or remove the dependency array. You can also do a functional update 'setSourceData(s => ...)' if you only need 'sourceData' in the 'setSourceData' call.",["425"],"'dummyData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initPagination'. Either include it or remove the dependency array.",["426"],"'ICN_TRASH' is defined but never used.","'ICN_BATCHES' is defined but never used.","'ICN_EMAIL_W' is defined but never used.","'ICN_TEXT_W' is defined but never used.","'React' is defined but never used.","'useSpinner' is defined but never used.","'Session' is defined but never used.","'ICN_NODATA' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},"Update the dependencies array to be: [fromClose, setFromClose]",{"range":"437","text":"438"},"Update the dependencies array to be: [isSelectedAll, sourceData]",{"range":"439","text":"440"},"Update the dependencies array to be: [onSelectAll, props.configuration.clearSelection]",{"range":"441","text":"442"},"Update the dependencies array to be: [props.configuration, props.configuration.sortBy, props.configuration.sortDirection, sourceData]",{"range":"443","text":"444"},"Update the dependencies array to be: [initPagination, props.totalCount]",{"range":"445","text":"446"},[645,656],"[fromClose, setFromClose]",[9318,9330],"[isSelectedAll, sourceData]",[9695,9731],"[onSelectAll, props.configuration.clearSelection]",[10008,10071],"[props.configuration, props.configuration.sortBy, props.configuration.sortDirection, sourceData]",[3196,3214],"[initPagination, props.totalCount]"]